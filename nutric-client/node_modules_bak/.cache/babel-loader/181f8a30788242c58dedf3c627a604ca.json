{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/workspace/nutric-client/src/Main/containers/Dashboard.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route, withRouter, Redirect } from 'react-router-dom'; // ACTIONS\n\nimport { removeError } from '../store/actions/errors';\nimport { authUser } from '../store/actions/auth'; // COMPONENTS\n// import Homepage from '../components/Homepage';\n\nimport AuthForm from '../components/AuthForm';\nimport HomeMain from './Home/HomeMain';\nimport PatientsMain from \"./Patients/PatientsMain\";\nimport Header from './Header';\n\nvar Dashboard = function Dashboard(props) {\n  var authUser = props.authUser,\n      errors = props.errors,\n      removeError = props.removeError,\n      currentUser = props.currentUser;\n  console.log(currentUser);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: function render(props) {\n      return React.createElement(Redirect, {\n        to: \"/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/inicio\",\n    render: function render(props) {\n      return React.createElement(HomeMain, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/pacientes\",\n    render: function render(props) {\n      return React.createElement(PatientsMain, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    render: function render(props) {\n      return React.createElement(AuthForm, Object.assign({\n        removeError: removeError,\n        errors: errors,\n        onAuth: authUser,\n        buttonText: \"Inicia Sesi\\xF3n\",\n        heading: \"Welcome Back.\"\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/signup\",\n    render: function render(props) {\n      return React.createElement(AuthForm, Object.assign({\n        removeError: removeError,\n        errors: errors,\n        onAuth: authUser,\n        signUp: true,\n        buttonText: \"Registro\",\n        heading: \"\\xDAnete a Nutric.io\"\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    currentUser: state.currentUser,\n    errors: state.errors\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, {\n  authUser: authUser,\n  removeError: removeError\n})(Dashboard));","map":{"version":3,"sources":["/home/ubuntu/workspace/nutric-client/src/Main/containers/Dashboard.js"],"names":["React","connect","Switch","Route","withRouter","Redirect","removeError","authUser","AuthForm","HomeMain","PatientsMain","Header","Dashboard","props","errors","currentUser","console","log","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\nimport {Switch, Route, withRouter,Redirect} from 'react-router-dom';\n\n// ACTIONS\nimport {removeError} from '../store/actions/errors'\nimport { authUser } from '../store/actions/auth';\n\n// COMPONENTS\n// import Homepage from '../components/Homepage';\nimport AuthForm from '../components/AuthForm';\nimport HomeMain from './Home/HomeMain';\nimport PatientsMain from \"./Patients/PatientsMain\";\nimport Header from './Header'\nconst Dashboard = props => {\n  const { authUser, errors, removeError, currentUser } = props;\n  console.log(currentUser);\n\n  return (\n      <div>\n        <Header/>\n        <Switch>\n          <Route \n            exact \n            path=\"/\" \n            render={props => ( <Redirect to='/home' /> )}\n          />\n          <Route \n            exact \n            path=\"/inicio\" \n            render={props => {\n              return (\n                <HomeMain />\n              );\n            }}\n          />\n          <Route \n            exact \n            path=\"/pacientes\" \n            render={props => {\n              return(\n                <PatientsMain />\n              );\n            }}\n          />\n{/*=========== AUTH FORMS SOLO PARA DEVELOPMENT, VAN EN LANDING ==========*/}\n            { /*Acceso a Homepage, como referencia*/ }\n            { /*<Homepage currentUser={currentUser} {...props} />*/ }\n\n          <Route \n            exact \n            path=\"/login\" \n            render={props => {\n              return(\n                <AuthForm removeError={removeError} errors={errors} onAuth={authUser} buttonText=\"Inicia Sesión\" heading=\"Welcome Back.\" {...props} />\n              );\n            }}\n          />\n          <Route \n            exact \n            path=\"/signup\" \n            render={props => {\n              return(\n                <AuthForm removeError={removeError} errors={errors} onAuth={authUser} signUp buttonText=\"Registro\" heading=\"Únete a Nutric.io\" {...props} />\n              );\n            }}\n          />\n{/*=========== AUTH FORMS SOLO PARA DEVELOPMENT, VAN EN LANDING ==========*/}\n        </Switch>\n      </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    currentUser: state.currentUser,\n    errors:state.errors\n  }\n}\n\n\nexport default withRouter(connect(mapStateToProps,{ authUser, removeError })(Dashboard))"]},"metadata":{},"sourceType":"module"}