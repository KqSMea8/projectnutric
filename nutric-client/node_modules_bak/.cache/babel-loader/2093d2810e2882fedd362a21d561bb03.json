{"ast":null,"code":"import _toConsumableArray from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ubuntu/workspace/nutric-client/src/Main/containers/MealPlans/MealPlanCreate.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchFoods } from '../../store/actions/foods';\nimport SearchBar from '../../components/MealPlans/SearchBar';\n\nvar MealPlanCreate =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MealPlanCreate, _Component);\n\n  function MealPlanCreate() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MealPlanCreate);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MealPlanCreate)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      lunes: [[]]\n    };\n\n    _this.handleClickPlus = function (e) {\n      _this.setState({\n        lunes: _toConsumableArray(_this.state.lunes[0]).concat([e.target.parentElement.parentElement.cells[0].innerText])\n      });\n    };\n\n    _this.AddNewMeal = function (e) {\n      _this.setState({\n        lunes: _toConsumableArray(_this.state.lunes).concat([[]])\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MealPlanCreate, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var numeroDeComidas = this.state.lunes.length;\n      console.log(this.state);\n      var foods = this.props.foods; //styles\n\n      var tableStyle = {\n        borderCollapse: 'collapse',\n        width: '50%'\n      };\n      var dataStyle = {\n        border: '1px solid #dddddd',\n        textAlign: 'center',\n        padding: '8px'\n      };\n      var headingsStyle = {\n        backgroundColor: '#dddddd',\n        width: '100%'\n      };\n      console.log(this.props);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/dietas\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Click para ir a /dietas \"), this.state.lunes.map(function (comidas, key) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \" Comida \", numeroDeComidas, \" \"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \" \", key, \") \", comidas));\n      }), React.createElement(\"button\", {\n        onClick: this.AddNewMeal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \" Agregar Comida \"), React.createElement(SearchBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), foods.map(function (food, key) {\n        return React.createElement(\"div\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(\"table\", {\n          style: tableStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          style: headingsStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, \"Nombre\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"Calorias\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, \"Proteinas\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \"Carbohidratos\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, \"Grasas\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \"Agregar alimento \")), React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          style: dataStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, food.foodName), React.createElement(\"td\", {\n          style: dataStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, food.calories_kcal), React.createElement(\"td\", {\n          style: dataStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, food.protein_g), React.createElement(\"td\", {\n          style: dataStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, food.carbs_g), React.createElement(\"td\", {\n          style: dataStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, food.fat_g), React.createElement(\"td\", {\n          style: dataStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: _this2.handleClickPlus,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, \" + \")))));\n      }));\n    }\n  }]);\n\n  return MealPlanCreate;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    foods: state.foods,\n    currentUserId: state.currentUser.user.id\n  };\n}\n\n;\nexport default connect(mapStateToProps, {\n  fetchFoods: fetchFoods\n})(MealPlanCreate);","map":{"version":3,"sources":["/home/ubuntu/workspace/nutric-client/src/Main/containers/MealPlans/MealPlanCreate.js"],"names":["React","Component","connect","Link","fetchFoods","SearchBar","MealPlanCreate","state","lunes","handleClickPlus","e","setState","target","parentElement","cells","innerText","AddNewMeal","numeroDeComidas","length","console","log","foods","props","tableStyle","borderCollapse","width","dataStyle","border","textAlign","padding","headingsStyle","backgroundColor","map","comidas","key","food","foodName","calories_kcal","protein_g","carbs_g","fat_g","mapStateToProps","currentUserId","currentUser","user","id"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport {fetchFoods} from '../../store/actions/foods'\nimport SearchBar from '../../components/MealPlans/SearchBar'\n\nclass MealPlanCreate extends Component{\n  state= { \n    lunes:[\n      []],\n    \n    \n  };\n  \n  \n  \n  handleClickPlus = (e) => {\n    this.setState( { lunes:[ \n      ...this.state.lunes[0], (e.target).parentElement.parentElement.cells[0].innerText]\n      })\n  };\n \n AddNewMeal = (e) => {\n   this.setState( { lunes:[\n      ...this.state.lunes,[]\n      ]})\n   \n }\n \n\n  render(){\n    \n     let numeroDeComidas = this.state.lunes.length\n  \n     console.log(this.state) \n     \n    const {foods}=this.props\n    //styles\n    const tableStyle = {\n      borderCollapse: 'collapse',\n      width: '50%'\n    }\n    const dataStyle = {\n      border: '1px solid #dddddd',\n      textAlign: 'center',\n      padding: '8px',\n    }\n    const headingsStyle = {\n      backgroundColor: '#dddddd',\n      width: '100%'\n    }\n    \n    \n    \n    console.log(this.props);\n    return(\n      <div>\n        <Link to='/dietas'>Click para ir a /dietas </Link>  \n        \n     \n        \n        \n        {this.state.lunes.map((comidas,key)=>{\n        return(\n        <div>\n          <h4> Comida {numeroDeComidas} </h4>\n           <p> {key}) {comidas}</p>\n        </div>\n         )\n       }) \n                           \n        }\n        <button onClick={this.AddNewMeal}> Agregar Comida </button>\n        \n        <SearchBar/>\n        \n          {foods.map((food, key) => {\n            return (\n              <div key={key}>\n                <table style={tableStyle}>\n                  <tr style={headingsStyle}>\n                    <th>Nombre</th>\n                    <th>Calorias</th>\n                    <th>Proteinas</th>\n                    <th>Carbohidratos</th>\n                    <th>Grasas</th>\n                    <th>Agregar alimento </th>\n                  </tr>\n                  <tr>\n                    <td style={dataStyle} >{food.foodName}</td>\n                    <td style={dataStyle} >{food.calories_kcal}</td>\n                    <td style={dataStyle} >{food.protein_g}</td>\n                    <td style={dataStyle} >{food.carbs_g}</td>\n                    <td style={dataStyle} >{food.fat_g}</td>\n                    <td style={dataStyle} ><button onClick={this.handleClickPlus}> + </button></td>\n                  </tr>\n                </table>\n             </div>\n            );\n          })}\n      </div>\n      );\n  }}\n  \n  \nfunction mapStateToProps(state){\n  return{\n    foods: state.foods,\n    currentUserId: state.currentUser.user.id\n  };\n};\n\n  \nexport default connect(mapStateToProps, {fetchFoods})(MealPlanCreate);\n\n"]},"metadata":{},"sourceType":"module"}