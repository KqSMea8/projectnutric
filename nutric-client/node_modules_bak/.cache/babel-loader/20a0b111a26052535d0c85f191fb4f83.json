{"ast":null,"code":"import _defineProperty from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ubuntu/workspace/nutric-client/src/Main/containers/MealPlans/MealPlanCreate.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles, MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { fetchFoods } from '../../store/actions/foods';\nimport SearchBar from '../../components/MealPlans/SearchBar';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Clear from '@material-ui/icons/Clear';\nimport Input from '@material-ui/core/Input';\nimport Check from '@material-ui/icons/Check';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport { TimePicker, Table } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepButton from '@material-ui/core/StepButton';\nimport Typography from '@material-ui/core/Typography';\nimport green from '@material-ui/core/colors/green';\nimport classNames from 'classnames';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Hidden from '@material-ui/core/Hidden';\nimport { Pie } from 'react-chartjs-2';\nimport Sticky from '@wicked_query/react-sticky';\nimport { Alert } from 'antd';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '100%'\n    },\n    button: {\n      marginRight: theme.spacing.unit\n    },\n    completed: {\n      display: 'inline-block'\n    },\n    tPicker: {\n      width: \"100%\"\n    },\n    buttonSuccess: {\n      backgroundColor: green[500],\n      '&:hover': {\n        backgroundColor: green[700]\n      }\n    },\n    fabProgress: {\n      color: green[500],\n      position: 'absolute',\n      top: -6,\n      left: -6,\n      zIndex: 1\n    },\n    buttonProgress: {\n      color: green[500],\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      marginTop: -12,\n      marginLeft: -12\n    },\n    wrapper: {\n      margin: theme.spacing.unit,\n      position: 'relative'\n    }\n  };\n};\n\nvar theme = createMuiTheme({\n  palette: {\n    primary: green\n  },\n  typography: {\n    useNextVariants: true\n  }\n});\n\nfunction getSteps() {\n  return ['Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado', 'Domingo'];\n}\n\nvar MealPlanCreate =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MealPlanCreate, _Component);\n\n  function MealPlanCreate(props) {\n    var _this$state;\n\n    var _this;\n\n    _classCallCheck(this, MealPlanCreate);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MealPlanCreate).call(this, props));\n\n    _this.addNewMealButton = function (daySelected) {\n      var copy = _this.state.mealPlan;\n      var updated = copy.days[daySelected].meals.push({\n        mealName: \"\",\n        mealTime: moment().set({\n          hour: 8,\n          minute: 30,\n          second: 0,\n          millisecond: 0\n        }),\n        recipes: []\n      });\n\n      _this.setState({\n        mealPlan: copy\n      });\n    };\n\n    _this.addNewRecipeButton = function (selected, identifier) {\n      var copy = _this.state.mealPlan;\n      var updated = copy.days[identifier[0]].meals[identifier[1]].recipes.push({\n        type: selected.foodName,\n        calories_kcal: selected.calories_kcal,\n        protein_g: selected.protein_g,\n        carbs_g: selected.carbs_g,\n        fat_g: selected.fat_g\n      });\n\n      _this.setState({\n        mealPlan: copy\n      });\n    };\n\n    _this.deleteRecipeButton = function (identifier) {\n      var copy = _this.state.mealPlan;\n      var updated = copy.days[identifier[0]].meals[identifier[1]].recipes.splice(identifier[2], 1);\n\n      _this.setState({\n        mealPlan: copy\n      });\n    };\n\n    _this.deleteMealButton = function (identifier) {\n      var copy = _this.state.mealPlan;\n      var updated = copy.days[identifier[0]].meals.splice(identifier[1], 1);\n\n      _this.setState({\n        mealPlan: copy\n      });\n    };\n\n    _this.totalSteps = function () {\n      return getSteps().length;\n    };\n\n    _this.handleNext = function () {\n      var dayIndex;\n\n      if (_this.isLastStep() && !_this.allStepsCompleted()) {\n        // It's the last step, but not all steps have been completed,\n        // find the first step that has been completed\n        var steps = getSteps();\n        dayIndex = steps.findIndex(function (step, i) {\n          return !(i in _this.state.completed);\n        });\n      } else {\n        dayIndex = _this.state.dayIndex + 1;\n      }\n\n      _this.setState({\n        dayIndex: dayIndex\n      });\n    };\n\n    _this.handleBack = function () {\n      _this.setState(function (state) {\n        return {\n          dayIndex: state.dayIndex - 1\n        };\n      });\n    };\n\n    _this.handleStep = function (step) {\n      return function () {\n        _this.setState({\n          dayIndex: step\n        });\n      };\n    };\n\n    _this.handleComplete = function () {\n      var completed = _this.state.completed;\n      completed[_this.state.dayIndex] = true;\n\n      _this.setState({\n        completed: completed\n      });\n\n      _this.handleNext();\n    };\n\n    _this.handleReset = function () {\n      _this.setState({\n        dayIndex: 0,\n        completed: {}\n      });\n    };\n\n    _this.mealCalories = function (array) {\n      var totalCalories = 0;\n      var totalNutrient = array.recipes.map(function (meal) {\n        totalCalories += meal.calories_kcal;\n      });\n      return Math.round(totalCalories * 100) / 100;\n    };\n\n    _this.handleFinishButton = function () {\n      if (!_this.state.loading) {\n        _this.setState({\n          success: false,\n          loading: true\n        }, function () {\n          _this.timer = setTimeout(function () {\n            _this.setState({\n              loading: false,\n              success: true\n            });\n\n            var completed = _this.state.completed;\n            completed[_this.state.dayIndex] = true;\n\n            _this.setState({\n              completed: completed\n            });\n\n            _this.handleNext();\n          }, 2000);\n        });\n      }\n    };\n\n    _this.totalNutrients = function (dayIdx) {\n      var totalCalories = 0;\n      var totalProt = 0;\n      var totalCarbs = 0;\n      var totalFat = 0;\n\n      _this.state.mealPlan.days[dayIdx].meals.map(function (meal) {\n        var mealCalories = 0;\n        var mealProt = 0;\n        var mealCarbs = 0;\n        var mealFat = 0;\n        meal.recipes.map(function (food) {\n          mealCalories += food.calories_kcal;\n          mealProt += food.protein_g;\n          mealCarbs += food.carbs_g;\n          mealFat += food.fat_g;\n        });\n        totalCalories += mealCalories;\n        totalProt += mealProt;\n        totalCarbs += mealCarbs;\n        totalFat += mealFat;\n      });\n\n      return [Math.round(totalCalories * 100) / 100, Math.round(totalProt * 100) / 100, Math.round(totalCarbs * 100) / 100, Math.round(totalFat * 100) / 100];\n    };\n\n    _this.getSummaryTable = function (dayIdx) {\n      var macros = [\"Calorías (kcal)\", \"Proteína (g)\", \"Grasa (g)\", \"Carbohidratos (g)\"]; //get target\n\n      var targetMacro = [_this.state.mealPlan.days[dayIdx].dailyCalories, _this.state.mealPlan.days[dayIdx].dailyProtein, _this.state.mealPlan.days[dayIdx].dailyFat, _this.state.mealPlan.days[dayIdx].dailyCarbs]; //get actual\n\n      var total = _this.totalNutrients(dayIdx); //get difference\n\n\n      var dataList = macros.map(function (macro, macroIndex) {\n        return {\n          key: macroIndex,\n          macro: macro,\n          actual: total[macroIndex],\n          target: targetMacro[macroIndex],\n          remain: Math.round((targetMacro[macroIndex] - total[macroIndex]) * 100) / 100\n        };\n      });\n      return dataList;\n    };\n\n    _this.state = (_this$state = {\n      mealPlan: {\n        mealPlanName: \"Dieta Tonificación\",\n        days: [{\n          dayName: \"Lunes\",\n          dailyCalories: 3000,\n          dailyProtein: 200,\n          dailyCarbs: 400,\n          dailyFat: 250,\n          meals: [{\n            mealName: \"Desayuno\",\n            mealTime: moment().set({\n              hour: 7,\n              minute: 30,\n              second: 0,\n              millisecond: 0\n            }).toDate(),\n            recipes: [{\n              type: \"1 vaso de bebida de soya sin azúcar\",\n              calories_kcal: Math.random() * 300,\n              protein_g: Math.random() * 25,\n              carbs_g: Math.random() * 50,\n              fat_g: Math.random() * 30\n            }, {\n              type: \"1 pan pita integral con 6 aceitunas\",\n              calories_kcal: Math.random() * 300,\n              protein_g: Math.random() * 25,\n              carbs_g: Math.random() * 50,\n              fat_g: Math.random() * 30\n            }, {\n              type: \"40g de queso light\",\n              calories_kcal: Math.random() * 300,\n              protein_g: Math.random() * 25,\n              carbs_g: Math.random() * 50,\n              fat_g: Math.random() * 30\n            }]\n          }, {\n            mealName: \"Post-Entreno\",\n            mealTime: moment().set({\n              hour: 10,\n              minute: 45,\n              second: 0,\n              millisecond: 0\n            }).toDate(),\n            recipes: [{\n              type: \"2 scoops de proteína vegana\",\n              calories_kcal: Math.random() * 300,\n              protein_g: Math.random() * 25,\n              carbs_g: Math.random() * 50,\n              fat_g: Math.random() * 30\n            }, {\n              type: \"1 plátano de seda\",\n              calories_kcal: Math.random() * 300,\n              protein_g: Math.random() * 25,\n              carbs_g: Math.random() * 50,\n              fat_g: Math.random() * 30\n            }]\n          }, {\n            mealName: \"Almuerzo\",\n            mealTime: moment().set({\n              hour: 13,\n              minute: 30,\n              second: 0,\n              millisecond: 0\n            }).toDate(),\n            recipes: [{\n              type: \"Ensalada de pepinillos, pimientos, espinaca y brócoli\",\n              calories_kcal: Math.random() * 300,\n              protein_g: Math.random() * 25,\n              carbs_g: Math.random() * 50,\n              fat_g: Math.random() * 30\n            }, {\n              type: \"2 tazas de carne de soya aderezada\",\n              calories_kcal: Math.random() * 300,\n              protein_g: Math.random() * 25,\n              carbs_g: Math.random() * 50,\n              fat_g: Math.random() * 30\n            }, {\n              type: \"1 camote grande al horno\",\n              calories_kcal: Math.random() * 300,\n              protein_g: Math.random() * 25,\n              carbs_g: Math.random() * 50,\n              fat_g: Math.random() * 30\n            }]\n          }, {\n            mealName: \"Media Tarde\",\n            mealTime: moment().set({\n              hour: 17,\n              minute: 0,\n              second: 0,\n              millisecond: 0\n            }).toDate(),\n            recipes: [{\n              type: \"1 naranja\",\n              calories_kcal: Math.random() * 300,\n              protein_g: Math.random() * 25,\n              carbs_g: Math.random() * 50,\n              fat_g: Math.random() * 30\n            }, {\n              type: \"1 taza de té verde\",\n              calories_kcal: Math.random() * 300,\n              protein_g: Math.random() * 25,\n              carbs_g: Math.random() * 50,\n              fat_g: Math.random() * 30\n            }]\n          }, {\n            mealName: \"Cena\",\n            mealTime: moment().set({\n              hour: 20,\n              minute: 30,\n              second: 0,\n              millisecond: 0\n            }).toDate(),\n            recipes: [{\n              type: \"2 scoops de proteína vegana\",\n              calories_kcal: Math.random() * 300,\n              protein_g: Math.random() * 25,\n              carbs_g: Math.random() * 50,\n              fat_g: Math.random() * 30\n            }, {\n              type: \"1/2 almuerzo\",\n              calories_kcal: Math.random() * 300,\n              protein_g: Math.random() * 25,\n              carbs_g: Math.random() * 50,\n              fat_g: Math.random() * 30\n            }]\n          }]\n        }, {\n          dayName: \"Martes\",\n          meals: [{\n            mealName: \"Desayuno\",\n            mealTime: moment().set({\n              hour: 8,\n              minute: 30,\n              second: 0,\n              millisecond: 0\n            }).toDate(),\n            recipes: []\n          }]\n        }, {\n          dayName: \"Miércoles\",\n          meals: [{\n            mealName: \"\",\n            mealTime: moment().set({\n              hour: 8,\n              minute: 30,\n              second: 0,\n              millisecond: 0\n            }).toDate(),\n            recipes: []\n          }]\n        }, {\n          dayName: \"Jueves\",\n          meals: [{\n            mealName: \"\",\n            mealTime: moment().set({\n              hour: 8,\n              minute: 30,\n              second: 0,\n              millisecond: 0\n            }).toDate(),\n            recipes: []\n          }]\n        }, {\n          dayName: \"Viernes\",\n          meals: [{\n            mealName: \"\",\n            mealTime: moment().set({\n              hour: 8,\n              minute: 30,\n              second: 0,\n              millisecond: 0\n            }).toDate(),\n            recipes: []\n          }]\n        }, {\n          dayName: \"Sábado\",\n          meals: [{\n            mealName: \"\",\n            mealTime: moment().set({\n              hour: 8,\n              minute: 30,\n              second: 0,\n              millisecond: 0\n            }).toDate(),\n            recipes: []\n          }]\n        }, {\n          dayName: \"Domingo\",\n          meals: [{\n            mealName: \"\",\n            mealTime: moment().set({\n              hour: 8,\n              minute: 30,\n              second: 0,\n              millisecond: 0\n            }).toDate(),\n            recipes: []\n          }]\n        }]\n      },\n      selectedFood: \"\",\n      selectedInputRef: \"\",\n      dayIndex: 0,\n      completed: {}\n    }, _defineProperty(_this$state, \"dayIndex\", 0), _defineProperty(_this$state, \"loading\", false), _defineProperty(_this$state, \"success\", false), _this$state);\n    return _this;\n  }\n\n  _createClass(MealPlanCreate, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.timer);\n    }\n  }, {\n    key: \"completedSteps\",\n    value: function completedSteps() {\n      return Object.keys(this.state.completed).length;\n    }\n  }, {\n    key: \"isLastStep\",\n    value: function isLastStep() {\n      return this.state.dayIndex === this.totalSteps() - 1;\n    }\n  }, {\n    key: \"allStepsCompleted\",\n    value: function allStepsCompleted() {\n      return this.completedSteps() === this.totalSteps();\n    } //Pie chart\n\n  }, {\n    key: \"pieData\",\n    value: function pieData(array) {\n      function totalNutrients() {\n        var totalProt = 0,\n            totalFat = 0,\n            totalCarbs = 0;\n        var totalNutrient = array.recipes.map(function (meal) {\n          totalProt += meal.protein_g;\n          totalFat += meal.fat_g;\n          totalCarbs += meal.carbs_g;\n        });\n        return [Math.round(totalProt * 100) / 100, Math.round(totalFat * 100) / 100, Math.round(totalCarbs * 100) / 100];\n      }\n\n      ;\n      var data = {\n        labels: ['Proteína (g)', 'Grasa (g)', 'Carbohidratos (g)'],\n        datasets: [{\n          data: totalNutrients(),\n          backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n          hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']\n        }]\n      };\n      return data;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      var steps = getSteps();\n      var dayIndex = this.state.dayIndex;\n      var buttonClassname = classNames(_defineProperty({}, classes.buttonSuccess, this.state.success));\n      var columns = [{\n        title: \"Macros del \".concat(getSteps()[dayIndex]),\n        dataIndex: 'macro',\n        width: 120\n      }, {\n        title: 'Actual',\n        dataIndex: 'actual',\n        width: 60\n      }, {\n        title: 'Objetivo',\n        dataIndex: 'target',\n        width: 75\n      }, {\n        title: 'Restante',\n        dataIndex: 'remain',\n        width: 78\n      }];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/dietas\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }, \"Click para ir a /dietas \"), React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514\n        },\n        __self: this\n      }, this.allStepsCompleted() ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        alignItems: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }, React.createElement(Alert, {\n        message: \"Has completado satisfactoriamente el plan alimenticio\",\n        description: \"Mandale p\",\n        type: \"success\",\n        showIcon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525\n        },\n        __self: this\n      }, \"RESUMEN DE HUEVADAS:\", this.state.mealPlan.toString()))), React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"secondary\",\n        onClick: this.handleReset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531\n        },\n        __self: this\n      }, \"Resetear\")) : React.createElement(Grid, {\n        container: true,\n        alignItems: \"center\",\n        justify: \"space-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        md: 5,\n        xs: 12,\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        inputProps: {\n          style: {\n            padding: \"10px 20px\",\n            textAlign: \"center\"\n          }\n        },\n        style: {\n          margin: \"20px 20px\"\n        },\n        id: \"outlined-bare\",\n        variant: \"filled\",\n        value: this.state.mealPlan.mealPlanName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536\n        },\n        __self: this\n      }), React.createElement(Stepper, {\n        nonLinear: true,\n        activeStep: dayIndex,\n        alternativeLabel: true,\n        style: {\n          padding: \"0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537\n        },\n        __self: this\n      }, steps.map(function (label, index) {\n        return React.createElement(Step, {\n          key: label,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 540\n          },\n          __self: this\n        }, React.createElement(StepButton, {\n          onClick: _this2.handleStep(index),\n          completed: _this2.state.completed[index],\n          icon: label.substr(0, 1),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 541\n          },\n          __self: this\n        }, label.substr(0, 3)));\n      }))), React.createElement(Grid, {\n        item: true,\n        md: 2,\n        xs: 12,\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553\n        },\n        __self: this\n      }), !this.allStepsCompleted() && React.createElement(Grid, {\n        item: true,\n        md: 5,\n        xs: 12,\n        style: {\n          textAlign: \"right\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556\n        },\n        __self: this\n      }, React.createElement(Sticky, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          backgroundColor: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558\n        },\n        __self: this\n      }, React.createElement(Table, {\n        columns: columns,\n        dataSource: this.getSummaryTable(dayIndex),\n        size: \"small\",\n        pagination: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567\n        },\n        __self: this\n      }, !this.allStepsCompleted() && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        key: dayIndex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571\n        },\n        __self: this\n      }, this.state.mealPlan.days[dayIndex].meals.map(function (meal, mealIndex) {\n        return React.createElement(\"div\", {\n          key: dayIndex + \"-\" + mealIndex,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 573\n          },\n          __self: this\n        }, React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 574\n          },\n          __self: this\n        }), React.createElement(Grid, {\n          container: true,\n          direction: \"row\",\n          justify: \"space-between\",\n          alignItems: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 575\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          md: 12,\n          xs: 12,\n          style: {\n            textAlign: \"center\",\n            margin: \"5px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 576\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          inputProps: {\n            style: {\n              padding: \"10px 5px\",\n              textAlign: \"center\",\n              fontSize: \"0.9rem\"\n            }\n          },\n          style: {\n            margin: \"0px 20px\"\n          },\n          id: \"outlined-bare\",\n          variant: \"outlined\",\n          value: meal.mealName == \"\" ? \"Comida \" + (mealIndex + 1) : meal.mealName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 577\n          },\n          __self: this\n        })), React.createElement(Grid, {\n          item: true,\n          md: 12,\n          xs: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 579\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 580\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          md: 1,\n          xs: 12,\n          style: {\n            textAlign: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 581\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          direction: \"row\",\n          justify: \"space-between\",\n          alignItems: \"center\",\n          style: {\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 582\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 583\n          },\n          __self: this\n        }, React.createElement(TimePicker, {\n          className: classes.tPicker,\n          suffixIcon: true,\n          use12Hours: true,\n          defaultValue: moment(meal.mealTime),\n          format: \"h:mma\",\n          minuteStep: 5,\n          allowEmpty: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 584\n          },\n          __self: this\n        })), React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 586\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"Delete\",\n          className: classes.margin,\n          onClick: function onClick(e) {\n            return _this2.deleteMealButton([dayIndex, mealIndex]);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 587\n          },\n          __self: this\n        }, React.createElement(DeleteIcon, {\n          fontSize: \"large\",\n          style: {\n            color: \"red\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 588\n          },\n          __self: this\n        }))))), React.createElement(Grid, {\n          item: true,\n          md: 5,\n          xs: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 593\n          },\n          __self: this\n        }, React.createElement(\"ol\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 594\n          },\n          __self: this\n        }, meal.recipes.length == 0 && React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 596\n          },\n          __self: this\n        }, \"No tienes alimentos agregados para esta comida.\"), meal.recipes.map(function (alimento, alimentoIndex) {\n          return React.createElement(\"div\", {\n            key: dayIndex + \"-\" + mealIndex + \"-\" + alimentoIndex,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 600\n            },\n            __self: this\n          }, React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 601\n            },\n            __self: this\n          }, React.createElement(Input, {\n            value: alimento.type,\n            style: {\n              width: \"75%\",\n              fontSize: \"0.8rem\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 602\n            },\n            __self: this\n          }), React.createElement(IconButton, {\n            \"aria-label\": \"Delete\",\n            onClick: function onClick(e) {\n              return _this2.deleteRecipeButton([dayIndex, mealIndex, alimentoIndex]);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 603\n            },\n            __self: this\n          }, React.createElement(Clear, {\n            fontSize: \"small\",\n            style: {\n              color: \"red\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 604\n            },\n            __self: this\n          }))));\n        }))), React.createElement(Grid, {\n          item: true,\n          md: 3,\n          xs: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 612\n          },\n          __self: this\n        }, meal.recipes.length == 0 ? null : React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 614\n          },\n          __self: this\n        }, React.createElement(Pie, {\n          data: _this2.pieData(meal),\n          legend: {\n            display: false\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 615\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          style: {\n            textAlign: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 616\n          },\n          __self: this\n        }, \"Calor\\xEDas: \", _this2.mealCalories(meal)))), React.createElement(Grid, {\n          item: true,\n          md: 3,\n          xs: 12,\n          style: {\n            textAlign: \"right\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 620\n          },\n          __self: this\n        }), React.createElement(Grid, {\n          container: true,\n          direction: \"row\",\n          justify: \"center\",\n          alignItems: \"flex-start\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 622\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          md: 9,\n          xs: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 623\n          },\n          __self: this\n        }, React.createElement(SearchBar, {\n          selectedInputIdentifier: [dayIndex, mealIndex],\n          selectedFood: _this2.state.selectedFood,\n          addNewRecipeButton: _this2.addNewRecipeButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 624\n          },\n          __self: this\n        })))))));\n      }))), React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        style: {\n          margin: \"20px 0px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        md: 5,\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636\n        },\n        __self: this\n      }, React.createElement(MuiThemeProvider, {\n        theme: theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 637\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.margin,\n        onClick: function onClick(e) {\n          _this2.addNewMealButton(dayIndex);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638\n        },\n        __self: this\n      }, React.createElement(AddIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639\n        },\n        __self: this\n      }, \"Agregar comida\"))))), React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"space-between\",\n        alignItems: \"flex-end\",\n        style: {\n          margin: \"20px 0px\",\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        md: 2,\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645\n        },\n        __self: this\n      }, dayIndex == 0 ? null : React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"secondary\",\n        disabled: dayIndex === 0,\n        onClick: this.handleBack,\n        className: classes.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647\n        },\n        __self: this\n      }, \"Anterior d\\xEDa\")), React.createElement(Grid, {\n        item: true,\n        md: 2,\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 658\n        },\n        __self: this\n      }, dayIndex !== steps.length && (this.state.completed[this.state.dayIndex] ? React.createElement(Typography, {\n        variant: \"caption\",\n        className: classes.completed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 661\n        },\n        __self: this\n      }, getSteps()[dayIndex], \" est\\xE1 completado\") : this.completedSteps() === this.totalSteps() - 1 ? React.createElement(\"div\", {\n        className: classes.wrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 666\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: buttonClassname,\n        disabled: this.state.loading,\n        onClick: this.handleFinishButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667\n        },\n        __self: this\n      }, \"Enviar al paciente\"), this.state.loading && React.createElement(CircularProgress, {\n        size: 24,\n        className: classes.buttonProgress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670\n        },\n        __self: this\n      })) : React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleComplete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 673\n        },\n        __self: this\n      }, React.createElement(Check, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674\n        },\n        __self: this\n      }), \" D\\xEDa terminado\"))), React.createElement(Grid, {\n        item: true,\n        md: 2,\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678\n        },\n        __self: this\n      }, dayIndex == 6 ? null : React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleNext,\n        className: classes.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680\n        },\n        __self: this\n      }, \"`Ir a $\", getSteps()[dayIndex + 1], \"`\")))))));\n    }\n  }]);\n\n  return MealPlanCreate;\n}(Component);\n\nMealPlanCreate.propTypes = {\n  classes: PropTypes.object\n};\n\nfunction mapStateToProps(state) {\n  return {\n    foods: state.foods,\n    currentUserId: state.currentUser.user.id\n  };\n}\n\n;\nexport default connect(mapStateToProps, {\n  fetchFoods: fetchFoods\n})(withStyles(styles)(MealPlanCreate));","map":{"version":3,"sources":["/home/ubuntu/workspace/nutric-client/src/Main/containers/MealPlans/MealPlanCreate.js"],"names":["React","Component","connect","PropTypes","withStyles","MuiThemeProvider","createMuiTheme","Link","fetchFoods","SearchBar","Button","Grid","AddIcon","DeleteIcon","Clear","Input","Check","IconButton","TextField","TimePicker","Table","moment","Stepper","Step","StepButton","Typography","green","classNames","CircularProgress","Hidden","Pie","Sticky","Alert","styles","theme","root","width","button","marginRight","spacing","unit","completed","display","tPicker","buttonSuccess","backgroundColor","fabProgress","color","position","top","left","zIndex","buttonProgress","marginTop","marginLeft","wrapper","margin","palette","primary","typography","useNextVariants","getSteps","MealPlanCreate","props","addNewMealButton","daySelected","copy","state","mealPlan","updated","days","meals","push","mealName","mealTime","set","hour","minute","second","millisecond","recipes","setState","addNewRecipeButton","selected","identifier","type","foodName","calories_kcal","protein_g","carbs_g","fat_g","deleteRecipeButton","splice","deleteMealButton","totalSteps","length","handleNext","dayIndex","isLastStep","allStepsCompleted","steps","findIndex","step","i","handleBack","handleStep","handleComplete","handleReset","mealCalories","array","totalCalories","totalNutrient","map","meal","Math","round","handleFinishButton","loading","success","timer","setTimeout","totalNutrients","dayIdx","totalProt","totalCarbs","totalFat","mealProt","mealCarbs","mealFat","food","getSummaryTable","macros","targetMacro","dailyCalories","dailyProtein","dailyFat","dailyCarbs","total","dataList","macro","macroIndex","key","actual","target","remain","mealPlanName","dayName","toDate","random","selectedFood","selectedInputRef","clearTimeout","Object","keys","completedSteps","data","labels","datasets","hoverBackgroundColor","classes","buttonClassname","columns","title","dataIndex","toString","textAlign","style","padding","label","index","substr","mealIndex","fontSize","height","e","alimento","alimentoIndex","pieData","propTypes","object","mapStateToProps","foods","currentUserId","currentUser","user","id"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles, MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport {Link} from 'react-router-dom';\nimport {fetchFoods} from '../../store/actions/foods'\nimport SearchBar from '../../components/MealPlans/SearchBar'\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Clear from '@material-ui/icons/Clear';\nimport Input from '@material-ui/core/Input'\nimport Check from '@material-ui/icons/Check'\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\n\nimport { TimePicker, Table } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport moment from 'moment';\nimport 'moment/locale/es';\n\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepButton from '@material-ui/core/StepButton';\nimport Typography from '@material-ui/core/Typography';\nimport green from '@material-ui/core/colors/green';\nimport classNames from 'classnames';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport {Pie} from 'react-chartjs-2'\nimport Sticky from '@wicked_query/react-sticky';\nimport { Alert } from 'antd';\n\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  button: {\n    marginRight: theme.spacing.unit,\n  },\n  completed: {\n    display: 'inline-block',\n  },\n  tPicker: {\n    width: \"100%\"\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n  },\n  fabProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: -6,\n    left: -6,\n    zIndex: 1,\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  wrapper: {\n    margin: theme.spacing.unit,\n    position: 'relative',\n  },\n});\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: green,\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\n\nfunction getSteps() {\n  return ['Lunes', 'Martes','Miércoles', 'Jueves','Viernes','Sábado','Domingo'];\n}\n\n\n\nclass MealPlanCreate extends Component{\n  constructor(props){\n    super(props);\n    this.state = { \n      mealPlan:{\n        mealPlanName:\"Dieta Tonificación\",\n        days:[{\n          dayName:\"Lunes\",\n          dailyCalories: 3000,\n          dailyProtein: 200,\n          dailyCarbs: 400,\n          dailyFat: 250,\n          meals:[{\n            mealName:\"Desayuno\",\n            mealTime:moment().set({ hour: 7, minute: 30, second: 0, millisecond: 0 }).toDate(),\n            recipes:[\n              {type:\"1 vaso de bebida de soya sin azúcar\", \n              calories_kcal:Math.random() * 300,\n              protein_g:Math.random() * 25,\n              carbs_g:Math.random() * 50,\n              fat_g:Math.random() * 30\n              },\n              {type:\"1 pan pita integral con 6 aceitunas\",          \n              calories_kcal:Math.random() * 300,\n              protein_g:Math.random() * 25,\n              carbs_g:Math.random() * 50,\n              fat_g:Math.random() * 30\n              },\n              {type:\"40g de queso light\",              \n              calories_kcal:Math.random() * 300,\n              protein_g:Math.random() * 25,\n              carbs_g:Math.random() * 50,\n              fat_g:Math.random() * 30\n              },\n              ]\n          },{\n            mealName:\"Post-Entreno\",\n            mealTime: moment().set({ hour: 10, minute: 45, second: 0, millisecond: 0 }).toDate(),\n            recipes:[\n              {type:\"2 scoops de proteína vegana\",              \n              calories_kcal:Math.random() * 300,\n              protein_g:Math.random() * 25,\n              carbs_g:Math.random() * 50,\n              fat_g:Math.random() * 30\n              },\n              {type:\"1 plátano de seda\",              \n              calories_kcal:Math.random() * 300,\n              protein_g:Math.random() * 25,\n              carbs_g:Math.random() * 50,\n              fat_g:Math.random() * 30\n              },\n              ]\n          },{\n            mealName:\"Almuerzo\",\n            mealTime: moment().set({ hour: 13, minute: 30, second: 0, millisecond: 0 }).toDate(),\n            recipes:[\n              {type:\"Ensalada de pepinillos, pimientos, espinaca y brócoli\",              \n              calories_kcal:Math.random() * 300,\n              protein_g:Math.random() * 25,\n              carbs_g:Math.random() * 50,\n              fat_g:Math.random() * 30\n              },\n              {type:\"2 tazas de carne de soya aderezada\",              \n              calories_kcal:Math.random() * 300,\n              protein_g:Math.random() * 25,\n              carbs_g:Math.random() * 50,\n              fat_g:Math.random() * 30\n              },\n              {type:\"1 camote grande al horno\",              \n              calories_kcal:Math.random() * 300,\n              protein_g:Math.random() * 25,\n              carbs_g:Math.random() * 50,\n              fat_g:Math.random() * 30\n              },\n              ]\n          },{\n            mealName:\"Media Tarde\",\n            mealTime: moment().set({ hour: 17, minute: 0, second: 0, millisecond: 0 }).toDate(),\n            recipes:[\n              {type:\"1 naranja\",              \n              calories_kcal:Math.random() * 300,\n              protein_g:Math.random() * 25,\n              carbs_g:Math.random() * 50,\n              fat_g:Math.random() * 30\n              },\n              {type:\"1 taza de té verde\",\n              calories_kcal:Math.random() * 300,\n              protein_g:Math.random() * 25,\n              carbs_g:Math.random() * 50,\n              fat_g:Math.random() * 30\n              },\n              ]\n          },{\n            mealName:\"Cena\",\n            mealTime: moment().set({ hour: 20, minute: 30, second: 0, millisecond: 0 }).toDate(),\n            recipes:[\n              {type:\"2 scoops de proteína vegana\",              \n              calories_kcal:Math.random() * 300,\n              protein_g:Math.random() * 25,\n              carbs_g:Math.random() * 50,\n              fat_g:Math.random() * 30\n              },\n              {type:\"1/2 almuerzo\",\n              calories_kcal:Math.random() * 300,\n              protein_g:Math.random() * 25,\n              carbs_g:Math.random() * 50,\n              fat_g:Math.random() * 30\n              },\n              ]\n          }\n          ]\n        },{\n          dayName:\"Martes\",\n          meals:[{\n            mealName:\"Desayuno\",\n            mealTime: moment().set({ hour: 8, minute: 30, second: 0, millisecond: 0 }).toDate(),\n            recipes:[]\n          },\n          ]\n        },{\n          dayName:\"Miércoles\",\n          meals:[{\n            mealName:\"\",\n            mealTime: moment().set({ hour: 8, minute: 30, second: 0, millisecond: 0 }).toDate(),\n            recipes:[]\n          },\n          ]\n        },{\n          dayName:\"Jueves\",\n          meals:[{\n            mealName:\"\",\n            mealTime: moment().set({ hour: 8, minute: 30, second: 0, millisecond: 0 }).toDate(),\n            recipes:[]\n          },\n          ]\n        },{\n          dayName:\"Viernes\",\n          meals:[{\n            mealName:\"\",\n            mealTime: moment().set({ hour: 8, minute: 30, second: 0, millisecond: 0 }).toDate(),\n            recipes:[]\n          },\n          ]\n        },{\n          dayName:\"Sábado\",\n          meals:[{\n            mealName:\"\",\n            mealTime: moment().set({ hour: 8, minute: 30, second: 0, millisecond: 0 }).toDate(),\n            recipes:[]\n          },\n          ]\n        },{\n          dayName:\"Domingo\",\n          meals:[{\n            mealName:\"\",\n            mealTime: moment().set({ hour: 8, minute: 30, second: 0, millisecond: 0 }).toDate(),\n            recipes:[]\n          },\n          ]\n        }]\n      },\n      selectedFood:\"\",\n      selectedInputRef:\"\",\n      dayIndex:0,\n      completed:{},\n      dayIndex:0,\n      loading:false,\n      success:false\n    }\n  };\n  \n  componentWillUnmount() {\n    clearTimeout(this.timer);\n  }\n  \n  addNewMealButton = (daySelected => {\n    const copy=this.state.mealPlan;\n    const updated=copy.days[daySelected].meals.push(\n          {\n            mealName:\"\",\n            mealTime: moment().set({ hour: 8, minute: 30, second: 0, millisecond: 0 }),\n            recipes:[]\n          }\n      )\n    this.setState({\n      mealPlan:copy\n    })\n  })\n  \n  addNewRecipeButton = (selected,identifier) => {\n    const copy=this.state.mealPlan;\n    const updated=copy.days[identifier[0]].meals[identifier[1]].recipes.push(\n      {\n        type: selected.foodName,\n        calories_kcal:selected.calories_kcal,\n        protein_g:selected.protein_g,\n        carbs_g:selected.carbs_g,\n        fat_g:selected.fat_g\n      }\n      )\n    this.setState({\n      mealPlan:copy\n    })\n  }\n  \n  deleteRecipeButton = (identifier) => {\n    const copy=this.state.mealPlan;\n    const updated=copy.days[identifier[0]].meals[identifier[1]].recipes.splice(identifier[2],1);\n    this.setState({\n      mealPlan:copy\n    })\n}\n\n  deleteMealButton = (identifier) => {\n    const copy=this.state.mealPlan;\n    const updated=copy.days[identifier[0]].meals.splice(identifier[1],1);\n    this.setState({\n      mealPlan:copy\n    })\n}\n  \n  //funciones para el stepper\n  totalSteps = () => {\n    return getSteps().length;\n  };\n\n  \n  handleNext = () => {\n    let dayIndex;\n\n    if (this.isLastStep() && !this.allStepsCompleted()) {\n      // It's the last step, but not all steps have been completed,\n      // find the first step that has been completed\n      const steps = getSteps();\n      dayIndex = steps.findIndex((step, i) => !(i in this.state.completed));\n    } else {\n      dayIndex = this.state.dayIndex + 1;\n    }\n    this.setState({\n      dayIndex,\n    });\n  };\n\n  handleBack = () => {\n    this.setState(state => ({\n      dayIndex: state.dayIndex - 1,\n    }));\n  };\n\n  handleStep = step => () => {\n    this.setState({\n      dayIndex: step,\n    });\n  };\n\n  handleComplete = () => {\n    const { completed } = this.state;\n    completed[this.state.dayIndex] = true;\n    this.setState({\n      completed,\n    });\n    this.handleNext();\n  };\n\n  handleReset = () => {\n    this.setState({\n      dayIndex: 0,\n      completed: {},\n    });\n  };\n\n  completedSteps() {\n    return Object.keys(this.state.completed).length;\n  }\n\n  isLastStep() {\n    return this.state.dayIndex === this.totalSteps() - 1;\n  }\n\n  allStepsCompleted() {\n    return this.completedSteps() === this.totalSteps();\n  }  \n\n  //Pie chart\n  mealCalories=(array)=>{\n      var totalCalories=0;\n      var totalNutrient=array.recipes.map(meal=>{\n        totalCalories+=meal.calories_kcal;\n      }) \n      return Math.round(totalCalories*100)/100\n  }\n  pieData(array){\n    function totalNutrients(){\n      var [totalProt, totalFat, totalCarbs]=[0,0,0];\n      var totalNutrient=array.recipes.map(meal=>{\n        totalProt+=meal.protein_g;\n        totalFat+=meal.fat_g;\n        totalCarbs+=meal.carbs_g;\n      })\n      return [Math.round(totalProt*100)/100,Math.round(totalFat*100)/100, Math.round(totalCarbs*100)/100]\n    };\n\n    const data = {\n  \tlabels: [\n  \t\t'Proteína (g)',\n  \t\t'Grasa (g)',\n  \t\t'Carbohidratos (g)'\n  \t],\n  \tdatasets: [{\n  \t\tdata: totalNutrients(),\n  \t\tbackgroundColor: [\n  \t\t'#FF6384',\n  \t\t'#36A2EB',\n  \t\t'#FFCE56'\n  \t\t],\n  \t\thoverBackgroundColor: [\n  \t\t'#FF6384',\n  \t\t'#36A2EB',\n  \t\t'#FFCE56'\n  \t\t]\n  \t}]\n      \n    };\n    return data\n    }\n    \n  handleFinishButton = () => {\n    if (!this.state.loading) {\n      this.setState(\n        {\n          success: false,\n          loading: true,\n        },\n        () => {\n          this.timer = setTimeout(() => {\n            this.setState({\n              loading: false,\n              success: true,\n            });\n            const { completed } = this.state;\n            completed[this.state.dayIndex] = true;\n            this.setState({\n              completed,\n            });\n            this.handleNext();\n          }, 2000);\n        },\n      );\n    }\n  };\n  \n  totalNutrients =(dayIdx)=>{\n        var totalCalories=0\n        var totalProt=0\n        var totalCarbs=0\n        var totalFat=0;\n        this.state.mealPlan.days[dayIdx].meals.map(meal=>{\n        var mealCalories=0\n        var mealProt=0\n        var mealCarbs=0\n        var mealFat=0;\n        meal.recipes.map(food=>{\n          mealCalories+=food.calories_kcal;\n          mealProt+=food.protein_g;\n          mealCarbs+=food.carbs_g;\n          mealFat+=food.fat_g;\n        })\n          totalCalories+=mealCalories;\n          totalProt+=mealProt;\n          totalCarbs+=mealCarbs;\n          totalFat+=mealFat;\n      })\n      return [Math.round(totalCalories*100)/100, Math.round(totalProt*100)/100,Math.round(totalCarbs*100)/100,Math.round(totalFat*100)/100]\n    };\n\n  //summaryTable functions\n  getSummaryTable=(dayIdx)=> {\n    const macros=[\"Calorías (kcal)\", \"Proteína (g)\", \"Grasa (g)\", \"Carbohidratos (g)\"]\n    //get target\n      const targetMacro=[this.state.mealPlan.days[dayIdx].dailyCalories, this.state.mealPlan.days[dayIdx].dailyProtein, this.state.mealPlan.days[dayIdx].dailyFat, this.state.mealPlan.days[dayIdx].dailyCarbs]\n    //get actual\n      const total=this.totalNutrients(dayIdx)\n    \n    //get difference\n    const dataList = macros.map(function(macro, macroIndex){\n      return {key: macroIndex, macro: macro, actual:total[macroIndex] , target:targetMacro[macroIndex], remain:Math.round((targetMacro[macroIndex]-total[macroIndex])*100)/100}\n    })\n    return dataList\n  \n    \n  }\n  \n  render(){\n    const { classes } = this.props;\n    const steps = getSteps();\n    const { dayIndex } = this.state;\n    const buttonClassname = classNames({\n      [classes.buttonSuccess]: this.state.success,\n    });\n    \nconst columns = [{\n  title: `Macros del ${getSteps()[dayIndex]}`,\n  dataIndex: 'macro',\n  width:120\n}, {\n  title: 'Actual',\n  dataIndex: 'actual',\n  width:60\n}, {\n  title: 'Objetivo',\n  dataIndex: 'target',\n  width:75\n},{\n  title: 'Restante',\n  dataIndex: 'remain',\n  width:78\n}];\n\n    return (\n      <div>\n        <Link to='/dietas'>Click para ir a /dietas </Link>  \n        <div className={classes.root}>\n        {this.allStepsCompleted() ? ( \n          <div>\n            <Grid container alignItems=\"center\">\n              <Grid item>\n                  <Alert\n                    message=\"Has completado satisfactoriamente el plan alimenticio\"\n                    description=\"Mandale p\"\n                    type=\"success\"\n                    showIcon\n                  />\n                <Typography>\n                  RESUMEN DE HUEVADAS:\n                  {this.state.mealPlan.toString()}\n                </Typography>\n              </Grid>\n            </Grid>\n            <Button variant=\"outlined\" color=\"secondary\" onClick={this.handleReset}>Resetear</Button>\n          </div>\n          ) : (\n          <Grid container alignItems=\"center\" justify=\"space-between\">\n            <Grid item md={5} xs={12} style={{textAlign:\"center\"}}>\n              <TextField inputProps={{style:{padding:\"10px 20px\",textAlign:\"center\"}}} style={{margin:\"20px 20px\"}} id=\"outlined-bare\" variant=\"filled\" value={this.state.mealPlan.mealPlanName}/>\n              <Stepper nonLinear activeStep={dayIndex} alternativeLabel style={{padding:\"0\"}}>\n                {steps.map((label, index) => {\n                  return (\n                    <Step key={label}>\n                      <StepButton\n                        onClick={this.handleStep(index)}\n                        completed={this.state.completed[index]}\n                        icon={label.substr(0,1)}\n                      >\n                        {label.substr(0,3)}\n                      </StepButton>\n                    </Step>\n                  );\n                })}\n              </Stepper>\n            </Grid>\n            <Grid item md={2} xs={12} style={{textAlign:\"center\"}}>\n            </Grid>\n            {!this.allStepsCompleted() && \n            <Grid item md={5} xs={12} style={{textAlign:\"right\"}}>\n              <Sticky>\n                <div style={{backgroundColor:\"white\"}}>\n                   <Table columns={columns} dataSource={this.getSummaryTable(dayIndex)} size=\"small\" pagination={false}/>\n                </div>\n              </Sticky>\n            </Grid>\n            }\n          </Grid>\n          )\n        }\n          <div>\n            {!this.allStepsCompleted() && (\n              <div>\n                <div>\n                  <div key={dayIndex}>\n                      {this.state.mealPlan.days[dayIndex].meals.map((meal, mealIndex) =>\n                          <div key={dayIndex+\"-\"+mealIndex}>\n                            <hr/>\n                            <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n                              <Grid item md={12} xs={12} style={{textAlign:\"center\", margin:\"5px\"}}>\n                                <TextField inputProps={{style:{padding:\"10px 5px\",textAlign:\"center\", fontSize:\"0.9rem\"}}} style={{margin:\"0px 20px\"}} id=\"outlined-bare\" variant=\"outlined\" value={meal.mealName==\"\" ? \"Comida \"+(mealIndex+1) : meal.mealName}/>\n                              </Grid>\n                              <Grid item md={12} xs={12}>\n                                <Grid container>\n                                  <Grid item md={1} xs={12} style={{textAlign:\"center\"}}>\n                                    <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\" style={{height:\"100%\"}}>\n                                      <Grid item xs={12}>\n                                        <TimePicker className={classes.tPicker} suffixIcon use12Hours defaultValue={moment(meal.mealTime)} format={\"h:mma\"} minuteStep={5} allowEmpty={false}/>\n                                      </Grid>\n                                      <Grid item xs={12}>\n                                        <IconButton aria-label=\"Delete\" className={classes.margin} onClick={e=>this.deleteMealButton([dayIndex,mealIndex])}>\n                                          <DeleteIcon fontSize=\"large\" style={{ color: \"red\" }} />\n                                        </IconButton>\n                                      </Grid>\n                                    </Grid>\n                                  </Grid>\n                                  <Grid item md={5} xs={12}>\n                                    <ol>\n                                    {meal.recipes.length==0 && \n                                      <div>No tienes alimentos agregados para esta comida.</div>\n                                    }\n                                    {\n                                      meal.recipes.map((alimento, alimentoIndex) => \n                                      <div key={dayIndex+\"-\"+mealIndex+\"-\"+alimentoIndex}>\n                                        <li>\n                                          <Input value={alimento.type} style={{width:\"75%\", fontSize:\"0.8rem\"}}/>\n                                          <IconButton aria-label=\"Delete\" onClick={e=>(this.deleteRecipeButton([dayIndex,mealIndex,alimentoIndex]))}>\n                                            <Clear fontSize=\"small\" style={{ color: \"red\" }}/>\n                                          </IconButton>\n                                        </li>\n                                      </div>\n                                      )\n                                    }\n                                    </ol>\n                                  </Grid>\n                                  <Grid item md={3} xs={6}>\n                                    {meal.recipes.length==0 ? null : (\n                                    <div>\n                                      <Pie data={this.pieData(meal)} legend={{display:false}}/>\n                                      <div style={{textAlign:\"center\"}}>Calorías: {this.mealCalories(meal)}</div>\n                                    </div>\n                                    )}\n                                  </Grid>\n                                  <Grid item md={3} xs={12} style={{textAlign:\"right\"}}>\n                                  </Grid>\n                                  <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\">\n                                    <Grid item md={9} xs={12}>\n                                     <SearchBar selectedInputIdentifier={[dayIndex,mealIndex]} selectedFood={this.state.selectedFood} addNewRecipeButton={this.addNewRecipeButton}/>\n                                    </Grid>\n                                  </Grid>\n                                </Grid>\n                              </Grid>\n                            </Grid>\n                          </div>\n                          )\n                      }\n                  </div>\n                </div>\n                <Grid container direction=\"row\" style={{margin:\"20px 0px\"}}>\n                  <Grid item md={5} style={{ textAlign:\"center\" }}>\n                    <MuiThemeProvider theme={theme}>\n                      <Button variant=\"contained\" color=\"primary\" className={classes.margin} onClick={e=>{this.addNewMealButton(dayIndex)}}>\n                        <AddIcon/><Typography>Agregar comida</Typography>\n                      </Button>\n                    </MuiThemeProvider>\n                  </Grid>\n                </Grid>\n                <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"flex-end\" style={{margin:\"20px 0px\", height:\"100%\"}}>\n                  <Grid item md={2} style={{ textAlign:\"center\" }}>\n                    {dayIndex==0 ? null : (\n                    <Button\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      disabled={dayIndex === 0}\n                      onClick={this.handleBack}\n                      className={classes.button}\n                    >\n                      Anterior día\n                    </Button>\n                    )}\n                  </Grid>\n                  <Grid item md={2} style={{ textAlign:\"center\" }}>\n                    {dayIndex !== steps.length &&\n                      (this.state.completed[this.state.dayIndex] ? (\n                        <Typography variant=\"caption\" className={classes.completed}>\n                          {getSteps()[dayIndex]} está completado\n                        </Typography>\n                      ) : (\n                      this.completedSteps() === this.totalSteps() - 1 ? (\n                      <div className={classes.wrapper}>\n                        <Button variant=\"contained\" color=\"primary\" className={buttonClassname} disabled={this.state.loading} onClick={this.handleFinishButton}>\n                          Enviar al paciente\n                        </Button>\n                        {this.state.loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                        </div>\n                      ) : (\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.handleComplete}>\n                          <Check/> Día terminado\n                        </Button>\n                      )))}\n                  </Grid>\n                  <Grid item md={2} style={{ textAlign:\"center\" }}>\n                    {dayIndex==6 ? null :(\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={this.handleNext}\n                      className={classes.button}\n                    >\n                      `Ir a ${getSteps()[dayIndex+1]}`\n                    </Button>\n                    )}\n                  </Grid>\n                </Grid>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }}\n  \n  \nMealPlanCreate.propTypes = {\n  classes: PropTypes.object,\n};\n  \n  \nfunction mapStateToProps(state){\n  return{\n    foods: state.foods,\n    currentUserId: state.currentUser.user.id\n  };\n};\n\n  \nexport default connect(mapStateToProps, {fetchFoods})(withStyles(styles)(MealPlanCreate));"]},"metadata":{},"sourceType":"module"}