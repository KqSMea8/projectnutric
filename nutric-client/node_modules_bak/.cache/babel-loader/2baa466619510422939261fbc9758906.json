{"ast":null,"code":"import _classCallCheck from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ubuntu/workspace/nutric-client/src/Main/containers/Patients/PatientsMain.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport '../../../App.css';\nimport PatientsList from '../../components/Patients/PatientsList.js';\nimport PatientsSlideShow from '../../components/Patients/PatientsSlideShow.js'; // import Patients2SliderShow from '../../components/Patients/Patients2SliderShow.js';\n\nimport { fetchPatients } from '../../store/actions/patients';\n\nvar PatientsMain =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PatientsMain, _Component);\n\n  function PatientsMain(props) {\n    var _this;\n\n    _classCallCheck(this, PatientsMain);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PatientsMain).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(PatientsMain, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var currentUserId = this.props.currentUserId;\n      this.props.fetchPatients(currentUserId, console.log('was fetched'));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var patients = this.props.patients;\n      var patientsList = patients.map(function (patient) {\n        // ahorita solo tenemos el birthDate del paciente, age se calcularia aqui, o tb podria venir desde el back\n        var firstName = patient.firstName,\n            lastName = patient.lastName,\n            mail = patient.mail,\n            age = patient.age;\n        return [\"\".concat(firstName, \" \").concat(lastName), mail, '3era col', '4ta col'];\n      });\n      var renewalPatients = patients.map(function (patient) {\n        var firstName = patient.firstName,\n            lastName = patient.lastName;\n        {\n          /*FECHA DE ULTIMA CONSULTA*/\n        }\n        return [\"\".concat(firstName, \" \").concat(lastName), 'Dias para vencimiento'];\n      });\n      return React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        style: {\n          paddingRight: '30px',\n          flex: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(PatientsList, {\n        data: patientsList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        style: {\n          flexGrow: 1,\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        style: {\n          height: '50%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola hola\"), React.createElement(Grid, {\n        item: true,\n        style: {\n          height: '50%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Esto aparece abajo\")));\n    }\n  }]);\n\n  return PatientsMain;\n}(Component);\n\n;\n\nfunction mapStateToProps(state) {\n  return {\n    patients: state.patients,\n    currentUserId: state.currentUser.user.id\n  };\n}\n\n;\nexport default connect(mapStateToProps, {\n  fetchPatients: fetchPatients\n})(PatientsMain);","map":{"version":3,"sources":["/home/ubuntu/workspace/nutric-client/src/Main/containers/Patients/PatientsMain.js"],"names":["React","Component","connect","Paper","Grid","PatientsList","PatientsSlideShow","fetchPatients","PatientsMain","props","state","currentUserId","console","log","patients","patientsList","map","patient","firstName","lastName","mail","age","renewalPatients","paddingRight","flex","flexGrow","height","mapStateToProps","currentUser","user","id"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport '../../../App.css'\nimport PatientsList from '../../components/Patients/PatientsList.js';\nimport PatientsSlideShow from '../../components/Patients/PatientsSlideShow.js';\n// import Patients2SliderShow from '../../components/Patients/Patients2SliderShow.js';\nimport {fetchPatients} from '../../store/actions/patients';\n\n\nclass PatientsMain extends Component {\n  constructor(props){\n    super(props);\n    this.state = {};\n  }\n  \n  componentDidMount(){\n    const { currentUserId } = this.props;\n    this.props.fetchPatients(currentUserId, console.log('was fetched'));\n  }\n  \n  render(){\n    const {patients} = this.props;\n    let patientsList = patients.map(patient => {\n      // ahorita solo tenemos el birthDate del paciente, age se calcularia aqui, o tb podria venir desde el back\n      const { firstName, lastName, mail, age } = patient;\n      return (\n        [`${firstName} ${lastName}`, mail, '3era col', '4ta col']\n      )\n    });\n\n    let renewalPatients = patients.map(patient => {\n      const { firstName, lastName } = patient;  {/*FECHA DE ULTIMA CONSULTA*/}\n      return (\n        [`${firstName} ${lastName}`, 'Dias para vencimiento']\n      );\n    });\n    \n    return (\n      <Grid container>\n        <Grid item style={{paddingRight: '30px', flex: 2}}>\n          <PatientsList data={patientsList} />\n        </Grid>\n        <Grid item style={{flexGrow: 1, flex: 1}}>\n          <Grid item style={{height: '50%'}}>\n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n            hola \n          </Grid>\n          <Grid item style={{height: '50%'}}>\n              Esto aparece abajo \n          </Grid>\n        </Grid>\n      </Grid>\n    )\n\n  }\n  \n};\n\nfunction mapStateToProps(state){\n  return{\n    patients: state.patients,\n    currentUserId: state.currentUser.user.id\n  };\n};\n  \nexport default connect(mapStateToProps, {fetchPatients})(PatientsMain);"]},"metadata":{},"sourceType":"module"}