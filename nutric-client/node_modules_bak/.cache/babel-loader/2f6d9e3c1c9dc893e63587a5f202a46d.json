{"ast":null,"code":"import _classCallCheck from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ubuntu/workspace/nutric-client/src/Main/components/MealPlans/SearchBar.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { fetchFoods } from '../../store/actions/foods';\nimport { connect } from 'react-redux';\nimport TableResult from '../../components/MealPlans/TableResult';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Search from '@material-ui/icons/Search';\n\nvar styles = function styles(theme) {\n  return {\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    textField: {\n      width: 200\n    },\n    menu: {\n      width: 200\n    }\n  };\n};\n\nvar SearchBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SearchBar, _React$Component);\n\n  function SearchBar(props) {\n    var _this;\n\n    _classCallCheck(this, SearchBar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchBar).call(this, props));\n\n    _this.onSearchingFood = function (event) {\n      _this.setState({\n        searchedFood: event.target.value\n      }, function () {\n        var currentUserId = this.props.currentUserId; // arreglar el query: si pongo camo (para camote), aparece tequeños con guaCAMOle\n\n        if (this.state.searchedFood.length >= 3) {\n          this.props.fetchFoods(currentUserId, this.state.searchedFood);\n        } else {\n          return \"\";\n        }\n      });\n    };\n\n    _this.showsTable = function (e) {\n      _this.setState({\n        text: e.target.value,\n        tableHide: true\n      });\n\n      if (e.target.value.length >= 3) {\n        _this.setState({\n          tableHide: false\n        });\n      }\n    };\n\n    _this.clearInput = function (e) {\n      _this.setState({\n        text: \"\",\n        tableHide: true\n      });\n    };\n\n    _this.state = {\n      searchedFood: \"\",\n      tableHide: true,\n      text: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(SearchBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"input-with-icon-textfield\",\n        value: this.state.text,\n        placeholder: \"Agregar alimento...\",\n        className: classes.textField,\n        onChange: function onChange(e) {\n          _this2.showsTable(e);\n\n          _this2.onSearchingFood(e);\n        },\n        onFocus: this.clearInput,\n        margin: \"none\",\n        autoComplete: \"off\",\n        InputProps: {\n          startAdornment: React.createElement(InputAdornment, {\n            position: \"start\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, React.createElement(Search, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), !this.state.tableHide ? React.createElement(TableResult, {\n        clearInput: this.clearInput,\n        selectedInputIdentifier: this.props.selectedInputIdentifier,\n        selectedFood: this.props.selectedFood,\n        addNewRecipeButton: this.props.addNewRecipeButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }) : null);\n    }\n  }]);\n\n  return SearchBar;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    foods: state.foods,\n    currentUserId: state.currentUser.user.id\n  };\n}\n\n;\nexport default connect(mapStateToProps, {\n  fetchFoods: fetchFoods\n})(withStyles(styles)(SearchBar));","map":{"version":3,"sources":["/home/ubuntu/workspace/nutric-client/src/Main/components/MealPlans/SearchBar.js"],"names":["React","PropTypes","classNames","withStyles","TextField","fetchFoods","connect","TableResult","InputAdornment","Search","styles","theme","container","display","flexWrap","textField","width","menu","SearchBar","props","onSearchingFood","event","setState","searchedFood","target","value","currentUserId","state","length","showsTable","e","text","tableHide","clearInput","classes","startAdornment","selectedInputIdentifier","selectedFood","addNewRecipeButton","Component","mapStateToProps","foods","currentUser","user","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport {fetchFoods} from '../../store/actions/foods';\nimport {connect} from 'react-redux';\nimport TableResult from '../../components/MealPlans/TableResult'\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Search from '@material-ui/icons/Search';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    width: 200,\n  },\n  menu: {\n    width: 200,\n  },\n});\n\nclass SearchBar extends React.Component {\n  constructor(props){\n    super(props);\n      this.state={\n        searchedFood:\"\",\n        tableHide:true,\n        text:\"\"\n      }\n  }\n\n  onSearchingFood = event => {\n    this.setState({\n        searchedFood: event.target.value\n    }, function(){\n      const { currentUserId } = this.props;\n      // arreglar el query: si pongo camo (para camote), aparece tequeños con guaCAMOle\n      if(this.state.searchedFood.length>=3){\n        this.props.fetchFoods(currentUserId,this.state.searchedFood);\n      } else {\n        return \"\";\n      }\n    })\n  }\n\n  showsTable = (e) => {\n    this.setState({ text: e.target.value, tableHide:true });\n    if(e.target.value.length>=3){\n      this.setState({tableHide:false})\n    }\n  };\n\n  clearInput=e=>{\n    this.setState({text:\"\",tableHide:true})\n  }\n  \n  render() {\n    const { classes } = this.props;\n    \n    return (\n      <div>\n        <TextField\n          id=\"input-with-icon-textfield\"\n          value={this.state.text}\n          placeholder=\"Agregar alimento...\"\n          className={classes.textField}\n          onChange={(e)=> { this.showsTable(e); this.onSearchingFood(e);}}\n          onFocus={this.clearInput}\n          margin=\"none\"\n          autoComplete=\"off\"\n          InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <Search />\n            </InputAdornment>\n          ),\n        }}\n        />\n        {!this.state.tableHide ? <TableResult clearInput={this.clearInput} selectedInputIdentifier={this.props.selectedInputIdentifier} selectedFood={this.props.selectedFood} addNewRecipeButton={this.props.addNewRecipeButton}/> : null}      \n      </div>\n    );\n  }\n}\n\n\n\nfunction mapStateToProps(state){\n  return{\n    foods: state.foods,\n    currentUserId: state.currentUser.user.id\n  };\n};\n  \nexport default connect(mapStateToProps, {fetchFoods})(withStyles(styles)(SearchBar))\n"]},"metadata":{},"sourceType":"module"}