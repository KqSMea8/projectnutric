{"ast":null,"code":"import _objectWithoutProperties from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { apiCall } from '../../services/api';\nimport { SET_CURRENT_USER } from '../actionTypes';\nexport function setCurrentUser(user) {\n  return {\n    type: SET_CURRENT_USER,\n    user: user\n  };\n}\nexport function authUser(type, userData) {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      return apiCall(\"post\", \"/api/experts/\".concat(type), userData) //ESTO CAMBIA CUANDO ES PATIENT\n      .then(function (_ref) {\n        var token = _ref.token,\n            user = _objectWithoutProperties(_ref, [\"token\"]);\n\n        localStorage.setItem(\"jwtToken\", token);\n        dispatch(setCurrentUser(user));\n        resolve();\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/home/ubuntu/workspace/nutric-client/src/store/actions/auth.js"],"names":["apiCall","SET_CURRENT_USER","setCurrentUser","user","type","authUser","userData","dispatch","Promise","resolve","reject","then","token","localStorage","setItem"],"mappings":";AAAA,SAAQA,OAAR,QAAsB,oBAAtB;AACA,SAAQC,gBAAR,QAA+B,gBAA/B;AAEA,OAAO,SAASC,cAAT,CAAwBC,IAAxB,EAA6B;AAClC,SAAO;AACLC,IAAAA,IAAI,EAAEH,gBADD;AAELE,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID;AAED,OAAO,SAASE,QAAT,CAAkBD,IAAlB,EAAwBE,QAAxB,EAAiC;AACtC,SAAO,UAAAC,QAAQ,EAAI;AACjB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAkB;AACnC,aAAOV,OAAO,CAAC,MAAD,yBAAwBI,IAAxB,GAA+BE,QAA/B,CAAP,CAAgD;AAAhD,OACJK,IADI,CACC,gBAAoB;AAAA,YAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,YAART,IAAQ;;AACxBU,QAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAgCF,KAAhC;AACAL,QAAAA,QAAQ,CAACL,cAAc,CAACC,IAAD,CAAf,CAAR;AACAM,QAAAA,OAAO;AACR,OALI,CAAP;AAMD,KAPM,CAAP;AAQD,GATD;AAUD","sourcesContent":["import {apiCall} from '../../services/api';\nimport {SET_CURRENT_USER} from '../actionTypes'\n\nexport function setCurrentUser(user){\n  return {\n    type: SET_CURRENT_USER,\n    user\n  }\n}\n\nexport function authUser(type, userData){\n  return dispatch => {\n    return new Promise((resolve,reject)=>{\n      return apiCall(\"post\",`/api/experts/${type}`,userData) //ESTO CAMBIA CUANDO ES PATIENT\n        .then(({token, ...user})=>{\n          localStorage.setItem(\"jwtToken\",token);\n          dispatch(setCurrentUser(user));\n          resolve();\n        })\n    })\n  }\n}"]},"metadata":{},"sourceType":"module"}