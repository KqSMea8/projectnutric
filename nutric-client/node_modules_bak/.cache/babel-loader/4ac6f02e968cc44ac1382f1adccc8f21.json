{"ast":null,"code":"import _classCallCheck from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ubuntu/workspace/nutric-client/src/Main/containers/Patients/PatientsMain.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport '../../../App.css';\nimport PatientsList from '../../components/Patients/PatientsList.js';\nimport { fetchPatients, addPatient } from '../../store/actions/patients';\nimport { fetchAppointments } from '../../store/actions/appointments';\n\nvar PatientsMain =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PatientsMain, _Component);\n\n  function PatientsMain(props) {\n    var _this;\n\n    _classCallCheck(this, PatientsMain);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PatientsMain).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(PatientsMain, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var currentUserId = this.props.currentUserId;\n      console.log(currentUserId);\n      this.props.fetchPatients(currentUserId, console.log('patients were fetched'));\n      this.props.fetchAppointments(currentUserId, console.log('appointments were fetched'));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var numRows = 6; //num de filas q sera el default en la tabla\n\n      var _this$props = this.props,\n          appointments = _this$props.appointments,\n          patients = _this$props.patients,\n          currentUserId = _this$props.currentUserId;\n      console.log(appointments);\n      var patientsList = patients.map(function (patient) {\n        // ahorita solo tenemos el birthDate del paciente, age se calcularia aqui, o tb podria venir desde el back\n        // falta hacer que cuando tenga menos de 7 pacientes, aparezcan las 7 - n filas en blanco\n        // esto pq 7 va a ser el numero de pacientes q se vean pq calza con el height de screen - AppBar\n        var firstName = patient.firstName,\n            lastName = patient.lastName,\n            mail = patient.mail;\n        return [\"\".concat(firstName, \" \").concat(lastName), mail, '3era col', '4ta col'];\n      }); // if(patientsList.length < 7){\n      //   let fillArray = [];\n      //   for(let i = numRows; i > patientsList.length; i--){\n      //     fillArray.push(new Array(4).fill(''));\n      //     console.log(fillArray);\n      //   }  \n      // }\n\n      var orderedWithMealPlan = [];\n      patients.filter(function (patient) {\n        if (patient.mealPlans[0] !== undefined) {\n          orderedWithMealPlan.push(patient);\n        }\n\n        return orderedWithMealPlan;\n      });\n      orderedWithMealPlan.sort(function (a, b) {\n        return new Date(a.endDate) - new Date(b.endDate);\n      }); //pacientes con meal plan, sorteado de meal plan mas proximo a mas lejano\n\n      var top3Renewals = orderedWithMealPlan.slice(0, 3);\n      return React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        style: {\n          paddingRight: '30px',\n          flex: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(PatientsList, {\n        data: patientsList,\n        numRows: numRows,\n        currentUserId: currentUserId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        container: true,\n        direction: 'column',\n        justify: 'space-between',\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        justify: \"center\",\n        style: {\n          height: '45%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(SnackbarContent, {\n        message: 'Pacientes por renovar',\n        style: {\n          width: '80%',\n          margin: '-15px auto 0',\n          textAlign: 'center',\n          backgroundColor: '#3f51b5'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        container: true,\n        style: {\n          height: '86%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        style: {\n          padding: '16px 30px 0 30px',\n          borderBottom: '1px solid black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Nombre\"), React.createElement(Grid, {\n        item: true,\n        style: {\n          textAlign: 'center'\n        },\n        xs: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"D\\xEDas\"), React.createElement(Grid, {\n        item: true,\n        style: {\n          textAlign: 'end'\n        },\n        xs: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Fecha fin\")), top3Renewals.map(function (renewal, i) {\n        var formattedEndDate = moment.utc(renewal.mealPlans[0].endDate).format('L');\n        var remainingDays = moment().diff(renewal.mealPlans[0].endDate, 'days');\n        var alpha = 1 / (3.14 * (i + 1));\n        return React.createElement(Grid, {\n          key: renewal._id,\n          style: {\n            padding: '8px 30px',\n            backgroundColor: \"rgba(255, 0, 0, \".concat(alpha, \")\")\n          },\n          container: true,\n          alignItems: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          xs: 5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, renewal.firstName, \" \", renewal.lastName)), React.createElement(Grid, {\n          item: true,\n          xs: 3,\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, remainingDays), \" \"), React.createElement(Grid, {\n          item: true,\n          xs: 4,\n          style: {\n            textAlign: 'end'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, formattedEndDate), \" \"));\n      }))), React.createElement(Paper, {\n        justify: \"center\",\n        style: {\n          height: '45%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(SnackbarContent, {\n        message: 'Ãšltimas consultas',\n        style: {\n          width: '80%',\n          margin: '-15px auto 0',\n          textAlign: 'center',\n          backgroundColor: '#3f51b5'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        container: true,\n        style: {\n          height: '86%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        style: {\n          padding: '16px 30px 0 30px',\n          borderBottom: '1px solid black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Nombre\"), React.createElement(Grid, {\n        item: true,\n        style: {\n          textAlign: 'center'\n        },\n        xs: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Fecha\"), React.createElement(Grid, {\n        item: true,\n        style: {\n          textAlign: 'end'\n        },\n        xs: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Motivo\")), top3Renewals.map(function (renewal, i) {\n        var formattedEndDate = moment.utc(renewal.mealPlans[0].endDate).format('L');\n        var remainingDays = moment().diff(renewal.mealPlans[0].endDate, 'days');\n        var alpha = 1 / (3.14 * (i + 1));\n        return React.createElement(Grid, {\n          key: renewal._id,\n          style: {\n            padding: '8px 30px',\n            backgroundColor: \"rgba(0, 0, 255, \".concat(alpha, \")\")\n          },\n          container: true,\n          alignItems: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          xs: 5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, renewal.firstName, \" \", renewal.lastName)), React.createElement(Grid, {\n          item: true,\n          xs: 3,\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, remainingDays), \" \"), React.createElement(Grid, {\n          item: true,\n          xs: 4,\n          style: {\n            textAlign: 'end'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, formattedEndDate), \" \"));\n      })))));\n    }\n  }]);\n\n  return PatientsMain;\n}(Component);\n\n;\n\nfunction mapStateToProps(state) {\n  return {\n    appointments: state.appointments,\n    patients: state.patients,\n    currentUserId: state.currentUser.user.id\n  };\n}\n\n;\nexport default connect(mapStateToProps, {\n  fetchPatients: fetchPatients,\n  addPatient: addPatient,\n  fetchAppointments: fetchAppointments\n})(PatientsMain);","map":{"version":3,"sources":["/home/ubuntu/workspace/nutric-client/src/Main/containers/Patients/PatientsMain.js"],"names":["React","Component","connect","Paper","Grid","Button","Typography","SnackbarContent","moment","PatientsList","fetchPatients","addPatient","fetchAppointments","PatientsMain","props","state","currentUserId","console","log","numRows","appointments","patients","patientsList","map","patient","firstName","lastName","mail","orderedWithMealPlan","filter","mealPlans","undefined","push","sort","a","b","Date","endDate","top3Renewals","slice","paddingRight","flex","height","width","margin","textAlign","backgroundColor","padding","borderBottom","renewal","i","formattedEndDate","utc","format","remainingDays","diff","alpha","_id","mapStateToProps","currentUser","user","id"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography'\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport moment from 'moment'\nimport 'moment/locale/es';\n\nimport '../../../App.css'\nimport PatientsList from '../../components/Patients/PatientsList.js';\nimport { fetchPatients, addPatient } from '../../store/actions/patients';\nimport { fetchAppointments } from '../../store/actions/appointments';\n\n\nclass PatientsMain extends Component {\n  constructor(props){\n    super(props);\n    this.state = {};\n  }\n  \n  componentWillMount(){\n    const { currentUserId } = this.props\n    console.log(currentUserId);\n    this.props.fetchPatients(currentUserId, console.log('patients were fetched'));\n    this.props.fetchAppointments(currentUserId, console.log('appointments were fetched'));\n    \n  }\n  \n\n  render(){\n    const numRows = 6; //num de filas q sera el default en la tabla\n    const { appointments, patients, currentUserId } = this.props;\n    console.log(appointments);\n    let patientsList = patients.map(patient => {\n      // ahorita solo tenemos el birthDate del paciente, age se calcularia aqui, o tb podria venir desde el back\n      // falta hacer que cuando tenga menos de 7 pacientes, aparezcan las 7 - n filas en blanco\n      // esto pq 7 va a ser el numero de pacientes q se vean pq calza con el height de screen - AppBar\n      const { firstName, lastName, mail } = patient;\n      return (\n        [`${firstName} ${lastName}`, mail, '3era col', '4ta col']\n      )\n    });\n\n    // if(patientsList.length < 7){\n    //   let fillArray = [];\n    //   for(let i = numRows; i > patientsList.length; i--){\n    //     fillArray.push(new Array(4).fill(''));\n    //     console.log(fillArray);\n    //   }  \n    // }\n    \n    \n    let orderedWithMealPlan = [];\n    patients.filter(patient=> {\n       if( patient.mealPlans[0] !== undefined){\n         orderedWithMealPlan.push(patient)\n       }\n      return orderedWithMealPlan; \n    })\n    \n    orderedWithMealPlan.sort(function(a,b){\n      return new Date(a.endDate) - new Date(b.endDate);\n    });\n    \n    //pacientes con meal plan, sorteado de meal plan mas proximo a mas lejano\n    let top3Renewals = orderedWithMealPlan.slice(0,3)\n      \n    return (\n      <Grid container>\n        \n        <Grid item style={{paddingRight: '30px', flex: 2}}>\n          <PatientsList data={patientsList} numRows={numRows} currentUserId={currentUserId} />\n        </Grid>\n\n        <Grid container direction={'column'} justify={'space-between'} style={{flex: 1}}>\n        \n          <Paper justify='center' style={{height: '45%'}}>\n            <SnackbarContent message={'Pacientes por renovar'} style={{width: '80%', margin: '-15px auto 0', textAlign: 'center', backgroundColor: '#3f51b5'}} />\n            <Grid container style={{height: '86%'}}>\n              <Grid container style={{padding: '16px 30px 0 30px', borderBottom: '1px solid black'}} >\n                <Grid item xs={5}>Nombre</Grid>\n                <Grid item style={{textAlign: 'center'}} xs={3}>DÃ­as</Grid>\n                <Grid item style={{textAlign: 'end'}} xs={4}>Fecha fin</Grid>\n              </Grid>\n              {top3Renewals.map((renewal, i) => {\n                const formattedEndDate = moment.utc(renewal.mealPlans[0].endDate).format('L');\n                const remainingDays = moment().diff(renewal.mealPlans[0].endDate, 'days');\n                let alpha = 1/(3.14*(i+1))\n                return(\n                  <Grid key={renewal._id} style={{padding: '8px 30px', backgroundColor: `rgba(255, 0, 0, ${alpha})`}} container alignItems='center'>\n                    <Grid item xs={5} >\n                      <Typography>{renewal.firstName} {renewal.lastName}</Typography>\n                    </Grid>\n                    <Grid item xs={3} style={{textAlign: 'center'}}>\n                      <Typography>{remainingDays}</Typography> {/*dias restantes. OK, pero endDate de mealPlan solo pueden ser en el futuro*/}                 \n                    </Grid>\n                    <Grid item xs={4} style={{textAlign: 'end'}} >\n                      <Typography>{formattedEndDate}</Typography> {/*fecha fin*/}                 \n                    </Grid>\n                  </Grid>\n              )})}\n            </Grid>\n          </Paper>  \n          \n          \n          <Paper justify='center' style={{height: '45%'}}>\n            <SnackbarContent message={'Ãšltimas consultas'} style={{width: '80%', margin: '-15px auto 0', textAlign: 'center', backgroundColor: '#3f51b5'}} />\n            <Grid container style={{height: '86%'}}>\n              <Grid container style={{padding: '16px 30px 0 30px', borderBottom: '1px solid black'}} >\n                <Grid item xs={5}>Nombre</Grid>\n                <Grid item style={{textAlign: 'center'}} xs={3}>Fecha</Grid>\n                <Grid item style={{textAlign: 'end'}} xs={4}>Motivo</Grid>\n              </Grid> \n              {/*==========HACER LOGICA DE ULTIMOS PACIENTES============*/}\n              {top3Renewals.map((renewal, i) => {\n                const formattedEndDate = moment.utc(renewal.mealPlans[0].endDate).format('L');\n                const remainingDays = moment().diff(renewal.mealPlans[0].endDate, 'days');\n                let alpha = 1/(3.14*(i+1))\n                return(\n                  <Grid key={renewal._id} style={{padding: '8px 30px', backgroundColor: `rgba(0, 0, 255, ${alpha})`}} container alignItems='center'>\n                    <Grid item xs={5} >\n                      <Typography>{renewal.firstName} {renewal.lastName}</Typography>\n                    </Grid>\n                    <Grid item xs={3} style={{textAlign: 'center'}}>\n                      <Typography>{remainingDays}</Typography> {/*dias restantes. OK, pero endDate de mealPlan solo pueden ser en el futuro*/}                 \n                    </Grid>\n                    <Grid item xs={4} style={{textAlign: 'end'}} >\n                      <Typography>{formattedEndDate}</Typography> {/*fecha fin*/}                 \n                    </Grid>\n                  </Grid>\n              )})}\n            </Grid>\n          </Paper>  \n          \n        </Grid>\n      </Grid>\n    );\n  }\n};\n\nfunction mapStateToProps(state){\n  return{\n    appointments: state.appointments,\n    patients: state.patients,\n    currentUserId: state.currentUser.user.id\n  };\n};\n  \nexport default connect(mapStateToProps, {fetchPatients, addPatient, fetchAppointments})(PatientsMain);"]},"metadata":{},"sourceType":"module"}