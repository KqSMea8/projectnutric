{"ast":null,"code":"import _defineProperty from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ubuntu/workspace/nutric-client/src/Main/components/Schedule/Popup.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Add from '@material-ui/icons/Add';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DateTimeRangePicker from '@wojtekmaj/react-datetimerange-picker';\nimport DateTimePicker from 'react-datetime-picker';\nimport Input from '@material-ui/core/Input';\nimport { apiCall } from '../../services/api';\nimport SearchDropdown from './SearchDropdown';\nimport ScheduleAppointmentPicker from './DatePicker';\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport \"antd/dist/antd.css\";\nimport { TimePicker } from \"antd\";\nimport { DatePicker } from \"antd\";\nvar styles = {\n  dialogPaper: {\n    minHeight: '85vh',\n    maxHeight: '85vh'\n  }\n};\n\nvar Popup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Popup, _Component);\n\n  function Popup() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Popup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Popup)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false,\n      multiline: \"\",\n      scheduledTimeStart: null,\n      scheduledTimeEnd: null,\n      scheduledTimeDuration: 45,\n      notes: \"\",\n      patient: \"\",\n      endTime: moment().add(15 - moment().minute() % 15, \"minutes\").add(45, \"minutes\"),\n      startTime: moment().add(15 - moment().minute() % 15, \"minutes\"),\n      date: moment().set({\n        hour: 0,\n        minute: 0,\n        second: 0,\n        millisecond: 0\n      })\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault(); //necesito lo siguiente:\n      // scheduledTime: req.body.scheduledTime,\n      // scheduledDuration: req.body.scheduledDuration,\n      // notes: req.body.notes, (opcional)\n      // expert: req.params.expert_id,\n      // patient: req.body.patient_id \n\n      var currentUserId = _this.props.currentUserId;\n      console.log(_this.state.scheduledTime);\n      console.log(_this.state.scheduledDuration);\n      console.log(_this.state.notes);\n      console.log(_this.state.patient);\n      console.log(currentUserId);\n      apiCall(\"post\", \"/api/experts/\".concat(currentUserId, \"/scheduledappointments/\"), {\n        scheduledTime: _this.state.scheduledTime,\n        scheduledDuration: _this.state.scheduledDuration,\n        notes: _this.state.notes,\n        patient_id: _this.state.patient\n      }).then(function (res) {\n        console.log(res);\n      }).catch(function (err) {\n        console.log(\"No se puede agendar una consulta. Intente nuevamente\");\n      });\n    };\n\n    _this.onPatientSelected = function (patientId) {\n      _this.setState({\n        patient: patientId.value\n      });\n    };\n\n    _this.handleClickOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleChange = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.value));\n      };\n    };\n\n    _this.handleTimeChange = function (name) {\n      return function (time) {\n        _this.setState(_defineProperty({}, name, time));\n      };\n    };\n\n    _this.onChangeStart = function (scheduledTime) {\n      return _this.setState({\n        scheduledTime: scheduledTime\n      });\n    };\n\n    _this.onChangeEnd = function (scheduledTimeEnd) {\n      return _this.setState({\n        scheduledTimeEnd: scheduledTimeEnd\n      });\n    };\n\n    _this.handleTimeChange = function (name) {\n      return function (time) {\n        _this.setState(_defineProperty({}, name, time));\n      };\n    };\n\n    _this.handleDateChange = function (date) {\n      var newDate = date.set({\n        hour: 0,\n        minute: 0,\n        second: 0,\n        millisecond: 0\n      });\n\n      _this.setState({\n        date: newDate\n      });\n    };\n\n    _this.disabledDate = function (current) {\n      return current && current < moment().subtract(1, \"days\").endOf(\"day\");\n    };\n\n    _this.getDisabledHours = function () {\n      var hours = [];\n\n      for (var i = 0; i < moment().hour(); i++) {\n        hours.push(i);\n      }\n\n      return hours;\n    };\n\n    _this.getDisabledHoursEnd = function () {\n      var hours = [];\n\n      for (var i = 0; i < _this.state.startTime.hour(); i++) {\n        hours.push(i);\n      }\n\n      return hours;\n    };\n\n    _this.getDisabledMinutes = function (selectedHour) {\n      var minutes = [];\n\n      if (selectedHour === moment().hour()) {\n        for (var i = 0; i < moment().minute(); i++) {\n          minutes.push(i);\n        }\n      }\n\n      return minutes;\n    };\n\n    _this.getDisabledMinutesEnd = function (selectedHour) {\n      var minutes = [];\n\n      if (selectedHour === _this.state.startTime.hour()) {\n        for (var i = 0; i < _this.state.startTime.minute() + 1; i++) {\n          minutes.push(i);\n        }\n      }\n\n      return minutes;\n    };\n\n    return _this;\n  }\n\n  _createClass(Popup, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          currentUserId = _this$props.currentUserId,\n          patient = _this$props.patient;\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: this.handleClickOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Add, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), \" Agendar cita\"), React.createElement(Dialog, {\n        classes: {\n          paper: classes.dialogPaper\n        },\n        open: this.state.open,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Agendar nueva cita\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"space-between\",\n        alignItems: \"baseline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"space-between\",\n        alignItems: \"flex-start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        md: 8,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        justify: \"space-between\",\n        alignItems: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        md: 3,\n        xs: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Paciente:\"), React.createElement(Grid, {\n        item: true,\n        md: 9,\n        xs: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(SearchDropdown, {\n        patient: patient,\n        onPatientSelected: this.onPatientSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      })))), React.createElement(Grid, {\n        item: true,\n        md: 1,\n        xs: 12,\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"o\"), React.createElement(Grid, {\n        item: true,\n        md: 3,\n        xs: 12,\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/pacientes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        size: \"small\",\n        style: {\n          margin: \"5px 0px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(Add, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }), \"Nuevo Paciente\")))), React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"space-between\",\n        alignItems: \"flex-end\",\n        spacing: 40,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        md: 2,\n        xs: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"Fecha:\"), React.createElement(Grid, {\n        item: true,\n        md: 10,\n        xs: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        value: this.state.date,\n        onChange: this.handleDateChange,\n        format: \"DD/MMMM/YYYY\",\n        placeholder: \"Fecha\",\n        showToday: false,\n        disabledDate: this.disabledDate,\n        allowClear: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        md: 1,\n        xs: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Inicio:\"), React.createElement(Grid, {\n        item: true,\n        md: 5,\n        xs: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(TimePicker, {\n        use12Hours: true,\n        value: this.state.startTime,\n        onChange: this.handleTimeChange(\"startTime\"),\n        format: \"h:mm a\",\n        placeholder: \"Inicio\",\n        disabledHours: this.getDisabledHours,\n        disabledMinutes: this.getDisabledMinutes,\n        minuteStep: 5,\n        allowEmpty: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        md: 1,\n        xs: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"Fin:\"), React.createElement(Grid, {\n        item: true,\n        md: 5,\n        xs: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(TimePicker, {\n        use12Hours: true,\n        value: this.state.endTime,\n        onChange: this.handleTimeChange(\"endTime\"),\n        format: \"h:mm a\",\n        placeholder: \"Fin\",\n        disabledHours: this.getDisabledHoursEnd,\n        disabledMinutes: this.getDisabledMinutesEnd,\n        minuteStep: 5,\n        allowEmpty: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        md: 2,\n        xs: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"Duraci\\xF3n:\"), React.createElement(Grid, {\n        item: true,\n        md: 10,\n        xs: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"number\",\n        disabled: true,\n        placeholder: \"tiempo (minutos)\",\n        value: moment(this.state.endTime).diff(this.state.startTime, \"minutes\"),\n        onChange: this.handleChange('scheduledTimeDuration') + \" minutos\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \" minutos\")), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-multiline-flexible\",\n        label: \"Descripci\\xF3n (opcional)\",\n        multiline: true,\n        rowsMax: \"4\",\n        value: this.state.notes,\n        onChange: this.handleChange('notes'),\n        margin: \"normal\",\n        variant: \"outlined\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      })))))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \"Cerrar\"), React.createElement(Button, {\n        onClick: this.handleSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"Agendar cita\"))));\n    }\n  }]);\n\n  return Popup;\n}(Component);\n\nPopup.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    patients: state.patients,\n    currentUserId: state.currentUser.user.id\n  };\n}\n\n;\nexport default connect(mapStateToProps, null)(withStyles(styles)(Popup));","map":{"version":3,"sources":["/home/ubuntu/workspace/nutric-client/src/Main/components/Schedule/Popup.js"],"names":["React","Component","connect","NavLink","PropTypes","withStyles","Button","Add","Grid","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","DateTimeRangePicker","DateTimePicker","Input","apiCall","SearchDropdown","ScheduleAppointmentPicker","moment","TimePicker","DatePicker","styles","dialogPaper","minHeight","maxHeight","Popup","state","open","multiline","scheduledTimeStart","scheduledTimeEnd","scheduledTimeDuration","notes","patient","endTime","add","minute","startTime","date","set","hour","second","millisecond","handleSubmit","e","preventDefault","currentUserId","props","console","log","scheduledTime","scheduledDuration","patient_id","then","res","catch","err","onPatientSelected","patientId","setState","value","handleClickOpen","handleClose","handleChange","name","event","target","handleTimeChange","time","onChangeStart","onChangeEnd","handleDateChange","newDate","disabledDate","current","subtract","endOf","getDisabledHours","hours","i","push","getDisabledHoursEnd","getDisabledMinutes","selectedHour","minutes","getDisabledMinutesEnd","classes","paper","margin","diff","propTypes","object","isRequired","mapStateToProps","patients","currentUser","user","id"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Add from '@material-ui/icons/Add'\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DateTimeRangePicker from '@wojtekmaj/react-datetimerange-picker';\nimport DateTimePicker from 'react-datetime-picker'\nimport Input from '@material-ui/core/Input';\nimport {apiCall} from '../../services/api'\nimport SearchDropdown from './SearchDropdown'\nimport ScheduleAppointmentPicker from './DatePicker'\n\n\nimport moment from 'moment';\nimport 'moment/locale/es';\n\nimport \"antd/dist/antd.css\";\nimport { TimePicker } from \"antd\";\nimport { DatePicker } from \"antd\";\n\nconst styles = {\n    dialogPaper: {\n        minHeight: '85vh',\n        maxHeight: '85vh',\n    }\n};\n\n\nclass Popup extends Component {\n  state = {\n    open: false,\n    multiline:\"\",\n    scheduledTimeStart: null,\n    scheduledTimeEnd: null,\n    scheduledTimeDuration: 45,\n    notes:\"\",\n    patient:\"\",\n    endTime: moment().add(15 - (moment().minute() % 15), \"minutes\").add(45, \"minutes\"),\n    startTime: moment().add(15 - (moment().minute() % 15), \"minutes\"),\n    date: moment().set({ hour: 0, minute: 0, second: 0, millisecond: 0 })\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    //necesito lo siguiente:\n      // scheduledTime: req.body.scheduledTime,\n      // scheduledDuration: req.body.scheduledDuration,\n      // notes: req.body.notes, (opcional)\n      // expert: req.params.expert_id,\n      // patient: req.body.patient_id \n      const { currentUserId } = this.props\n      console.log(this.state.scheduledTime)\n      console.log(this.state.scheduledDuration)\n      console.log(this.state.notes)\n      console.log(this.state.patient)\n      console.log(currentUserId)\n      \n      apiCall(\"post\", `/api/experts/${currentUserId}/scheduledappointments/`,{\n        scheduledTime:this.state.scheduledTime,\n        scheduledDuration:this.state.scheduledDuration,\n        notes:this.state.notes,\n        patient_id:this.state.patient,\n      })\n      .then(res => {\n        console.log(res);\n      })\n      .catch(err => {\n      console.log(\"No se puede agendar una consulta. Intente nuevamente\")\n      });\n  }\n\n  onPatientSelected = (patientId) => {\n    this.setState({ patient: patientId.value });\n  };\n  \n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n  \n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n  \n  handleTimeChange = name => time => {\n    this.setState({\n      [name]: time\n    });\n  };\n  \n  onChangeStart = scheduledTime => this.setState({ scheduledTime })\n  onChangeEnd = scheduledTimeEnd => this.setState({ scheduledTimeEnd })\n  \n  handleTimeChange = name => time => {\n    this.setState({\n      [name]: time\n    });\n  };\n\n  handleDateChange = date => {\n    const newDate = date.set({ hour: 0, minute: 0, second: 0, millisecond: 0 });\n    this.setState({ date: newDate });\n  };\n  disabledDate = current => {\n    return (\n      current &&\n      current <\n        moment()\n          .subtract(1, \"days\")\n          .endOf(\"day\")\n    );\n  };\n\n  getDisabledHours = () => {\n    var hours = [];\n    for (var i = 0; i < moment().hour(); i++) {\n      hours.push(i);\n    }\n    return hours;\n  };\n\n  getDisabledHoursEnd = () => {\n    var hours = [];\n    for (var i = 0; i < this.state.startTime.hour(); i++) {\n      hours.push(i);\n    }\n    return hours;\n  };\n\n  getDisabledMinutes = selectedHour => {\n    var minutes = [];\n    if (selectedHour === moment().hour()) {\n      for (var i = 0; i < moment().minute(); i++) {\n        minutes.push(i);\n      }\n    }\n    return minutes;\n  };\n\n  getDisabledMinutesEnd = selectedHour => {\n    var minutes = [];\n    if (selectedHour === this.state.startTime.hour()) {\n      for (var i = 0; i < this.state.startTime.minute() + 1; i++) {\n        minutes.push(i);\n      }\n    }\n    return minutes;\n  };\n  \n  render() {\n    const {currentUserId, patient}=this.props\n    const { classes } = this.props;\n    \n    return (\n      <div>\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>\n          <Add/> Agendar cita\n        </Button> \n        <Dialog\n          classes={{paper:classes.dialogPaper}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Agendar nueva cita</DialogTitle>\n          <DialogContent>\n            <form onSubmit={this.handleSubmit}>\n              <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"baseline\">\n                <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"flex-start\">\n                  <Grid item md={8} xs={12}>  \n                    <Grid container justify=\"space-between\" alignItems=\"center\">\n                      <Grid item md={3} xs={4}>Paciente:</Grid>\n                      <Grid item md={9} xs={8}>\n                          <SearchDropdown patient={patient} onPatientSelected={this.onPatientSelected}/>\n                      </Grid>\n                    </Grid>\n                  </Grid>  \n                  <Grid item md={1} xs={12} align=\"center\">o</Grid>\n                  <Grid item md={3} xs={12} align=\"center\">\n                    <NavLink to=\"/pacientes\">\n                      <Button variant=\"outlined\" color=\"primary\" size=\"small\" style={{margin: \"5px 0px\"}}>\n                        <Add/>\n                        Nuevo Paciente\n                      </Button>\n                    </NavLink>\n                  </Grid>\n                </Grid>\n                <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"flex-end\" spacing={40}>\n                  <Grid item md={2} xs={4}>Fecha:</Grid>\n                  <Grid item md={10} xs={8}>\n                    <DatePicker\n                      value={this.state.date}\n                      onChange={this.handleDateChange}\n                      format={\"DD/MMMM/YYYY\"}\n                      placeholder=\"Fecha\"\n                      showToday={false}\n                      disabledDate={this.disabledDate}\n                      allowClear={false}\n                    />\n                  </Grid>\n                  <Grid item md={1} xs={4}>Inicio:</Grid>\n                  <Grid item md={5} xs={8}>\n                    <TimePicker\n                      use12Hours\n                      value={this.state.startTime}\n                      onChange={this.handleTimeChange(\"startTime\")}\n                      format={\"h:mm a\"}\n                      placeholder=\"Inicio\"\n                      disabledHours={this.getDisabledHours}\n                      disabledMinutes={this.getDisabledMinutes}\n                      minuteStep={5}\n                      allowEmpty={false}\n                    />\n                  </Grid>\n                  <Grid item md={1} xs={4}>Fin:</Grid>\n                  <Grid item md={5} xs={8}>\n                    <TimePicker\n                      use12Hours\n                      value={this.state.endTime}\n                      onChange={this.handleTimeChange(\"endTime\")}\n                      format={\"h:mm a\"}\n                      placeholder=\"Fin\"\n                      disabledHours={this.getDisabledHoursEnd}\n                      disabledMinutes={this.getDisabledMinutesEnd}\n                      minuteStep={5}\n                      allowEmpty={false}\n                    />\n                  </Grid>\n                  <Grid item md={2} xs={4}>Duración:</Grid>\n                  <Grid item md={10} xs={8}>\n                        <Input\n                          type=\"number\"\n                          disabled\n                          placeholder=\"tiempo (minutos)\"\n                          value={moment(this.state.endTime).diff(this.state.startTime, \"minutes\")}\n                          onChange={this.handleChange('scheduledTimeDuration')+\" minutos\"}\n                        /><span> minutos</span>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      id=\"outlined-multiline-flexible\"\n                      label=\"Descripción (opcional)\"\n                      multiline\n                      rowsMax=\"4\"\n                      value={this.state.notes}\n                      onChange={this.handleChange('notes')}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      fullWidth\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </form>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"secondary\">\n              Cerrar\n            </Button>\n            <Button onClick={this.handleSubmit} variant=\"contained\" color=\"primary\">\n              Agendar cita\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nPopup.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nfunction mapStateToProps(state){\n  return{\n    patients: state.patients,\n    currentUserId: state.currentUser.user.id\n  };\n};\n  \nexport default connect(mapStateToProps, null)(withStyles(styles)(Popup));"]},"metadata":{},"sourceType":"module"}