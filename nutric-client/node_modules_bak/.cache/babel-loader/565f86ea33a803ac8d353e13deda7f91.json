{"ast":null,"code":"import { apiCall } from '../../services/api';\nimport { addError } from './errors';\nimport { LOAD_PATIENTS, DELETE_PATIENT } from '../actionTypes';\nexport var loadPatients = function loadPatients(patients) {\n  return {\n    type: LOAD_PATIENTS,\n    patients: patients\n  };\n};\nexport var removePatient = function removePatient(id) {\n  return {\n    type: DELETE_PATIENT,\n    id: id\n  };\n};\nexport var fetchPatients = function fetchPatients(expert_id) {\n  return function (dispatch) {\n    return apiCall(\"get\", \"/api/experts/\".concat(expert_id, \"/patients\")).then(function (res) {\n      dispatch(loadPatients(res));\n    }).catch(function (err) {\n      dispatch(addError(err.message));\n    });\n  };\n};\nexport var addPatient = function addPatient(expert_id, firstName, lastName, mail, phone, gender, birthDate, nationality, idNumber, address) {\n  return function (dispatch, getState) {\n    return apiCall(\"post\", \"/api/experts/\".concat(expert_id, \"/patients\"), {\n      firstName: firstName,\n      lastName: lastName,\n      mail: mail,\n      phone: phone,\n      gender: gender,\n      birthDate: birthDate,\n      nationality: nationality,\n      idNumber: idNumber,\n      address: address\n    }) //uso de ES6\n    .then(function (res) {\n      return console.log('added patient with the following data: ' + res);\n    }).catch(function (err) {\n      return dispatch(addError(err.message));\n    });\n  };\n};\nexport var deletePatient = function deletePatient(expert_id, patient_id) {\n  return function (dispatch) {\n    return apiCall(\"delete\", \"/api/experts/\".concat(expert_id, \"/patients/\").concat(patient_id)).then(function () {\n      return dispatch(removePatient(patient_id));\n    }).catch(function (err) {\n      addError(err.message);\n    });\n  };\n};","map":{"version":3,"sources":["/home/ubuntu/workspace/nutric-client/src/Main/store/actions/patients.js"],"names":["apiCall","addError","LOAD_PATIENTS","DELETE_PATIENT","loadPatients","patients","type","removePatient","id","fetchPatients","expert_id","dispatch","then","res","catch","err","message","addPatient","firstName","lastName","mail","phone","gender","birthDate","nationality","idNumber","address","getState","console","log","deletePatient","patient_id"],"mappings":"AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,gBAA9C;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,QAAD;AAAA,SAAe;AACzCC,IAAAA,IAAI,EAAEJ,aADmC;AAEzCG,IAAAA,QAAQ,EAAEA;AAF+B,GAAf;AAAA,CAArB;AAKP,OAAO,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,EAAE;AAAA,SAAK;AAClCF,IAAAA,IAAI,EAAEH,cAD4B;AAElCK,IAAAA,EAAE,EAAFA;AAFkC,GAAL;AAAA,CAAxB;AAMP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,SAAD,EAAe;AAC1C,SAAO,UAACC,QAAD,EAAc;AACnB,WAAOX,OAAO,CAAC,KAAD,yBAAwBU,SAAxB,eAAP,CACJE,IADI,CACC,UAAAC,GAAG,EAAI;AACXF,MAAAA,QAAQ,CAACP,YAAY,CAACS,GAAD,CAAb,CAAR;AACD,KAHI,EAIJC,KAJI,CAIE,UAAAC,GAAG,EAAI;AACZJ,MAAAA,QAAQ,CAACV,QAAQ,CAACc,GAAG,CAACC,OAAL,CAAT,CAAR;AACD,KANI,CAAP;AAQD,GATD;AAUD,CAXM;AAaP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CACxBP,SADwB,EAExBQ,SAFwB,EAGxBC,QAHwB,EAIxBC,IAJwB,EAKxBC,KALwB,EAMxBC,MANwB,EAOxBC,SAPwB,EAQxBC,WARwB,EASxBC,QATwB,EAUxBC,OAVwB;AAAA,SAWnB,UAACf,QAAD,EAAWgB,QAAX,EAAwB;AAC7B,WAAO3B,OAAO,CAAC,MAAD,yBAAyBU,SAAzB,gBAA+C;AAAEQ,MAAAA,SAAS,EAATA,SAAF;AAAaC,MAAAA,QAAQ,EAARA,QAAb;AAAuBC,MAAAA,IAAI,EAAJA,IAAvB;AAA6BC,MAAAA,KAAK,EAALA,KAA7B;AAAoCC,MAAAA,MAAM,EAANA,MAApC;AAA4CC,MAAAA,SAAS,EAATA,SAA5C;AAAuDC,MAAAA,WAAW,EAAXA,WAAvD;AAAoEC,MAAAA,QAAQ,EAARA,QAApE;AAA8EC,MAAAA,OAAO,EAAPA;AAA9E,KAA/C,CAAP,CAA+I;AAA/I,KACJd,IADI,CACC,UAAAC,GAAG;AAAA,aAAKe,OAAO,CAACC,GAAR,CAAY,4CAA4ChB,GAAxD,CAAL;AAAA,KADJ,EAEJC,KAFI,CAEE,UAAAC,GAAG;AAAA,aAAIJ,QAAQ,CAACV,QAAQ,CAACc,GAAG,CAACC,OAAL,CAAT,CAAZ;AAAA,KAFL,CAAP;AAGD,GAfyB;AAAA,CAAnB;AAkBP,OAAO,IAAMc,aAAa,GAAG,SAAhBA,aAAgB,CAACpB,SAAD,EAAYqB,UAAZ,EAA2B;AACtD,SAAO,UAAApB,QAAQ,EAAI;AACjB,WAAOX,OAAO,CAAC,QAAD,yBAA2BU,SAA3B,uBAAiDqB,UAAjD,EAAP,CACJnB,IADI,CACC;AAAA,aAAMD,QAAQ,CAACJ,aAAa,CAACwB,UAAD,CAAd,CAAd;AAAA,KADD,EAEJjB,KAFI,CAEE,UAAAC,GAAG,EAAI;AACZd,MAAAA,QAAQ,CAACc,GAAG,CAACC,OAAL,CAAR;AACD,KAJI,CAAP;AAKD,GAND;AAOD,CARM","sourcesContent":["import { apiCall } from '../../services/api';\nimport { addError } from './errors';\nimport { LOAD_PATIENTS, DELETE_PATIENT } from '../actionTypes';\n\nexport const loadPatients = (patients) => ({\n  type: LOAD_PATIENTS,\n  patients: patients\n});\n\nexport const removePatient = id => ({\n  type: DELETE_PATIENT,\n  id\n});\n\n\nexport const fetchPatients = (expert_id) => {\n  return (dispatch) => {\n    return apiCall(\"get\", `/api/experts/${expert_id}/patients`)\n      .then(res => {\n        dispatch(loadPatients(res));\n      })\n      .catch(err => {\n        dispatch(addError(err.message));\n      });\n    \n  };\n};\n\nexport const addPatient = (\n  expert_id, \n  firstName, \n  lastName, \n  mail, \n  phone,\n  gender,\n  birthDate,\n  nationality,\n  idNumber,\n  address, \n  ) => (dispatch, getState) => {\n  return apiCall(\"post\", `/api/experts/${expert_id}/patients`, { firstName, lastName, mail, phone, gender, birthDate, nationality, idNumber, address }) //uso de ES6\n    .then(res => (console.log('added patient with the following data: ' + res)))\n    .catch(err => dispatch(addError(err.message)))\n};\n\n\nexport const deletePatient = (expert_id, patient_id) => {\n  return dispatch => {\n    return apiCall(\"delete\", `/api/experts/${expert_id}/patients/${patient_id}`)\n      .then(() => dispatch(removePatient(patient_id)))\n      .catch(err => {\n        addError(err.message);\n      });\n  };\n};"]},"metadata":{},"sourceType":"module"}