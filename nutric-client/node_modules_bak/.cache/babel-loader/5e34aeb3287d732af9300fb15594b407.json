{"ast":null,"code":"import _classCallCheck from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ubuntu/workspace/nutric-client/src/Main/components/MealPlans/TableGoals.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nvar CustomTableCell = withStyles(function (theme) {\n  return {\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white\n    },\n    body: {\n      fontSize: 14\n    }\n  };\n})(TableCell);\n\nvar styles = function styles(theme) {\n  return {\n    root: {},\n    table: {},\n    row: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.background.default\n      }\n    }\n  };\n};\n\nvar id = 0;\n\nfunction createData(name, calories, fat, carbs, protein) {\n  id += 1;\n  return {\n    id: id,\n    name: name,\n    calories: calories,\n    fat: fat,\n    carbs: carbs,\n    protein: protein\n  };\n}\n\nvar rows = [createData('Frozen yoghurt', 159, 6.0, 24, 4.0), createData('Ice cream sandwich', 237, 9.0, 37, 4.3), createData('Eclair', 262, 16.0, 24, 6.0), createData('Cupcake', 305, 3.7, 67, 4.3)];\n\nvar TableGoals =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TableGoals, _Component);\n\n  function TableGoals() {\n    _classCallCheck(this, TableGoals);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TableGoals).apply(this, arguments));\n  }\n\n  _createClass(TableGoals, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(Paper, {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: classes.table,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(CustomTableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Macros del d\\xEDa\"), React.createElement(CustomTableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Actual\"), React.createElement(CustomTableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Objetivo\"), React.createElement(CustomTableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Restante\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, rows.map(function (row) {\n        return React.createElement(TableRow, {\n          className: classes.row,\n          key: row.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(CustomTableCell, {\n          component: \"th\",\n          scope: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, row.name), React.createElement(CustomTableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, row.calories), React.createElement(CustomTableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, row.fat), React.createElement(CustomTableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, row.carbs));\n      }))));\n    }\n  }]);\n\n  return TableGoals;\n}(Component);\n\nTableGoals.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(TableGoals);","map":{"version":3,"sources":["/home/ubuntu/workspace/nutric-client/src/Main/components/MealPlans/TableGoals.js"],"names":["React","Component","PropTypes","withStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","CustomTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","styles","root","table","row","background","default","id","createData","name","calories","fat","carbs","protein","rows","TableGoals","classes","props","map","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst styles = theme => ({\n  root: {\n\n  },\n  table: {\n\n  },\n  row: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n});\n\nlet id = 0;\nfunction createData(name, calories, fat, carbs, protein) {\n  id += 1;\n  return { id, name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3)\n];\n\nclass TableGoals extends Component {\n  render(){\n  const { classes } = this.props;\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <CustomTableCell>Macros del día</CustomTableCell>\n            <CustomTableCell align=\"right\">Actual</CustomTableCell>\n            <CustomTableCell align=\"right\">Objetivo</CustomTableCell>\n            <CustomTableCell align=\"right\">Restante</CustomTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => {\n            return (\n              <TableRow className={classes.row} key={row.id}>\n                <CustomTableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </CustomTableCell>\n                <CustomTableCell align=\"right\">{row.calories}</CustomTableCell>\n                <CustomTableCell align=\"right\">{row.fat}</CustomTableCell>\n                <CustomTableCell align=\"right\">{row.carbs}</CustomTableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </Paper>\n    )\n  }\n}\n\n\nTableGoals.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TableGoals);"]},"metadata":{},"sourceType":"module"}