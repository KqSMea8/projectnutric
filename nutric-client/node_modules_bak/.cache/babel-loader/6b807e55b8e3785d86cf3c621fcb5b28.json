{"ast":null,"code":"import _defineProperty from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ubuntu/workspace/nutric-client/src/Main/components/MealPlans/PopupMealPlanTemplate.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Input from '@material-ui/core/Input';\nimport { apiCall } from '../../services/api'; // import SearchDropdown from './SearchDropdown'\n\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport \"antd/dist/antd.css\";\nimport { TimePicker } from \"antd\";\nimport { DatePicker } from \"antd\";\nvar styles = {\n  dialogPaper: {\n    minHeight: '45vh',\n    maxHeight: '45vh'\n  }\n};\n\nvar Popup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Popup, _Component);\n\n  function Popup() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Popup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Popup)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false,\n      multiline: \"\",\n      scheduledTimeDuration: 45,\n      notes: \"\",\n      patient: \"\",\n      endTime: moment().add(15 - moment().minute() % 15, \"minutes\").add(45, \"minutes\").set({\n        second: 0,\n        millisecond: 0\n      }),\n      startTime: moment().add(15 - moment().minute() % 15, \"minutes\").set({\n        second: 0,\n        millisecond: 0\n      }),\n      date: moment().set({\n        hour: 0,\n        minute: 0,\n        second: 0,\n        millisecond: 0\n      })\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var currentUserId = _this.props.currentUserId; // scheduledTimeStart,\n\n      var scheduledTimeStart = _this.state.date.set({\n        hour: _this.state.startTime.hours(),\n        minute: _this.state.startTime.minutes()\n      }).toDate(); // scheduledTimeEnd,\n\n\n      var scheduledTimeEnd = _this.state.date.set({\n        hour: _this.state.endTime.hours(),\n        minute: _this.state.endTime.minutes()\n      }).toDate(); // scheduledTimeDuration,\n\n\n      var duration = _this.state.endTime.diff(_this.state.startTime, \"minutes\");\n\n      apiCall(\"post\", \"/api/experts/\".concat(currentUserId, \"/scheduledappointments/\"), {\n        scheduledTimeStart: scheduledTimeStart,\n        scheduledTimeEnd: scheduledTimeEnd,\n        scheduledTimeDuration: duration,\n        notes: _this.state.notes,\n        patient_id: _this.state.patient\n      }).then(function (res) {\n        console.log(res); // ¿Cómo se redirigía con history?\n\n        window.location.href = \"/agenda\";\n      }).catch(function (err) {\n        console.log(err);\n      });\n    };\n\n    _this.onPatientSelected = function (patientId) {\n      _this.setState({\n        patient: patientId.value\n      });\n    };\n\n    _this.handleClickOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleChange = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.value));\n      };\n    };\n\n    _this.handleTimeChange = function (name) {\n      return function (time) {\n        _this.setState(_defineProperty({}, name, time.set({\n          second: 0,\n          millisecond: 0\n        })));\n      };\n    };\n\n    _this.handleTimeChangeStart = function (time) {\n      _this.setState({\n        startTime: time,\n        endTime: time\n      });\n    };\n\n    _this.handleDateChange = function (date) {\n      _this.setState({\n        date: date.set({\n          hour: 0,\n          minute: 0,\n          second: 0,\n          millisecond: 0\n        })\n      });\n    };\n\n    _this.disabledDate = function (current) {\n      return current && current < moment().subtract(1, \"days\").endOf(\"day\");\n    };\n\n    _this.getDisabledHours = function () {\n      var hours = [];\n\n      if (_this.state.date.day() === moment().day()) {\n        for (var i = 0; i < moment().hour(); i++) {\n          hours.push(i);\n        }\n      }\n\n      return hours;\n    };\n\n    _this.getDisabledHoursEnd = function () {\n      var hours = [];\n\n      for (var i = 0; i < _this.state.startTime.hour(); i++) {\n        hours.push(i);\n      }\n\n      return hours;\n    };\n\n    _this.getDisabledMinutes = function (selectedHour) {\n      var minutes = [];\n\n      if (selectedHour === moment().hour() && _this.state.date.day() === moment().day()) {\n        for (var i = 0; i < moment().minute(); i++) {\n          minutes.push(i);\n        }\n      }\n\n      return minutes;\n    };\n\n    _this.getDisabledMinutesEnd = function (selectedHour) {\n      var minutes = [];\n\n      if (selectedHour === _this.state.startTime.hour()) {\n        for (var i = 0; i < _this.state.startTime.minute() + 1; i++) {\n          minutes.push(i);\n        }\n      }\n\n      return minutes;\n    };\n\n    return _this;\n  }\n\n  _createClass(Popup, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          currentUserId = _this$props.currentUserId,\n          patient = _this$props.patient;\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        disableRipple: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(DeleteIcon, {\n        style: {\n          color: \"red\"\n        },\n        onClick: this.handleClickOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      })), React.createElement(Dialog, {\n        classes: {\n          paper: classes.dialogPaper\n        },\n        open: this.state.open,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"\\xBFRealmente quieres eliminar esta plantilla?\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Esta acci\\xF3n no es reversible. Si haces click en eliminar, se borrar\\xE1 permanentemente esta plantilla.\"), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Cerrar\"), React.createElement(Button, {\n        onClick: this.handleSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Agendar cita\"))));\n    }\n  }]);\n\n  return Popup;\n}(Component);\n\nPopup.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    patients: state.patients,\n    currentUserId: state.currentUser.user.id\n  };\n}\n\n;\nexport default connect(mapStateToProps, null)(withStyles(styles)(Popup));","map":{"version":3,"sources":["/home/ubuntu/workspace/nutric-client/src/Main/components/MealPlans/PopupMealPlanTemplate.js"],"names":["React","Component","connect","Redirect","NavLink","PropTypes","withStyles","Button","IconButton","DeleteIcon","Grid","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Input","apiCall","moment","TimePicker","DatePicker","styles","dialogPaper","minHeight","maxHeight","Popup","state","open","multiline","scheduledTimeDuration","notes","patient","endTime","add","minute","set","second","millisecond","startTime","date","hour","handleSubmit","e","preventDefault","currentUserId","props","scheduledTimeStart","hours","minutes","toDate","scheduledTimeEnd","duration","diff","patient_id","then","res","console","log","window","location","href","catch","err","onPatientSelected","patientId","setState","value","handleClickOpen","handleClose","handleChange","name","event","target","handleTimeChange","time","handleTimeChangeStart","handleDateChange","disabledDate","current","subtract","endOf","getDisabledHours","day","i","push","getDisabledHoursEnd","getDisabledMinutes","selectedHour","getDisabledMinutesEnd","classes","color","paper","propTypes","object","isRequired","mapStateToProps","patients","currentUser","user","id"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Input from '@material-ui/core/Input';\nimport {apiCall} from '../../services/api'\n// import SearchDropdown from './SearchDropdown'\n\n\nimport moment from 'moment';\nimport 'moment/locale/es';\n\nimport \"antd/dist/antd.css\";\nimport { TimePicker } from \"antd\";\nimport { DatePicker } from \"antd\";\n\nconst styles = {\n    dialogPaper: {\n        minHeight: '45vh',\n        maxHeight: '45vh',\n    }\n};\n\n\nclass Popup extends Component {\n  state = {\n    open: false,\n    multiline:\"\",\n    scheduledTimeDuration: 45,\n    notes:\"\",\n    patient:\"\",\n    endTime: moment().add(15 - (moment().minute() % 15), \"minutes\").add(45, \"minutes\").set({second:0, millisecond:0}),\n    startTime: moment().add(15 - (moment().minute() % 15), \"minutes\").set({second:0, millisecond:0}),\n    date: moment().set({ hour: 0, minute: 0, second: 0, millisecond: 0 })\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { currentUserId } = this.props\n    // scheduledTimeStart,\n    const scheduledTimeStart=this.state.date.set({hour: this.state.startTime.hours(), minute: this.state.startTime.minutes()}).toDate()\n    // scheduledTimeEnd,\n    const scheduledTimeEnd=this.state.date.set({hour: this.state.endTime.hours(), minute: this.state.endTime.minutes()}).toDate()\n    // scheduledTimeDuration,\n    const duration=this.state.endTime.diff(this.state.startTime, \"minutes\")\n       \n    apiCall(\"post\", `/api/experts/${currentUserId}/scheduledappointments/`,{\n      scheduledTimeStart:scheduledTimeStart,\n      scheduledTimeEnd:scheduledTimeEnd,\n      scheduledTimeDuration:duration,\n      notes:this.state.notes,\n      patient_id:this.state.patient,\n    })\n    .then(res => {\n      console.log(res);\n      // ¿Cómo se redirigía con history?\n      window.location.href=\"/agenda\"\n    })\n    .catch(err => {\n      console.log(err)\n    });\n  }\n\n  onPatientSelected = (patientId) => {\n    this.setState({ patient: patientId.value });\n  };\n  \n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n  \n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  \n  handleTimeChange = name => time => {\n    this.setState({\n      [name]: time.set({second:0, millisecond:0})\n    });\n  };\n  \n  handleTimeChangeStart = time => {\n    this.setState({ startTime: time, endTime: time});\n  };\n\n  handleDateChange = date => {\n    this.setState({ date: date.set({ hour: 0, minute: 0, second: 0, millisecond: 0 }) });\n  };\n  disabledDate = current => {\n    return (\n      current &&\n      current <\n        moment()\n          .subtract(1, \"days\")\n          .endOf(\"day\")\n    );\n  };\n\n  getDisabledHours = () => {\n    var hours = [];\n    if(this.state.date.day()===moment().day()){\n      for (var i = 0; i < moment().hour(); i++) {\n        hours.push(i);\n      }\n    }\n    return hours;\n  };\n\n  getDisabledHoursEnd = () => {\n    var hours = [];\n    for (var i = 0; i < this.state.startTime.hour(); i++) {\n      hours.push(i);\n    }\n    return hours;\n  };\n\n  getDisabledMinutes = selectedHour => {\n    var minutes = [];\n    if (selectedHour === moment().hour() && this.state.date.day()===moment().day()) {\n      for (var i = 0; i < moment().minute(); i++) {\n        minutes.push(i);\n      }\n    }\n    return minutes;\n  };\n\n  getDisabledMinutesEnd = selectedHour => {\n    var minutes = [];\n    if (selectedHour === this.state.startTime.hour()) {\n      for (var i = 0; i < this.state.startTime.minute() + 1; i++) {\n        minutes.push(i);\n      }\n    }\n    return minutes;\n  };\n  \n  render() {\n    const {currentUserId, patient}=this.props\n    const { classes } = this.props;\n    \n    return (\n      <div>\n        <IconButton disableRipple>\n          <DeleteIcon style={{ color: \"red\" }} onClick={this.handleClickOpen}/>\n        </IconButton>\n        <Dialog\n          classes={{paper:classes.dialogPaper}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">¿Realmente quieres eliminar esta plantilla?</DialogTitle>\n          <DialogContent>\n            Esta acción no es reversible. Si haces click en eliminar, se borrará permanentemente esta plantilla. \n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"secondary\">\n              Cerrar\n            </Button>\n            <Button onClick={this.handleSubmit} variant=\"contained\" color=\"primary\">\n              Agendar cita\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nPopup.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nfunction mapStateToProps(state){\n  return{\n    patients: state.patients,\n    currentUserId: state.currentUser.user.id\n  };\n};\n  \nexport default connect(mapStateToProps, null)(withStyles(styles)(Popup));"]},"metadata":{},"sourceType":"module"}