{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/workspace/nutric-client/src/Main/components/MealPlans/MealPlanPDF.js\";\nimport React from 'react';\nimport { BlobProvider, Page, Text, View, Document } from '@react-pdf/renderer';\nvar MyDoc = React.createElement(Document, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(Page, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, React.createElement(View, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, \"Section #1\")), React.createElement(View, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, \"Section #2\"))));\n\nvar PDF = function PDF() {\n  return React.createElement(BlobProvider, {\n    document: MyDoc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, function (_ref) {\n    var blob = _ref.blob,\n        url = _ref.url;\n    return (// return something using blob or url\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, url, blob)\n    );\n  });\n};\n\nexport default PDF;","map":{"version":3,"sources":["/home/ubuntu/workspace/nutric-client/src/Main/components/MealPlans/MealPlanPDF.js"],"names":["React","BlobProvider","Page","Text","View","Document","MyDoc","PDF","blob","url"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,YADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,IAJF,EAKEC,QALF,QAMO,qBANP;AAQA,IAAMC,KAAK,GACT,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,EAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAJF,CADF,CADF;;AAaA,IAAMC,GAAG,GAAG,SAANA,GAAM;AAAA,SACV,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAED,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA,QAAGE,IAAH,QAAGA,IAAH;AAAA,QAASC,GAAT,QAASA,GAAT;AAAA,WACC;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMA,GAAN,EAAWD,IAAX;AAFD;AAAA,GADH,CADU;AAAA,CAAZ;;AAUA,eAAeD,GAAf","sourcesContent":["import React from 'react';\nimport {\n  BlobProvider,\n  Page,\n  Text,\n  View,\n  Document\n} from '@react-pdf/renderer';\n\nconst MyDoc = (\n  <Document>\n    <Page>\n      <View>\n        <Text>Section #1</Text>\n      </View>\n      <View>\n        <Text>Section #2</Text>\n      </View>\n    </Page>\n  </Document>\n);\n\nconst PDF = () => (\n  <BlobProvider document={MyDoc}>\n    {({ blob, url }) => (\n      // return something using blob or url\n      <div>{url}{blob}</div>\n    )}\n  </BlobProvider>\n);\n\n  \nexport default PDF;"]},"metadata":{},"sourceType":"module"}