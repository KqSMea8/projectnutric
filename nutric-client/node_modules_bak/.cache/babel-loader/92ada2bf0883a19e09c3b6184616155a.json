{"ast":null,"code":"import { apiCall } from '../services/api';\nimport { addError } from './errors';\nimport { LOAD_MEAL_PLAN_TEMPLATES } from '../actionTypes';\nexport var loadMealPlanTemplates = function loadMealPlanTemplates(mealPlanTemplates) {\n  return {\n    type: LOAD_MEAL_PLAN_TEMPLATES,\n    mealPlanTemplates: mealPlanTemplates\n  };\n};\nexport var fetchMealPlanTemplates = function fetchMealPlanTemplates(expert_id) {\n  return function (dispatch) {\n    return apiCall(\"get\", \"/api/experts/\".concat(expert_id, \"/mealPlanTemplate\")).then(function (res) {\n      dispatch(loadMealPlanTemplates(res));\n    }).catch(function (err) {\n      dispatch(addError(err.message));\n    });\n  };\n};","map":{"version":3,"sources":["/home/ubuntu/workspace/nutric-client/src/Main/store/actions/mealPlanTemplate.js"],"names":["apiCall","addError","LOAD_MEAL_PLAN_TEMPLATES","loadMealPlanTemplates","mealPlanTemplates","type","fetchMealPlanTemplates","expert_id","dispatch","then","res","catch","err","message"],"mappings":"AAAA,SAASA,OAAT,QAAwB,iBAAxB;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,SAASC,wBAAT,QAAyC,gBAAzC;AAEA,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,iBAAD;AAAA,SAAwB;AAC3DC,IAAAA,IAAI,EAAEH,wBADqD;AAE3DE,IAAAA,iBAAiB,EAAjBA;AAF2D,GAAxB;AAAA,CAA9B;AAKP,OAAO,IAAME,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,SAAD,EAAe;AACnD,SAAO,UAACC,QAAD,EAAc;AACnB,WAAOR,OAAO,CAAC,KAAD,yBAAwBO,SAAxB,uBAAP,CACJE,IADI,CACC,UAAAC,GAAG,EAAI;AACXF,MAAAA,QAAQ,CAACL,qBAAqB,CAACO,GAAD,CAAtB,CAAR;AACD,KAHI,EAIJC,KAJI,CAIE,UAAAC,GAAG,EAAI;AACZJ,MAAAA,QAAQ,CAACP,QAAQ,CAACW,GAAG,CAACC,OAAL,CAAT,CAAR;AACD,KANI,CAAP;AAQD,GATD;AAUD,CAXM","sourcesContent":["import { apiCall } from '../services/api';\nimport { addError } from './errors';\nimport { LOAD_MEAL_PLAN_TEMPLATES } from '../actionTypes';\n\nexport const loadMealPlanTemplates = (mealPlanTemplates) => ({\n  type: LOAD_MEAL_PLAN_TEMPLATES,\n  mealPlanTemplates\n});\n\nexport const fetchMealPlanTemplates = (expert_id) => {\n  return (dispatch) => {\n    return apiCall(\"get\", `/api/experts/${expert_id}/mealPlanTemplate`)\n      .then(res => {\n        dispatch(loadMealPlanTemplates(res));\n      })\n      .catch(err => {\n        dispatch(addError(err.message));\n      });\n    \n  };\n};"]},"metadata":{},"sourceType":"module"}