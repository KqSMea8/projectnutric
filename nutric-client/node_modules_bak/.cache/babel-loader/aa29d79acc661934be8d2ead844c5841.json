{"ast":null,"code":"import _defineProperty from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/ubuntu/workspace/nutric-client/src/Main/containers/Schedule/ScheduleMain.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPatients } from '../../store/actions/patients';\nimport { fetchAppointments } from '../../store/actions/appointments';\nimport BigCalendar from 'react-big-calendar';\nimport withDragAndDrop from 'react-big-calendar/lib/addons/dragAndDrop';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'react-big-calendar/lib/addons/dragAndDrop/styles.css';\nimport Grid from '@material-ui/core/Grid';\nimport Popup from '../../components/Schedule/Popup';\nvar DragAndDropCalendar = withDragAndDrop(BigCalendar);\n\nrequire('moment/locale/es.js');\n\nvar localizer = BigCalendar.momentLocalizer(moment);\nvar events = [{\n  id: 13,\n  title: 'Multi-day Event',\n  start: new Date(2018, 12, 20, 19, 30, 0),\n  end: new Date(2018, 12, 22, 2, 0, 0)\n}, {\n  id: 14,\n  title: 'Today',\n  start: new Date(new Date().setHours(new Date().getHours() - 3)),\n  end: new Date(new Date().setHours(new Date().getHours() + 3))\n}];\n\nvar ScheduleMain =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ScheduleMain, _Component);\n\n  function ScheduleMain(props) {\n    var _this;\n\n    _classCallCheck(this, ScheduleMain);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScheduleMain).call(this, props));\n\n    _this.resizeEvent = function (_ref) {\n      var event = _ref.event,\n          start = _ref.start,\n          end = _ref.end;\n      var events = _this.state.events;\n      var nextEvents = events.map(function (existingEvent) {\n        return existingEvent.id == event.id ? _objectSpread({}, existingEvent, {\n          start: start,\n          end: end\n        }) : existingEvent;\n      });\n\n      _this.setState({\n        events: nextEvents\n      }); // alert(`${event.title} was resized to ${start}-${end}`)\n\n    };\n\n    _this.state = {\n      events: events\n    };\n    _this.moveEvent = _this.moveEvent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.newEvent = _this.newEvent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ScheduleMain, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var currentUserId = this.props.currentUserId;\n      this.props.fetchAppointments(currentUserId, console.log('was fetched'));\n      this.props.fetchPatients(currentUserId, console.log('was fetched'));\n    }\n  }, {\n    key: \"moveEvent\",\n    value: function moveEvent(_ref2) {\n      var event = _ref2.event,\n          start = _ref2.start,\n          end = _ref2.end,\n          droppedOnAllDaySlot = _ref2.isAllDay;\n      var events = this.state.events;\n      var idx = events.indexOf(event);\n      var allDay = event.allDay;\n\n      if (!event.allDay && droppedOnAllDaySlot) {\n        allDay = true;\n      } else if (event.allDay && !droppedOnAllDaySlot) {\n        allDay = false;\n      }\n\n      var updatedEvent = _objectSpread({}, event, {\n        start: start,\n        end: end,\n        allDay: allDay\n      });\n\n      var nextEvents = _toConsumableArray(events);\n\n      nextEvents.splice(idx, 1, updatedEvent);\n      this.setState({\n        events: nextEvents\n      }); // alert(`${event.title} was dropped onto ${updatedEvent.start}`)\n    }\n  }, {\n    key: \"newEvent\",\n    value: function newEvent(event) {\n      var idList = this.state.events.map(function (a) {\n        return a.id;\n      });\n      var newId = Math.max.apply(Math, _toConsumableArray(idList)) + 1;\n      var hour = {\n        id: newId,\n        title: 'New Event',\n        allDay: event.slots.length == 1,\n        start: event.start,\n        end: event.end\n      };\n      this.setState({\n        events: this.state.events.concat([hour])\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _React$createElement;\n\n      var headerTitle = this.props.headerTitle;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, headerTitle), React.createElement(Grid, {\n        container: true,\n        justify: \"space-between\",\n        alignItems: \"baseline\",\n        spacing: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Ac\\xE1 va la tabla de schedule\")), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Popup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          height: \"700px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(DragAndDropCalendar, (_React$createElement = {\n        selectable: true,\n        defaultView: 'month' | 'week' | 'work_week' | 'day' | 'agenda',\n        localizer: localizer,\n        events: this.state.events,\n        onEventDrop: this.moveEvent,\n        resizable: true,\n        onEventResize: this.resizeEvent,\n        onSelectSlot: this.newEvent\n      }, _defineProperty(_React$createElement, \"defaultView\", BigCalendar.Views.WEEK), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement))))));\n    }\n  }]);\n\n  return ScheduleMain;\n}(Component);\n\n;\n\nfunction mapStateToProps(state) {\n  return {\n    appointments: state.appointments,\n    patients: state.patients,\n    currentUserId: state.currentUser.user.id\n  };\n}\n\n;\nexport default connect(mapStateToProps, {\n  fetchAppointments: fetchAppointments,\n  fetchPatients: fetchPatients\n})(ScheduleMain);","map":{"version":3,"sources":["/home/ubuntu/workspace/nutric-client/src/Main/containers/Schedule/ScheduleMain.js"],"names":["React","Component","connect","fetchPatients","fetchAppointments","BigCalendar","withDragAndDrop","moment","Grid","Popup","DragAndDropCalendar","require","localizer","momentLocalizer","events","id","title","start","Date","end","setHours","getHours","ScheduleMain","props","resizeEvent","event","state","nextEvents","map","existingEvent","setState","moveEvent","bind","newEvent","currentUserId","console","log","droppedOnAllDaySlot","isAllDay","idx","indexOf","allDay","updatedEvent","splice","idList","a","newId","Math","max","hour","slots","length","concat","headerTitle","height","Views","WEEK","mapStateToProps","appointments","patients","currentUser","user"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {fetchPatients} from '../../store/actions/patients';\nimport {fetchAppointments} from '../../store/actions/appointments';\nimport BigCalendar from 'react-big-calendar'\nimport withDragAndDrop from 'react-big-calendar/lib/addons/dragAndDrop'\nimport moment from 'moment'\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\nimport 'react-big-calendar/lib/addons/dragAndDrop/styles.css'\n\nimport Grid from '@material-ui/core/Grid';\nimport Popup from '../../components/Schedule/Popup'\n\nconst DragAndDropCalendar = withDragAndDrop(BigCalendar)\nrequire('moment/locale/es.js');\n\nconst localizer = BigCalendar.momentLocalizer(moment)\n\nconst events=[\n  {\n    id: 13,\n    title: 'Multi-day Event',\n    start: new Date(2018,12, 20, 19, 30, 0),\n    end: new Date(2018,12, 22, 2, 0, 0),\n  },\n  {\n    id: 14,\n    title: 'Today',\n    start: new Date(new Date().setHours(new Date().getHours() - 3)),\n    end: new Date(new Date().setHours(new Date().getHours() + 3)),\n  },\n]\n\nclass ScheduleMain extends Component{\n  constructor(props) {\n    super(props)\n    this.state = {\n      events: events\n    }\n    this.moveEvent = this.moveEvent.bind(this)\n    this.newEvent = this.newEvent.bind(this)\n  }\n  \n  componentDidMount(){\n    const { currentUserId } = this.props;\n    this.props.fetchAppointments(currentUserId, console.log('was fetched'));\n    this.props.fetchPatients(currentUserId, console.log('was fetched'));\n  }\n  \n  moveEvent({ event, start, end, isAllDay: droppedOnAllDaySlot }) {\n    const { events } = this.state\n\n    const idx = events.indexOf(event)\n    let allDay = event.allDay\n\n    if (!event.allDay && droppedOnAllDaySlot) {\n      allDay = true\n    } else if (event.allDay && !droppedOnAllDaySlot) {\n      allDay = false\n    }\n\n    const updatedEvent = { ...event, start, end, allDay }\n\n    const nextEvents = [...events]\n    nextEvents.splice(idx, 1, updatedEvent)\n\n    this.setState({\n      events: nextEvents,\n    })\n\n    // alert(`${event.title} was dropped onto ${updatedEvent.start}`)\n  }\n\n  resizeEvent = ({ event, start, end }) => {\n    const { events } = this.state\n\n    const nextEvents = events.map(existingEvent => {\n      return existingEvent.id == event.id\n        ? { ...existingEvent, start, end }\n        : existingEvent\n    })\n\n    this.setState({\n      events: nextEvents,\n    })\n\n    // alert(`${event.title} was resized to ${start}-${end}`)\n  }\n\n  newEvent(event) {\n    let idList = this.state.events.map(a => a.id)\n    let newId = Math.max(...idList) + 1\n    let hour = {\n      id: newId,\n      title: 'New Event',\n      allDay: event.slots.length == 1,\n      start: event.start,\n      end: event.end,\n    }\n    this.setState({\n      events: this.state.events.concat([hour]),\n    })\n  }\n  render(){\n    const {headerTitle}=this.props\n    return(\n      <div>\n        <div>{headerTitle}</div>\n        <Grid container justify=\"space-between\" alignItems=\"baseline\" spacing={16}>\n          <Grid item xs={6}>\n              <div>Acá va la tabla de schedule</div>\n          </Grid>\n          <Grid item xs={6} align=\"right\">\n              <Popup/>\n          </Grid>\n          <Grid item xs={12}>\n            <div style={{height: \"700px\"}}>\n                <DragAndDropCalendar\n                  selectable\n                  defaultView={('month'|'week'|'work_week'|'day'|'agenda')}\n                  localizer={localizer}\n                  events={this.state.events}\n                  onEventDrop={this.moveEvent}\n                  resizable\n                  onEventResize={this.resizeEvent}\n                  onSelectSlot={this.newEvent}\n                  defaultView={BigCalendar.Views.WEEK}\n                />\n            </div>\n          </Grid>\n        </Grid>\n      </div>\n    )\n  }\n};\n\nfunction mapStateToProps(state){\n  return{\n    appointments: state.appointments,\n    patients: state.patients,\n    currentUserId: state.currentUser.user.id\n  };\n};\n\nexport default connect(mapStateToProps, { fetchAppointments, fetchPatients})(ScheduleMain);\n"]},"metadata":{},"sourceType":"module"}