{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/workspace/nutric-client/src/Main/containers/App.js\";\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { configureStore } from '../store';\nimport Header from './Header';\nimport Sidebar from './Sidebar'; // hacer handler para routes no especificadas. ej /weigvuwgeuv que bote error \n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport '../../App.css';\nimport Dashboard from \"./Dashboard\";\nimport { setAuthorizationToken, setCurrentUser, authUser } from \"../store/actions/auth\";\nimport jwtDecode from \"jwt-decode\";\nvar store = configureStore();\n\nif (localStorage.jwtToken) {\n  setAuthorizationToken(localStorage.jwtToken); // prevent someone from manually tampering with the key of jwtToken in localStorage\n\n  try {\n    store.dispatch(setCurrentUser(jwtDecode(localStorage.jwtToken)));\n  } catch (e) {\n    store.dispatch(setCurrentUser({}));\n  }\n} // functional porque redux maneja el state\n\n\nvar App = function App() {\n  console.log(store.getState());\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(Sidebar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Dashboard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/ubuntu/workspace/nutric-client/src/Main/containers/App.js"],"names":["React","Provider","configureStore","Header","Sidebar","BrowserRouter","Router","Switch","Route","Dashboard","setAuthorizationToken","setCurrentUser","authUser","jwtDecode","store","localStorage","jwtToken","dispatch","e","App","console","log","getState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CAGA;;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAO,eAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,qBAAT,EAAgCC,cAAhC,EAAgDC,QAAhD,QAAgE,uBAAhE;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAGA,IAAMC,KAAK,GAAGZ,cAAc,EAA5B;;AAEA,IAAIa,YAAY,CAACC,QAAjB,EAA2B;AACzBN,EAAAA,qBAAqB,CAACK,YAAY,CAACC,QAAd,CAArB,CADyB,CAEzB;;AACA,MAAI;AACFF,IAAAA,KAAK,CAACG,QAAN,CAAeN,cAAc,CAACE,SAAS,CAACE,YAAY,CAACC,QAAd,CAAV,CAA7B;AACD,GAFD,CAEE,OAAOE,CAAP,EAAU;AACVJ,IAAAA,KAAK,CAACG,QAAN,CAAeN,cAAc,CAAC,EAAD,CAA7B;AACD;AACF,C,CAGD;;;AACA,IAAMQ,GAAG,GAAG,SAANA,GAAM,GAAM;AACjBC,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACQ,QAAN,EAAZ;AACA,SACC,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAER,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADF,CADD;AASA,CAXD;;AAaA,eAAeK,GAAf","sourcesContent":["import React from 'react';\nimport { Provider } from 'react-redux';\nimport { configureStore } from '../store';\nimport Header from './Header'\nimport Sidebar from './Sidebar'\n\n\n// hacer handler para routes no especificadas. ej /weigvuwgeuv que bote error \nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport '../../App.css';\nimport Dashboard from \"./Dashboard\";\nimport { setAuthorizationToken, setCurrentUser, authUser } from \"../store/actions/auth\";\nimport jwtDecode from \"jwt-decode\";\n\n\nconst store = configureStore(); \n\nif (localStorage.jwtToken) {\n  setAuthorizationToken(localStorage.jwtToken);\n  // prevent someone from manually tampering with the key of jwtToken in localStorage\n  try {\n    store.dispatch(setCurrentUser(jwtDecode(localStorage.jwtToken)));\n  } catch (e) {\n    store.dispatch(setCurrentUser({}));\n  }\n}\n\n\n// functional porque redux maneja el state\nconst App = () => {\n console.log(store.getState())\n return(\n  <Provider store={store}>\n    <Router>\n        <Header/>\n        <Sidebar/>\n        <Dashboard /> \n    </Router>\n  </Provider>\n  )\n}\n  \nexport default App;\n"]},"metadata":{},"sourceType":"module"}