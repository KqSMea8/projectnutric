{"ast":null,"code":"import _classCallCheck from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ubuntu/workspace/nutric-client/src/Main/containers/Recipes/RecipesMain.js\";\nimport React, { Component } from 'react';\nimport RecipeList from '../../components/Recipes/RecipeList';\nimport ButtonPopup from '../../components/Recipes/Button-Popup';\nimport { fetchRecipes } from '../../store/actions/recipes';\nimport { connect } from 'react-redux';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from \"@material-ui/core/Button\";\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Dropzone from 'react-dropzone';\n\nvar styles = function styles(theme) {\n  return {\n    margin: {\n      margin: theme.spacing.unit\n    }\n  };\n};\n\nvar RecipesMain =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RecipesMain, _Component);\n\n  function RecipesMain(props) {\n    var _this;\n\n    _classCallCheck(this, RecipesMain);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RecipesMain).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(RecipesMain, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var currentUserId = this.props.currentUserId;\n      this.props.fetchRecipes(currentUserId, console.log('recipes fetched'));\n    }\n  }, {\n    key: \"uploadFile\",\n    value: function uploadFile(files) {\n      var file = files[0];\n      console.log(file.name);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var numRows = 10;\n      var recipes = this.props.recipes;\n      var RecipesList = recipes.map(function (recipe) {\n        var recipeName = recipe.recipeName,\n            ingredients = recipe.ingredients,\n            category = recipe.category,\n            createdAt = recipe.createdAt;\n        var ingredientesLength = ingredients.length;\n        var DateOfCreation = createdAt.slice(0, 10);\n        return ['recipeName', 'category', 'DateOfCreation', 'ingredientesLength'];\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(ButtonPopup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        style: {\n          paddingRight: '30px',\n          flex: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(RecipeList, {\n        data: RecipesList,\n        numRows: numRows,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }))), React.createElement(Dropzone, {\n        onDrop: this.uploadFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Drop\"));\n    }\n  }]);\n\n  return RecipesMain;\n}(Component);\n\n;\n\nfunction mapStateToProps(state) {\n  return {\n    recipes: state.recipes,\n    currentUserId: state.currentUser.user.id\n  };\n}\n\n;\nexport default connect(mapStateToProps, {\n  fetchRecipes: fetchRecipes\n})(withStyles(styles)(RecipesMain));","map":{"version":3,"sources":["/home/ubuntu/workspace/nutric-client/src/Main/containers/Recipes/RecipesMain.js"],"names":["React","Component","RecipeList","ButtonPopup","fetchRecipes","connect","Paper","Grid","Button","TextField","withStyles","Dropzone","styles","theme","margin","spacing","unit","RecipesMain","props","state","currentUserId","console","log","files","file","name","classes","numRows","recipes","RecipesList","map","recipe","recipeName","ingredients","category","createdAt","ingredientesLength","length","DateOfCreation","slice","paddingRight","flex","uploadFile","mapStateToProps","currentUser","user","id"],"mappings":"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","sourcesContent":["import React, { Component }  from 'react';\nimport RecipeList from '../../components/Recipes/RecipeList'\nimport ButtonPopup from '../../components/Recipes/Button-Popup'\nimport {fetchRecipes} from '../../store/actions/recipes';\nimport {connect} from 'react-redux';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from \"@material-ui/core/Button\";\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Dropzone from 'react-dropzone'\n\nconst styles = theme => ({\n  margin: {\n    margin: theme.spacing.unit\n  }\n});\n\n\n\nclass RecipesMain extends Component {\n  constructor(props){\n    super(props);\n    this.state = {};\n  }\n    componentWillMount(){\n    const { currentUserId } = this.props;\n    this.props.fetchRecipes(currentUserId, console.log('recipes fetched'));}\n    \n  uploadFile(files){\n    const file = files[0]\n    console.log(file.name)\n  }\n  render(){\n    const { classes } = this.props;\n    const numRows = 10;\n    const { recipes } = this.props;\n    let RecipesList = recipes.map(recipe => {\n      let { recipeName, ingredients, category, createdAt } = recipe;\n      let ingredientesLength = ingredients.length;\n      let DateOfCreation = createdAt.slice(0,10)\n      return (\n        ['recipeName', 'category', 'DateOfCreation', 'ingredientesLength'] \n      )\n    });\n    \n  \n    return (\n      <div>\n        <ButtonPopup/>\n      <Grid container>\n        <Grid item style={{paddingRight: '30px', flex: 2}}>\n          <RecipeList data={RecipesList} numRows={numRows} />\n        </Grid>\n      </Grid>\n      \n      <Dropzone onDrop={this.uploadFile}>Drop</Dropzone>\n      </div>\n      \n    )\n\n  }\n  \n};\n\nfunction mapStateToProps(state){\n  return{\n    recipes: state.recipes,\n    currentUserId: state.currentUser.user.id\n  };\n};\n  \nexport default connect(mapStateToProps, {fetchRecipes}) (withStyles(styles)(RecipesMain))\n  \n  "]},"metadata":{},"sourceType":"module"}