{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/workspace/nutric-client/src/Main/components/Schedule/SearchDropdown.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport keycode from 'keycode';\nimport Downshift from 'downshift';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Popper from '@material-ui/core/Popper';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Chip from '@material-ui/core/Chip';\nimport { connect } from 'react-redux';\nimport { render } from 'react-dom';\nvar items = [{\n  value: 'apple'\n}, {\n  value: 'pear'\n}, {\n  value: 'orange'\n}, {\n  value: 'grape'\n}, {\n  value: 'banana'\n}];\nrender(React.createElement(Downshift, {\n  onChange: function onChange(selection) {\n    return alert(\"You selected \".concat(selection.value));\n  },\n  itemToString: function itemToString(item) {\n    return item ? item.value : '';\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, function (_ref) {\n  var getInputProps = _ref.getInputProps,\n      getItemProps = _ref.getItemProps,\n      getLabelProps = _ref.getLabelProps,\n      getMenuProps = _ref.getMenuProps,\n      isOpen = _ref.isOpen,\n      inputValue = _ref.inputValue,\n      highlightedIndex = _ref.highlightedIndex,\n      selectedItem = _ref.selectedItem;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"label\", Object.assign({}, getLabelProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), \"Enter a fruit\"), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(\"ul\", Object.assign({}, getMenuProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), isOpen ? items.filter(function (item) {\n    return !inputValue || item.value.includes(inputValue);\n  }).map(function (item, index) {\n    return React.createElement(\"li\", Object.assign({}, getItemProps({\n      key: item.value,\n      index: index,\n      item: item,\n      style: {\n        backgroundColor: highlightedIndex === index ? 'lightgray' : 'white',\n        fontWeight: selectedItem === item ? 'bold' : 'normal'\n      }\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), item.value);\n  }) : null));\n}));\n\nfunction mapStateToProps(state) {\n  return {\n    patients: state.patients,\n    currentUserId: state.currentUser.user.id\n  };\n}\n\n;\nexport default connect(mapStateToProps, null)(Downshift);","map":{"version":3,"sources":["/home/ubuntu/workspace/nutric-client/src/Main/components/Schedule/SearchDropdown.js"],"names":["React","PropTypes","deburr","keycode","Downshift","withStyles","TextField","Popper","Paper","MenuItem","Chip","connect","render","items","value","selection","alert","item","getInputProps","getItemProps","getLabelProps","getMenuProps","isOpen","inputValue","highlightedIndex","selectedItem","filter","includes","map","index","key","style","backgroundColor","fontWeight","mapStateToProps","state","patients","currentUserId","currentUser","user","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport keycode from 'keycode';\nimport Downshift from 'downshift';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Popper from '@material-ui/core/Popper';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Chip from '@material-ui/core/Chip';\n\nimport {connect} from 'react-redux';\nimport {render} from 'react-dom'\n\nconst items = [\n  {value: 'apple'},\n  {value: 'pear'},\n  {value: 'orange'},\n  {value: 'grape'},\n  {value: 'banana'},\n]\n\nrender(\n  <Downshift\n    onChange={selection => alert(`You selected ${selection.value}`)}\n    itemToString={item => (item ? item.value : '')}\n  >\n    {({\n      getInputProps,\n      getItemProps,\n      getLabelProps,\n      getMenuProps,\n      isOpen,\n      inputValue,\n      highlightedIndex,\n      selectedItem,\n    }) => (\n      <div>\n        <label {...getLabelProps()}>Enter a fruit</label>\n        <input {...getInputProps()} />\n        <ul {...getMenuProps()}>\n          {isOpen\n            ? items\n                .filter(item => !inputValue || item.value.includes(inputValue))\n                .map((item, index) => (\n                  <li\n                    {...getItemProps({\n                      key: item.value,\n                      index,\n                      item,\n                      style: {\n                        backgroundColor:\n                          highlightedIndex === index ? 'lightgray' : 'white',\n                        fontWeight: selectedItem === item ? 'bold' : 'normal',\n                      },\n                    })}\n                  >\n                    {item.value}\n                  </li>\n                ))\n            : null}\n        </ul>\n      </div>\n    )}\n  </Downshift>,\n)\nfunction mapStateToProps(state){\n  return{\n    patients: state.patients,\n    currentUserId: state.currentUser.user.id\n  };\n};\n  \nexport default connect(mapStateToProps, null)(Downshift);"]},"metadata":{},"sourceType":"module"}