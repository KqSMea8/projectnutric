{"ast":null,"code":"import _classCallCheck from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ubuntu/workspace/nutric-client/src/Main/containers/TimeDisplay.js\";\nimport React, { Component } from \"react\";\n\nvar TimeDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TimeDisplay, _Component);\n\n  function TimeDisplay() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TimeDisplay);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TimeDisplay)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentTime: new Date()\n    };\n    return _this;\n  }\n\n  _createClass(TimeDisplay, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.timerID = setInterval(function () {\n        return _this2.tick();\n      }, 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.timerID);\n    }\n  }, {\n    key: \"tick\",\n    value: function tick() {\n      this.setState({\n        currentTime: new Date()\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(\"hola tiempo\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, this.state.currentTime.toLocaleDateString(\"es-ES\", {\n        weekday: \"long\",\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\",\n        second: \"numeric\",\n        hour12: true\n      }));\n    }\n  }]);\n\n  return TimeDisplay;\n}(Component);\n\nexport default TimeDisplay;","map":{"version":3,"sources":["/home/ubuntu/workspace/nutric-client/src/Main/containers/TimeDisplay.js"],"names":["React","Component","TimeDisplay","state","currentTime","Date","timerID","setInterval","tick","clearInterval","setState","console","log","toLocaleDateString","weekday","year","month","day","hour","minute","second","hour12"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,W;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,WAAW,EAAE,IAAIC,IAAJ;AADP,K;;;;;;wCAIY;AAAA;;AAClB,WAAKC,OAAL,GAAeC,WAAW,CAAC;AAAA,eAAM,MAAI,CAACC,IAAL,EAAN;AAAA,OAAD,EAAoB,IAApB,CAA1B;AACD;;;2CAEsB;AACrBC,MAAAA,aAAa,CAAC,KAAKH,OAAN,CAAb;AACD;;;2BAEM;AACL,WAAKI,QAAL,CAAc;AACZN,QAAAA,WAAW,EAAE,IAAIC,IAAJ;AADD,OAAd;AAGD;;;6BAGQ;AACPM,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAEA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKT,KAAL,CAAWC,WAAX,CAAuBS,kBAAvB,CAA0C,OAA1C,EAAmD;AAClDC,QAAAA,OAAO,EAAE,MADyC;AAElDC,QAAAA,IAAI,EAAE,SAF4C;AAGlDC,QAAAA,KAAK,EAAE,MAH2C;AAIlDC,QAAAA,GAAG,EAAE,SAJ6C;AAKlDC,QAAAA,IAAI,EAAE,SAL4C;AAMlDC,QAAAA,MAAM,EAAE,SAN0C;AAOlDC,QAAAA,MAAM,EAAE,SAP0C;AAQlDC,QAAAA,MAAM,EAAE;AAR0C,OAAnD,CADH,CADF;AAcD;;;;EArCuBpB,S;;AAyC1B,eAAeC,WAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass TimeDisplay extends Component {\n  state = {\n    currentTime: new Date()\n  };\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      currentTime: new Date()\n    });\n  }\n\n\n  render() {\n    console.log(\"hola tiempo\")\n    \n    return (\n      <div>\n        {this.state.currentTime.toLocaleDateString(\"es-ES\", {\n          weekday: \"long\",\n          year: \"numeric\",\n          month: \"long\",\n          day: \"numeric\",\n          hour: \"numeric\",\n          minute: \"numeric\",\n          second: \"numeric\",\n          hour12: true\n        })}\n      </div>\n    );\n  }\n}\n\n\nexport default TimeDisplay;\n"]},"metadata":{},"sourceType":"module"}