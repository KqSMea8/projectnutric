{"ast":null,"code":"import _defineProperty from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ubuntu/workspace/nutric-client/src/Main/components/Patients/PopupAddPatient.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Add from '@material-ui/icons/Add';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Input from '@material-ui/core/Input';\nimport { apiCall } from '../../services/api';\nimport IconButton from '@material-ui/core/IconButton';\nimport PersonAdd from '@material-ui/icons/PersonAdd';\nimport CloseIcon from '@material-ui/icons/Close';\nvar styles = {\n  dialogPaper: {\n    minHeight: '85vh',\n    maxHeight: '85vh'\n  }\n};\n\nvar Popup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Popup, _Component);\n\n  function Popup() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Popup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Popup)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false,\n      multiline: \"\",\n      firstName: \"\"\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var currentUserId = _this.props.currentUserId; // apiCall(\"post\", `/api/experts/${currentUserId}/scheduledappointments/`,{\n      //   scheduledTimeStart:scheduledTimeStart,\n      //   scheduledTimeEnd:scheduledTimeEnd,\n      //   scheduledTimeDuration:duration,\n      //   notes:this.state.notes,\n      //   patient_id:this.state.patient,\n      // })\n      // .then(res => {\n      //   console.log(res);\n      //   // ¿Cómo se redirigía con history?\n      //   window.location.href=\"/agenda\"\n      // })\n      // .catch(err => {\n      //   console.log(err)\n      // });\n    };\n\n    _this.handleClickOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleChange = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.value));\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(Popup, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          currentUserId = _this$props.currentUserId,\n          patient = _this$props.patient;\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        onClick: this.handleClickOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(PersonAdd, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), React.createElement(Dialog, {\n        classes: {\n          paper: classes.dialogPaper\n        },\n        open: this.state.open,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Agregar paciente\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Completa el formulario con los datos del nuevo paciente.\"), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Nombre\"), React.createElement(Grid, {\n        item: true,\n        xs: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"standard-name\",\n        label: \"ej: Mar\\xEDa\",\n        className: classes.textField,\n        value: this.state.name,\n        onChange: this.handleChange('name'),\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }))))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Cerrar\"), React.createElement(Button, {\n        onClick: this.handleSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Agendar cita\"))));\n    }\n  }]);\n\n  return Popup;\n}(Component);\n\nPopup.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    patients: state.patients,\n    currentUserId: state.currentUser.user.id\n  };\n}\n\n;\nexport default connect(mapStateToProps, null)(withStyles(styles)(Popup));","map":{"version":3,"sources":["/home/ubuntu/workspace/nutric-client/src/Main/components/Patients/PopupAddPatient.js"],"names":["React","Component","connect","Redirect","NavLink","PropTypes","withStyles","Button","Add","Grid","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Input","apiCall","IconButton","PersonAdd","CloseIcon","styles","dialogPaper","minHeight","maxHeight","Popup","state","open","multiline","firstName","handleSubmit","e","preventDefault","currentUserId","props","handleClickOpen","setState","handleClose","handleChange","name","event","target","value","patient","classes","paper","textField","propTypes","object","isRequired","mapStateToProps","patients","currentUser","user","id"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Add from '@material-ui/icons/Add'\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Input from '@material-ui/core/Input';\nimport {apiCall} from '../../services/api'\nimport IconButton from '@material-ui/core/IconButton';\nimport PersonAdd from '@material-ui/icons/PersonAdd'\nimport CloseIcon from '@material-ui/icons/Close';\n\n\n\nconst styles = {\n    dialogPaper: {\n        minHeight: '85vh',\n        maxHeight: '85vh',\n    }\n};\n\n\nclass Popup extends Component {\n  state = {\n    open: false,\n    multiline:\"\",\n    firstName:\"\",\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { currentUserId } = this.props\n       \n    // apiCall(\"post\", `/api/experts/${currentUserId}/scheduledappointments/`,{\n    //   scheduledTimeStart:scheduledTimeStart,\n    //   scheduledTimeEnd:scheduledTimeEnd,\n    //   scheduledTimeDuration:duration,\n    //   notes:this.state.notes,\n    //   patient_id:this.state.patient,\n    // })\n    // .then(res => {\n    //   console.log(res);\n    //   // ¿Cómo se redirigía con history?\n    //   window.location.href=\"/agenda\"\n    // })\n    // .catch(err => {\n    //   console.log(err)\n    // });\n  }\n\n\n  \n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n  \n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n  \n  render() {\n    const {currentUserId, patient}=this.props\n    const { classes } = this.props;\n    \n    return (\n      <div>\n        <IconButton onClick={this.handleClickOpen}>\n          <PersonAdd />\n        </IconButton>\n        <Dialog\n          classes={{paper:classes.dialogPaper}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">\n            Agregar paciente\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Completa el formulario con los datos del nuevo paciente.\n            </DialogContentText>\n            <form onSubmit={this.handleSubmit}>\n              <Grid container>\n                <Grid item xs={3}>Nombre</Grid>\n\n                <Grid item xs={9}>\n                  <TextField\n                    id=\"standard-name\"\n                    label=\"ej: María\"\n                    className={classes.textField}\n                    value={this.state.name}\n                    onChange={this.handleChange('name')}\n                    margin=\"normal\"\n                  />\n                </Grid>\n\n              </Grid>\n            </form>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"secondary\">\n              Cerrar\n            </Button>\n            <Button onClick={this.handleSubmit} variant=\"contained\" color=\"primary\">\n              Agendar cita\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nPopup.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nfunction mapStateToProps(state){\n  return{\n    patients: state.patients,\n    currentUserId: state.currentUser.user.id\n  };\n};\n  \nexport default connect(mapStateToProps, null)(withStyles(styles)(Popup));"]},"metadata":{},"sourceType":"module"}