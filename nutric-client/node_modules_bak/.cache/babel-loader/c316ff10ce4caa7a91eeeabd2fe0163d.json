{"ast":null,"code":"import axios from 'axios';\nexport function setTokenHeader(token) {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = \"Bearer \".concat(token);\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n}\nexport function apiCall(method, path, data) {\n  return new Promise(function (resolve, reject) {\n    return axios[method](path, data).then(function (res) {\n      return resolve(res.data);\n    }).catch(function (err) {\n      return reject(err.response.data.error); //error es el error handler del back\n    });\n  });\n}","map":{"version":3,"sources":["/home/ubuntu/workspace/nutric-client/src/services/api.js"],"names":["axios","setTokenHeader","token","defaults","headers","common","apiCall","method","path","data","Promise","resolve","reject","then","res","catch","err","response","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AACpC,MAAIA,KAAJ,EAAW;AACTF,IAAAA,KAAK,CAACG,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,qBAA2DH,KAA3D;AACD,GAFD,MAEO;AACL,WAAOF,KAAK,CAACG,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,CAAP;AACD;AACF;AAED,OAAO,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAoC;AACzC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAmB;AACpC,WAAOZ,KAAK,CAACO,MAAD,CAAL,CAAcC,IAAd,EAAmBC,IAAnB,EACNI,IADM,CACD,UAAAC,GAAG,EAAI;AACX,aAAOH,OAAO,CAACG,GAAG,CAACL,IAAL,CAAd;AACD,KAHM,EAINM,KAJM,CAIA,UAAAC,GAAG,EAAI;AACZ,aAAOJ,MAAM,CAACI,GAAG,CAACC,QAAJ,CAAaR,IAAb,CAAkBS,KAAnB,CAAb,CADY,CAC2B;AACxC,KANM,CAAP;AAOD,GARM,CAAP;AASD","sourcesContent":["import axios from 'axios';\n\nexport function setTokenHeader(token) {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n}\n\nexport function apiCall(method, path, data){\n  return new Promise((resolve, reject)=>{\n    return axios[method](path,data)\n    .then(res => {\n      return resolve(res.data);\n    })\n    .catch(err => {\n      return reject(err.response.data.error) //error es el error handler del back\n    })\n  })\n}"]},"metadata":{},"sourceType":"module"}