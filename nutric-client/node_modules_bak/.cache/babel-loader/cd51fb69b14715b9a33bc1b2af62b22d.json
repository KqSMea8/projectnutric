{"ast":null,"code":"import _classCallCheck from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ubuntu/workspace/nutric-client/src/Main/containers/Patients/PatientsMain.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport '../../../App.css';\nimport PatientsList from '../../components/Patients/PatientsList.js';\nimport PatientsSlideShow from '../../components/Patients/PatientsSlideShow.js'; // import Patients2SliderShow from '../../components/Patients/Patients2SliderShow.js';\n\nimport { fetchPatients } from '../../store/actions/patients';\n\nvar PatientsMain =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PatientsMain, _Component);\n\n  function PatientsMain(props) {\n    var _this;\n\n    _classCallCheck(this, PatientsMain);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PatientsMain).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(PatientsMain, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var currentUserId = this.props.currentUserId;\n      this.props.fetchPatients(currentUserId, console.log('was fetched'));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var numRows = 7; //num de filas q sera el default en la tabla\n\n      var patients = this.props.patients;\n      console.log(patients);\n      var patientsList = patients.map(function (patient) {\n        // ahorita solo tenemos el birthDate del paciente, age se calcularia aqui, o tb podria venir desde el back\n        // falta hacer que cuando tenga menos de 7 pacientes, aparezcan las 7 - n filas en blanco\n        // esto pq 7 va a ser el numero de pacientes q se vean pq calza con el height de screen - AppBar\n        var firstName = patient.firstName,\n            lastName = patient.lastName,\n            mail = patient.mail,\n            age = patient.age;\n        return [\"\".concat(firstName, \" \").concat(lastName), mail, '3era col', '4ta col'];\n      }); // if(patientsList.length < 7){\n      //   let fillArray = [];\n      //   for(let i = numRows; i > patientsList.length; i--){\n      //     fillArray.push(new Array(4).fill(''));\n      //     console.log(fillArray);\n      //   }  \n      // }\n      // es activo si tiene mealPlan. Sortear endDate de mealPlans pacientes activos y poner top 3\n\n      var activePatients = patients.filter(function (patient) {\n        return patient.mealPlans.length > 0;\n      });\n      console.log(activePatients);\n      console.log(activePatients[0]);\n      console.log(activePatients[0].allergies); // var x =(Object.keys(activePatients[0]));\n      // console.log(x.allergies)\n      // no se pq no puedo acceder a activePatients[0].mealPlans\n      // ahi se hace el sort a traves de endDate y ya\n\n      return React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        style: {\n          paddingRight: '30px',\n          flex: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(PatientsList, {\n        data: patientsList,\n        numRows: numRows,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        container: true,\n        direction: 'column',\n        justify: 'space-between',\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        style: {\n          height: '45%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        direction: 'column',\n        justify: 'center',\n        style: {\n          height: '80%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"hola\"), React.createElement(Grid, {\n        item: true,\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"chau\"), React.createElement(Grid, {\n        item: true,\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"tres\")))), React.createElement(Paper, {\n        style: {\n          height: '45%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(SnackbarContent, {\n        message: 'Ãšltimos pacientes',\n        style: {\n          width: '80%',\n          margin: '-15px auto 0',\n          alignSelf: 'center',\n          backgroundColor: '#3f51b5'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        container: true,\n        style: {\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"1\"), React.createElement(Grid, {\n        item: true,\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"2\"), React.createElement(Grid, {\n        item: true,\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"3\")))));\n    }\n  }]);\n\n  return PatientsMain;\n}(Component);\n\n;\n\nfunction mapStateToProps(state) {\n  return {\n    patients: state.patients,\n    currentUserId: state.currentUser.user.id\n  };\n}\n\n;\nexport default connect(mapStateToProps, {\n  fetchPatients: fetchPatients\n})(PatientsMain);","map":{"version":3,"sources":["/home/ubuntu/workspace/nutric-client/src/Main/containers/Patients/PatientsMain.js"],"names":["React","Component","connect","Paper","Grid","SnackbarContent","PatientsList","PatientsSlideShow","fetchPatients","PatientsMain","props","state","currentUserId","console","log","numRows","patients","patientsList","map","patient","firstName","lastName","mail","age","activePatients","filter","mealPlans","length","allergies","paddingRight","flex","height","width","margin","alignSelf","backgroundColor","mapStateToProps","currentUser","user","id"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nimport '../../../App.css'\nimport PatientsList from '../../components/Patients/PatientsList.js';\nimport PatientsSlideShow from '../../components/Patients/PatientsSlideShow.js';\n// import Patients2SliderShow from '../../components/Patients/Patients2SliderShow.js';\nimport {fetchPatients} from '../../store/actions/patients';\n\n\nclass PatientsMain extends Component {\n  constructor(props){\n    super(props);\n    this.state = {};\n  }\n  \n  componentDidMount(){\n    const { currentUserId } = this.props;\n    this.props.fetchPatients(currentUserId, console.log('was fetched'));\n  }\n  \n\n  render(){\n    const numRows = 7 //num de filas q sera el default en la tabla\n    const { patients } = this.props;\n    console.log(patients);\n    let patientsList = patients.map(patient => {\n      // ahorita solo tenemos el birthDate del paciente, age se calcularia aqui, o tb podria venir desde el back\n      // falta hacer que cuando tenga menos de 7 pacientes, aparezcan las 7 - n filas en blanco\n      // esto pq 7 va a ser el numero de pacientes q se vean pq calza con el height de screen - AppBar\n      const { firstName, lastName, mail, age } = patient;\n      return (\n        [`${firstName} ${lastName}`, mail, '3era col', '4ta col']\n      )\n    });\n    \n    // if(patientsList.length < 7){\n    //   let fillArray = [];\n    //   for(let i = numRows; i > patientsList.length; i--){\n    //     fillArray.push(new Array(4).fill(''));\n    //     console.log(fillArray);\n    //   }  \n    // }\n    \n    // es activo si tiene mealPlan. Sortear endDate de mealPlans pacientes activos y poner top 3\n    \n    let activePatients = patients.filter(patient => patient.mealPlans.length > 0);\n    console.log(activePatients);\n    console.log(activePatients[0]);\n    console.log(activePatients[0].allergies);\n    \n    \n\n   \n    // var x =(Object.keys(activePatients[0]));\n    // console.log(x.allergies)\n    // no se pq no puedo acceder a activePatients[0].mealPlans\n    // ahi se hace el sort a traves de endDate y ya\n    \n    \n    return (\n      <Grid container>\n        \n        <Grid item style={{paddingRight: '30px', flex: 2}}>\n          <PatientsList data={patientsList} numRows={numRows} />\n        </Grid>\n\n        <Grid container direction={'column'} justify={'space-between'} style={{flex: 1}}>\n        \n          <Paper style={{height: '45%'}}>\n            {/*<SnackbarContent message={'Pacientes por vencer'} style={{width: '80%', margin: '-15px auto 0', alignSelf: 'center', backgroundColor: '#3f51b5'}} />*/}\n            <Grid container direction={'column'} justify={'center'} style={{height: '80%'}}>\n              <Grid item>\n                  <Grid item style={{flex: 1}}>hola</Grid>\n                  <Grid item style={{flex: 1}}>chau</Grid>\n                  <Grid item style={{flex: 1}}>tres</Grid>\n              </Grid>\n            </Grid>\n            \n          </Paper>  \n          \n          <Paper style={{height: '45%'}}>\n            <SnackbarContent message={'Ãšltimos pacientes'} style={{width: '80%', margin: '-15px auto 0', alignSelf: 'center', backgroundColor: '#3f51b5'}} />\n            <Grid container style={{height: '100%'}}>\n              <Grid item style={{flex: 1}}>1</Grid>\n              <Grid item style={{flex: 1}}>2</Grid>\n              <Grid item style={{flex: 1}}>3</Grid>\n            </Grid>  \n          </Paper>  \n        </Grid>\n      </Grid>\n    )\n\n  }\n  \n};\n\nfunction mapStateToProps(state){\n  return{\n    patients: state.patients,\n    currentUserId: state.currentUser.user.id\n  };\n};\n  \nexport default connect(mapStateToProps, {fetchPatients})(PatientsMain);"]},"metadata":{},"sourceType":"module"}