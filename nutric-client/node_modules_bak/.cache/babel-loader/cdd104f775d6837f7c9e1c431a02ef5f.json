{"ast":null,"code":"import _classCallCheck from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ubuntu/workspace/nutric-client/src/Main/containers/Patients/PatientsMain.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport '../../../App.css';\nimport PatientsList from '../../components/Patients/PatientsList.js';\nimport PatientsSlideShow from '../../components/Patients/PatientsSlideShow.js'; // import Patients2SliderShow from '../../components/Patients/Patients2SliderShow.js';\n\nimport { fetchPatients } from '../../store/actions/patients';\n\nvar PatientsMain =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PatientsMain, _Component);\n\n  function PatientsMain(props) {\n    var _this;\n\n    _classCallCheck(this, PatientsMain);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PatientsMain).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(PatientsMain, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var currentUserId = this.props.currentUserId;\n      this.props.fetchPatients(currentUserId, console.log('was fetched'));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var patients = this.props.patients;\n      var patientList = patients.map(function (patient) {\n        // ahorita solo tenemos el birthDate del paciente, age se calcularia aqui, o tb podria venir desde el back\n        var firstName = patient.firstName,\n            lastName = patient.lastName,\n            mail = patient.mail,\n            age = patient.age;\n        return 'hola' // [`${firstName} ${lastName}`, mail, '3era col', '4ta col']\n        ;\n      });\n      return React.createElement(\"div\", {\n        className: \"mainContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"patientsListContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(PatientsList, {\n        data: patientList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"patientsSlideShowContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PatientsMain;\n}(Component);\n\n;\n\nfunction mapStateToProps(state) {\n  return {\n    patients: state.patients,\n    currentUserId: state.currentUser.user.id\n  };\n}\n\n;\nexport default connect(mapStateToProps, {\n  fetchPatients: fetchPatients\n})(PatientsMain);","map":{"version":3,"sources":["/home/ubuntu/workspace/nutric-client/src/Main/containers/Patients/PatientsMain.js"],"names":["React","Component","connect","Paper","Grid","PatientsList","PatientsSlideShow","fetchPatients","PatientsMain","props","state","currentUserId","console","log","patients","patientList","map","patient","firstName","lastName","mail","age","mapStateToProps","currentUser","user","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAO,kBAAP;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,iBAAP,MAA8B,gDAA9B,C,CACA;;AACA,SAAQC,aAAR,QAA4B,8BAA5B;;IAGMC,Y;;;;;AACJ,wBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,sFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,EAAb;AAFgB;AAGjB;;;;wCAEkB;AAAA,UACTC,aADS,GACS,KAAKF,KADd,CACTE,aADS;AAEjB,WAAKF,KAAL,CAAWF,aAAX,CAAyBI,aAAzB,EAAwCC,OAAO,CAACC,GAAR,CAAY,aAAZ,CAAxC;AACD;;;6BAEO;AAAA,UACCC,QADD,GACa,KAAKL,KADlB,CACCK,QADD;AAEN,UAAIC,WAAW,GAAGD,QAAQ,CAACE,GAAT,CAAa,UAAAC,OAAO,EAAI;AACxC;AADwC,YAEhCC,SAFgC,GAEGD,OAFH,CAEhCC,SAFgC;AAAA,YAErBC,QAFqB,GAEGF,OAFH,CAErBE,QAFqB;AAAA,YAEXC,IAFW,GAEGH,OAFH,CAEXG,IAFW;AAAA,YAELC,GAFK,GAEGJ,OAFH,CAELI,GAFK;AAGxC,eACI,MADJ,CAEE;AAFF;AAID,OAPiB,CAAlB;AASA,aACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AACE,QAAA,IAAI,EAAEN,WADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,EASE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CADF;AAqBD;;;;EA3CwBd,S;;AA6C1B;;AAED,SAASqB,eAAT,CAAyBZ,KAAzB,EAA+B;AAC7B,SAAM;AACJI,IAAAA,QAAQ,EAAEJ,KAAK,CAACI,QADZ;AAEJH,IAAAA,aAAa,EAAED,KAAK,CAACa,WAAN,CAAkBC,IAAlB,CAAuBC;AAFlC,GAAN;AAID;;AAAA;AAED,eAAevB,OAAO,CAACoB,eAAD,EAAkB;AAACf,EAAAA,aAAa,EAAbA;AAAD,CAAlB,CAAP,CAA0CC,YAA1C,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport '../../../App.css'\nimport PatientsList from '../../components/Patients/PatientsList.js';\nimport PatientsSlideShow from '../../components/Patients/PatientsSlideShow.js';\n// import Patients2SliderShow from '../../components/Patients/Patients2SliderShow.js';\nimport {fetchPatients} from '../../store/actions/patients';\n\n\nclass PatientsMain extends Component {\n  constructor(props){\n    super(props);\n    this.state = {};\n  }\n  \n  componentDidMount(){\n    const { currentUserId } = this.props;\n    this.props.fetchPatients(currentUserId, console.log('was fetched'));\n  }\n  \n  render(){\n    const {patients} = this.props;\n    let patientList = patients.map(patient => {\n      // ahorita solo tenemos el birthDate del paciente, age se calcularia aqui, o tb podria venir desde el back\n      const { firstName, lastName, mail, age } = patient;\n      return (\n          'hola'\n        // [`${firstName} ${lastName}`, mail, '3era col', '4ta col']\n      )\n    });\n  \n    return(\n      <div className='mainContainer'>\n        <div className='patientsListContainer'>\n          <Paper>  \n            <PatientsList\n              data={patientList}\n            />\n          </Paper>\n        </div>\n    \n        <div className='patientsSlideShowContainer'>\n          {/*\n          <Paper>\n            <PatientsSlideShow\n              data={patientList}\n            />\n          </Paper>\n          */}\n        </div>\n      </div>\n    )  \n  }\n  \n};\n\nfunction mapStateToProps(state){\n  return{\n    patients: state.patients,\n    currentUserId: state.currentUser.user.id\n  };\n};\n  \nexport default connect(mapStateToProps, {fetchPatients})(PatientsMain);"]},"metadata":{},"sourceType":"module"}