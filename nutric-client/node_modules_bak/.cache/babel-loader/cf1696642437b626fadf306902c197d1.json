{"ast":null,"code":"import _objectWithoutProperties from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { apiCall } from '../../services/api';\nimport { SET_CURRENT_USER } from '../actionTypes';\nimport { addError, removeError } from './errors';\nexport function setCurrentUser(user) {\n  return {\n    type: SET_CURRENT_USER,\n    user: user\n  };\n} //debería ser authExpert\n\nexport function authUser(type, userData) {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      return apiCall(\"post\", \"/api/experts/\".concat(type), userData) //ESTO CAMBIA CUANDO ES PATIENT\n      .then(function (_ref) {\n        var token = _ref.token,\n            user = _objectWithoutProperties(_ref, [\"token\"]);\n\n        localStorage.setItem(\"jwtToken\", token);\n        dispatch(setCurrentUser(user));\n        dispatch(removeError);\n        resolve();\n      }).catch(function (err) {\n        dispatch(addError(err.message));\n        reject();\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/home/ubuntu/workspace/nutric-client/src/store/actions/auth.js"],"names":["apiCall","SET_CURRENT_USER","addError","removeError","setCurrentUser","user","type","authUser","userData","dispatch","Promise","resolve","reject","then","token","localStorage","setItem","catch","err","message"],"mappings":";AAAA,SAAQA,OAAR,QAAsB,oBAAtB;AACA,SAAQC,gBAAR,QAA+B,gBAA/B;AACA,SAAQC,QAAR,EAAkBC,WAAlB,QAAoC,UAApC;AAEA,OAAO,SAASC,cAAT,CAAwBC,IAAxB,EAA6B;AAClC,SAAO;AACLC,IAAAA,IAAI,EAAEL,gBADD;AAELI,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,C,CAED;;AACA,OAAO,SAASE,QAAT,CAAkBD,IAAlB,EAAwBE,QAAxB,EAAiC;AACtC,SAAO,UAAAC,QAAQ,EAAI;AACjB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAoB;AACrC,aAAOZ,OAAO,CAAC,MAAD,yBAAwBM,IAAxB,GAA+BE,QAA/B,CAAP,CAAgD;AAAhD,OACJK,IADI,CACC,gBAAoB;AAAA,YAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,YAART,IAAQ;;AACxBU,QAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAgCF,KAAhC;AACAL,QAAAA,QAAQ,CAACL,cAAc,CAACC,IAAD,CAAf,CAAR;AACAI,QAAAA,QAAQ,CAACN,WAAD,CAAR;AACAQ,QAAAA,OAAO;AACR,OANI,EAOJM,KAPI,CAOE,UAAAC,GAAG,EAAE;AACVT,QAAAA,QAAQ,CAACP,QAAQ,CAACgB,GAAG,CAACC,OAAL,CAAT,CAAR;AACAP,QAAAA,MAAM;AACP,OAVI,CAAP;AAWD,KAZM,CAAP;AAaD,GAdD;AAeD","sourcesContent":["import {apiCall} from '../../services/api';\nimport {SET_CURRENT_USER} from '../actionTypes';\nimport {addError, removeError} from './errors';\n\nexport function setCurrentUser(user){\n  return {\n    type: SET_CURRENT_USER,\n    user\n  };\n}\n\n//debería ser authExpert\nexport function authUser(type, userData){\n  return dispatch => {\n    return new Promise((resolve,reject) => {\n      return apiCall(\"post\",`/api/experts/${type}`,userData) //ESTO CAMBIA CUANDO ES PATIENT\n        .then(({token, ...user})=>{\n          localStorage.setItem(\"jwtToken\",token);\n          dispatch(setCurrentUser(user));\n          dispatch(removeError)\n          resolve();\n        })\n        .catch(err=>{\n          dispatch(addError(err.message));\n          reject();\n        })\n    })\n  }\n}"]},"metadata":{},"sourceType":"module"}