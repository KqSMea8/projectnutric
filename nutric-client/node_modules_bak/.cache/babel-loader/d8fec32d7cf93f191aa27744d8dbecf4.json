{"ast":null,"code":"import _regeneratorRuntime from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ubuntu/workspace/nutric-client/src/Main/components/PlanAlimenticio/SearchBar.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { fetchFoods } from '../../store/actions/foods';\nimport { connect } from 'react-redux';\n\nvar styles = function styles(theme) {\n  return {\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n      width: 200\n    },\n    dense: {\n      marginTop: 19\n    },\n    menu: {\n      width: 200\n    }\n  };\n};\n\nvar SearchBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SearchBar, _React$Component);\n\n  function SearchBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      searchedFood: \"\"\n    };\n\n    _this.onChange = function (e) {\n      _this.setState({\n        searchedFood: e.target.value\n      },\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(req, res, next) {\n          var _this$props, currentUserId, foods;\n\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (e.target.value.length >= 3) {\n                    _this$props = this.props, currentUserId = _this$props.currentUserId, foods = _this$props.foods;\n                    this.props.fetchFoods(currentUserId, this.state.searchedFood);\n                  }\n\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        return function (_x, _x2, _x3) {\n          return _ref.apply(this, arguments);\n        };\n      }()); //Borrar state si el length del input es menor a 3\n      // if(e.target.value.length<=2){\n      //   this.setState({\n      //     searchedFood: \"\"\n      //   });\n      // }\n      //A partir de la 3era letra\n      // if(e.target.value.length >=3){\n      //   console.log(\"fetchea\");\n      //     //const por las huevas que este dentro de la funcion\n      //   const { currentUserId, foods } = this.props;\n      //   this.props.fetchFoods(currentUserId,this.state.searchedFood);\n\n    };\n\n    _this.onFormSubmit = function (event) {\n      event.preventDefault();\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchBar, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.searchedFood);\n      var classes = this.props.classes;\n      return React.createElement(\"form\", {\n        className: classes.container,\n        noValidate: true,\n        autoComplete: \"off\",\n        onSubmit: this.onFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"standard-name\",\n        label: \" + Alimento\",\n        placeholder: \"Agrega un alimento\",\n        className: classes.textField,\n        value: this.state.value,\n        onChange: this.onChange,\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SearchBar;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  console.log(state.foods);\n  return {\n    foods: state.foods,\n    currentUserId: state.currentUser.user.id\n  };\n}\n\n;\nexport default connect(mapStateToProps, {\n  fetchFoods: fetchFoods\n})(withStyles(styles)(SearchBar));","map":{"version":3,"sources":["/home/ubuntu/workspace/nutric-client/src/Main/components/PlanAlimenticio/SearchBar.js"],"names":["React","PropTypes","classNames","withStyles","TextField","fetchFoods","connect","styles","theme","container","display","flexWrap","textField","marginLeft","spacing","unit","marginRight","width","dense","marginTop","menu","SearchBar","state","searchedFood","onChange","e","setState","target","value","req","res","next","length","props","currentUserId","foods","onFormSubmit","event","preventDefault","console","log","classes","Component","mapStateToProps","currentUser","user","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport {fetchFoods} from '../../store/actions/foods';\nimport {connect} from 'react-redux';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  },\n  dense: {\n    marginTop: 19,\n  },\n  menu: {\n    width: 200,\n  },\n});\n\nclass SearchBar extends React.Component {\n  state = {\n    searchedFood: \"\",\n  };\n\n  onChange = e => {\n    this.setState({\n        searchedFood: e.target.value\n    }, async function(req,res,next){\n      if(e.target.value.length>=3){\n        const { currentUserId, foods } = this.props;\n        this.props.fetchFoods(currentUserId,this.state.searchedFood);\n      }\n    })\n    \n    //Borrar state si el length del input es menor a 3\n    // if(e.target.value.length<=2){\n    //   this.setState({\n    //     searchedFood: \"\"\n    //   });\n    // }\n    //A partir de la 3era letra\n    // if(e.target.value.length >=3){\n      \n    //   console.log(\"fetchea\");\n    //     //const por las huevas que este dentro de la funcion\n    //   const { currentUserId, foods } = this.props;\n    //   this.props.fetchFoods(currentUserId,this.state.searchedFood);\n    }\n  \n  \n  onFormSubmit = event => {\n    event.preventDefault();\n  };\n\n  render() {\n    console.log(this.state.searchedFood);\n    const { classes } = this.props;\n\n    return (\n      <form className={classes.container} noValidate autoComplete=\"off\" onSubmit={this.onFormSubmit}>\n        <TextField\n          id=\"standard-name\"\n          label=\" + Alimento\"\n          placeholder=\"Agrega un alimento\"\n          className={classes.textField}\n          value={this.state.value}\n          onChange={this.onChange}\n          margin=\"normal\"\n        />\n      </form>\n    );\n  }\n}\n\n\n\n\n\nfunction mapStateToProps(state){\n  console.log(state.foods)\n  return{\n    foods: state.foods,\n    currentUserId: state.currentUser.user.id\n  };\n};\n  \nexport default connect(mapStateToProps, {fetchFoods})(withStyles(styles)(SearchBar))\n"]},"metadata":{},"sourceType":"module"}