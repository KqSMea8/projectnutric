{"ast":null,"code":"import _classCallCheck from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/ubuntu/workspace/nutric-client/src/Main/components/Schedule/SearchDropdown.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport keycode from 'keycode';\nimport Downshift from 'downshift';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Popper from '@material-ui/core/Popper';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Chip from '@material-ui/core/Chip';\nimport { connect } from 'react-redux';\n\nvar DownshiftTwo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DownshiftTwo, _React$Component);\n\n  function DownshiftTwo(props) {\n    var _this;\n\n    _classCallCheck(this, DownshiftTwo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DownshiftTwo).call(this, props));\n    _this.state = {\n      movies: []\n    };\n    _this.fetchMovies = _this.fetchMovies.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.inputOnChange = _this.inputOnChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // onChange method for the input field\n\n\n  _createClass(DownshiftTwo, [{\n    key: \"inputOnChange\",\n    value: function inputOnChange(event) {\n      if (!event.target.value) {\n        return;\n      }\n\n      this.fetchMovies(event.target.value);\n    } // input field for the <Downshift /> component\n\n  }, {\n    key: \"downshiftOnChange\",\n    value: function downshiftOnChange(selectedMovie) {\n      alert(\"your favourite movie is \".concat(selectedMovie.title));\n    } // method to fetch the movies from the movies API\n\n  }, {\n    key: \"fetchMovies\",\n    value: function fetchMovies(movie) {\n      var _this2 = this;\n\n      var moviesURL = \"https://api.themoviedb.org/3/search/movie?api_key=1b5adf76a72a13bad99b8fc0c68cb085&query=\".concat(movie);\n      axios.get(moviesURL).then(function (response) {\n        _this2.setState({\n          movies: response.data.results\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(Downshift, {\n        onChange: this.downshiftOnChange,\n        itemToString: function itemToString(item) {\n          return item ? item.title : '';\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"// pass the downshift props into a callback\", function (_ref) {\n        var selectedItem = _ref.selectedItem,\n            getInputProps = _ref.getInputProps,\n            getItemProps = _ref.getItemProps,\n            highlightedIndex = _ref.highlightedIndex,\n            isOpen = _ref.isOpen,\n            inputValue = _ref.inputValue,\n            getLabelProps = _ref.getLabelProps;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, \"// add a label tag and pass our label text to the getLabelProps function\", React.createElement(\"label\", Object.assign({\n          style: {\n            marginTop: '1rem',\n            display: 'block'\n          }\n        }, getLabelProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }), \"Choose your favourite movie\"), \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }), \"// add a input tag and pass our placeholder text to the getInputProps function. We also have an onChange eventlistener on the input field\", React.createElement(\"input\", Object.assign({}, getInputProps({\n          placeholder: \"Search movies\",\n          onChange: _this3.inputOnChange\n        }), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        })), \"// if the input element is open, render the div else render nothing\", isOpen ? React.createElement(\"div\", {\n          className: \"downshift-dropdown\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, // filter the movies in the state\n        _this3.state.movies.filter(function (item) {\n          return !inputValue || item.title.toLowerCase().includes(inputValue.toLowerCase());\n        }).slice(0, 10) // return just the first ten. Helps improve performance\n        // map the filtered movies and display their title\n        .map(function (item, index) {\n          return React.createElement(\"div\", Object.assign({\n            className: \"dropdown-item\"\n          }, getItemProps({\n            key: index,\n            index: index,\n            item: item\n          }), {\n            style: {\n              backgroundColor: highlightedIndex === index ? 'lightgray' : 'white',\n              fontWeight: selectedItem === item ? 'bold' : 'normal'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }), item.title);\n        })) : null);\n      });\n    }\n  }]);\n\n  return DownshiftTwo;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    patients: state.patients,\n    currentUserId: state.currentUser.user.id\n  };\n}\n\n;\nexport default connect(mapStateToProps, null)(DownshiftTwo);","map":{"version":3,"sources":["/home/ubuntu/workspace/nutric-client/src/Main/components/Schedule/SearchDropdown.js"],"names":["React","PropTypes","deburr","keycode","Downshift","withStyles","TextField","Popper","Paper","MenuItem","Chip","connect","DownshiftTwo","props","state","movies","fetchMovies","bind","inputOnChange","event","target","value","selectedMovie","alert","title","movie","moviesURL","axios","get","then","response","setState","data","results","downshiftOnChange","item","selectedItem","getInputProps","getItemProps","highlightedIndex","isOpen","inputValue","getLabelProps","marginTop","display","placeholder","onChange","filter","toLowerCase","includes","slice","map","index","key","backgroundColor","fontWeight","Component","mapStateToProps","patients","currentUserId","currentUser","user","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport keycode from 'keycode';\nimport Downshift from 'downshift';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Popper from '@material-ui/core/Popper';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Chip from '@material-ui/core/Chip';\n\nimport {connect} from 'react-redux';\n\nclass DownshiftTwo extends React.Component {\n      constructor(props) {\n        super(props)\n        this.state = {\n          movies: []\n        }\n        this.fetchMovies = this.fetchMovies.bind(this)\n        this.inputOnChange = this.inputOnChange.bind(this)\n      }\n      // onChange method for the input field\n      inputOnChange(event) {\n        if (!event.target.value) {\n          return\n        }\n        this.fetchMovies(event.target.value)\n      }\n      // input field for the <Downshift /> component\n      downshiftOnChange(selectedMovie) {\n        alert(`your favourite movie is ${selectedMovie.title}`)\n      }\n      // method to fetch the movies from the movies API\n      fetchMovies(movie) {\n        const moviesURL = `https://api.themoviedb.org/3/search/movie?api_key=1b5adf76a72a13bad99b8fc0c68cb085&query=${movie}`;\n        axios.get(moviesURL).then(response => {\n          this.setState({ movies: response.data.results })\n        })\n      }\n      render() {\n        return (\n          <Downshift onChange={this.downshiftOnChange} itemToString={item => (item ? item.title : '')}>\n          // pass the downshift props into a callback\n            {({ selectedItem, getInputProps, getItemProps, highlightedIndex, isOpen, inputValue, getLabelProps }) => (\n              <div>\n                // add a label tag and pass our label text to the getLabelProps function\n                <label style={{ marginTop: '1rem', display: 'block' }} {...getLabelProps()}>Choose your favourite movie</label> <br />\n                // add a input tag and pass our placeholder text to the getInputProps function. We also have an onChange eventlistener on the input field\n                <input {...getInputProps({\n                  placeholder: \"Search movies\",\n                  onChange: this.inputOnChange\n                })} />\n                // if the input element is open, render the div else render nothing\n                {isOpen ? (\n                  <div className=\"downshift-dropdown\">\n                    {\n                      // filter the movies in the state\n                      this.state.movies\n                        .filter(item => !inputValue || item.title.toLowerCase().includes(inputValue.toLowerCase()))\n                        .slice(0, 10) // return just the first ten. Helps improve performance\n                        // map the filtered movies and display their title\n                        .map((item, index) => (\n                          <div\n                            className=\"dropdown-item\"\n                            {...getItemProps({ key: index, index, item })}\n                            style={{\n                              backgroundColor: highlightedIndex === index ? 'lightgray' : 'white',\n                              fontWeight: selectedItem === item ? 'bold' : 'normal',\n                            }}>\n                            {item.title}\n                          </div>\n                        ))\n                    }\n                  </div>\n                ) : null}\n              </div>\n            )}\n          </Downshift>\n           )\n      }\n    }\n    \nfunction mapStateToProps(state){\n  return{\n    patients: state.patients,\n    currentUserId: state.currentUser.user.id\n  };\n};\n  \nexport default connect(mapStateToProps, null)(DownshiftTwo);"]},"metadata":{},"sourceType":"module"}