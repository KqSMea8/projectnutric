{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/workspace/nutric-client/src/Main/components/MealPlans/MealPlanPDF.js\";\nimport React from 'react';\nimport { Page, Text, View, Document, StyleSheet, BlobProvider } from '@react-pdf/renderer'; // Create styles\n\nvar newstyles = StyleSheet.create({\n  page: {\n    flexDirection: 'row',\n    backgroundColor: '#bff044'\n  },\n  section: {\n    margin: 10,\n    padding: 10,\n    flexGrow: 1\n  }\n}); // Create Document Component\n\nvar MyDocument = React.createElement(Document, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, React.createElement(Page, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, React.createElement(View, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, React.createElement(Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, \"Este es un texto cualquiera\"))));\nvar MyDoc = React.createElement(Document, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, React.createElement(Page, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, \"Si\"));\n\nvar PDF = function PDF() {\n  return React.createElement(BlobProvider, {\n    document: MyDocument,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, function (_ref) {\n    var blob = _ref.blob,\n        url = _ref.url;\n    return React.createElement(\"a\", {\n      href: url,\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Previsualizar\");\n  });\n};\n\nvar PDFto = function PDFto() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(BlobProvider, {\n    document: MyDoc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, function (_ref2) {\n    var blob = _ref2.blob,\n        url = _ref2.url,\n        loading = _ref2.loading,\n        error = _ref2.error;\n    return (// Do whatever you need with blob here\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"There's something going on on the fly\")\n    );\n  }));\n};\n\nexport default PDF;","map":{"version":3,"sources":["/home/ubuntu/workspace/nutric-client/src/Main/components/MealPlans/MealPlanPDF.js"],"names":["React","Page","Text","View","Document","StyleSheet","BlobProvider","newstyles","create","page","flexDirection","backgroundColor","section","margin","padding","flexGrow","MyDocument","MyDoc","PDF","blob","url","PDFto","loading","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,IAArB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,YAAjD,QAAqE,qBAArE,C,CAEA;;AACA,IAAMC,SAAS,GAAGF,UAAU,CAACG,MAAX,CAAkB;AAClCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,aAAa,EAAE,KADX;AAEJC,IAAAA,eAAe,EAAE;AAFb,GAD4B;AAKlCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE,EADD;AAEPC,IAAAA,OAAO,EAAE,EAFF;AAGPC,IAAAA,QAAQ,EAAE;AAHH;AALyB,CAAlB,CAAlB,C,CAYA;;AACA,IAAMC,UAAU,GACd,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,CADF,CADF,CADF;AASA,IAAMC,KAAK,GACT,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;;AAQA,IAAMC,GAAG,GAAG,SAANA,GAAM;AAAA,SACV,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAEF,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA,QAAGG,IAAH,QAAGA,IAAH;AAAA,QAASC,GAAT,QAASA,GAAT;AAAA,WACC;AAAG,MAAA,IAAI,EAAEA,GAAT;AAAc,MAAA,MAAM,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADD;AAAA,GADH,CADU;AAAA,CAAZ;;AAQA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,SACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAEJ,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA,QAAGE,IAAH,SAAGA,IAAH;AAAA,QAASC,GAAT,SAASA,GAAT;AAAA,QAAcE,OAAd,SAAcA,OAAd;AAAA,QAAuBC,KAAvB,SAAuBA,KAAvB;AAAA,WACC;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFD;AAAA,GADH,CADF,CADY;AAAA,CAAd;;AAWA,eAAeL,GAAf","sourcesContent":["import React from 'react';\nimport { Page, Text, View, Document, StyleSheet, BlobProvider } from '@react-pdf/renderer';\n\n// Create styles\nconst newstyles = StyleSheet.create({\n  page: {\n    flexDirection: 'row',\n    backgroundColor: '#bff044'\n  },\n  section: {\n    margin: 10,\n    padding: 10,\n    flexGrow: 1\n  }\n});\n\n// Create Document Component\nconst MyDocument =(\n  <Document>\n    <Page >\n      <View>\n        <Text>Este es un texto cualquiera</Text>\n      </View>\n    </Page>\n  </Document>)\n\nconst MyDoc = (\n  <Document>\n    <Page>\n      Si\n    </Page>\n  </Document>\n);\n\nconst PDF = () => (\n  <BlobProvider document={MyDocument}>\n    {({ blob, url }) => (\n      <a href={url} target=\"_blank\">Previsualizar</a>\n    )}\n  </BlobProvider>\n);\n\nconst PDFto = () => (\n  <div>\n    <BlobProvider document={MyDoc}>\n      {({ blob, url, loading, error }) => (\n        // Do whatever you need with blob here\n        <div>There's something going on on the fly</div>\n      )}\n    </BlobProvider>\n  </div>\n);\n  \nexport default PDF;"]},"metadata":{},"sourceType":"module"}