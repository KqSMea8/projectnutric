{"ast":null,"code":"import { apiCall } from '../../services/api';\nimport { addError } from './errors';\nimport { LOAD_PATIENTS } from '../actionTypes';\nexport var loadPatients = function loadPatients(patients) {\n  return {\n    type: LOAD_PATIENTS,\n    patients: patients\n  };\n};\nexport var fetchPatients = function fetchPatients(expert_id) {\n  return function (dispatch) {\n    return apiCall(\"get\", \"/api/experts/\".concat(expert_id, \"/patients\")).then(function (res) {\n      dispatch(loadPatients(res));\n    }).catch(function (err) {\n      dispatch(addError(err.message));\n    });\n  };\n};\nexport var addPatient = function addPatient(expert_id, firstName, lastName, address, mail, gender) {\n  return function (dispatch, getState) {\n    return apiCall(\"post\", \"/api/expert/\".concat(expert_id, \"/patients\"), {\n      firstName: firstName,\n      lastName: lastName,\n      mail: mail,\n      gender: gender\n    }).then(function (res) {}).catch(function (err) {\n      return addError(err.message);\n    });\n  };\n};","map":{"version":3,"sources":["/home/ubuntu/workspace/nutric-client/src/Main/store/actions/patients.js"],"names":["apiCall","addError","LOAD_PATIENTS","loadPatients","patients","type","fetchPatients","expert_id","dispatch","then","res","catch","err","message","addPatient","firstName","lastName","address","mail","gender","getState"],"mappings":"AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,QAAD;AAAA,SAAe;AACzCC,IAAAA,IAAI,EAAEH,aADmC;AAEzCE,IAAAA,QAAQ,EAAEA;AAF+B,GAAf;AAAA,CAArB;AAOP,OAAO,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAACC,SAAD,EAAe;AAC1C,SAAO,UAACC,QAAD,EAAc;AACnB,WAAOR,OAAO,CAAC,KAAD,yBAAwBO,SAAxB,eAAP,CACJE,IADI,CACC,UAAAC,GAAG,EAAI;AACXF,MAAAA,QAAQ,CAACL,YAAY,CAACO,GAAD,CAAb,CAAR;AACD,KAHI,EAIJC,KAJI,CAIE,UAAAC,GAAG,EAAI;AACZJ,MAAAA,QAAQ,CAACP,QAAQ,CAACW,GAAG,CAACC,OAAL,CAAT,CAAR;AACD,KANI,CAAP;AAQD,GATD;AAUD,CAXM;AAaP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACP,SAAD,EAAYQ,SAAZ,EAAuBC,QAAvB,EAAiCC,OAAjC,EAA0CC,IAA1C,EAAgDC,MAAhD;AAAA,SAA2D,UAACX,QAAD,EAAWY,QAAX,EAAwB;AAC3G,WAAOpB,OAAO,CAAC,MAAD,wBAAwBO,SAAxB,gBAA8C;AAAEQ,MAAAA,SAAS,EAATA,SAAF;AAAaC,MAAAA,QAAQ,EAARA,QAAb;AAAuBE,MAAAA,IAAI,EAAJA,IAAvB;AAA6BC,MAAAA,MAAM,EAANA;AAA7B,KAA9C,CAAP,CACJV,IADI,CACC,UAAAC,GAAG,EAAI,CAAE,CADV,EAEJC,KAFI,CAEE,UAAAC,GAAG;AAAA,aAAIX,QAAQ,CAACW,GAAG,CAACC,OAAL,CAAZ;AAAA,KAFL,CAAP;AAGD,GAJyB;AAAA,CAAnB","sourcesContent":["import { apiCall } from '../../services/api';\nimport { addError } from './errors';\nimport { LOAD_PATIENTS } from '../actionTypes';\n\nexport const loadPatients = (patients) => ({\n  type: LOAD_PATIENTS,\n  patients: patients\n});\n\n\n\nexport const fetchPatients = (expert_id) => {\n  return (dispatch) => {\n    return apiCall(\"get\", `/api/experts/${expert_id}/patients`)\n      .then(res => {\n        dispatch(loadPatients(res));\n      })\n      .catch(err => {\n        dispatch(addError(err.message));\n      });\n    \n  };\n};\n\nexport const addPatient = (expert_id, firstName, lastName, address, mail, gender) => (dispatch, getState) => {\n  return apiCall(\"post\", `/api/expert/${expert_id}/patients`, { firstName, lastName, mail, gender })\n    .then(res => {})\n    .catch(err => addError(err.message));\n};\n"]},"metadata":{},"sourceType":"module"}