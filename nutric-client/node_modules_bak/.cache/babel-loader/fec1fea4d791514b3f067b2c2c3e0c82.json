{"ast":null,"code":"import _defineProperty from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/workspace/nutric-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ubuntu/workspace/nutric-client/src/Main/components/MealPlans/TableResult.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { lighten } from \"@material-ui/core/styles/colorManipulator\";\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nvar counter = 0;\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  var stabilizedThis = array.map(function (el, index) {\n    return [el, index];\n  });\n  stabilizedThis.sort(function (a, b) {\n    var order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(function (el) {\n    return el[0];\n  });\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\" ? function (a, b) {\n    return desc(a, b, orderBy);\n  } : function (a, b) {\n    return -desc(a, b, orderBy);\n  };\n}\n\nvar rows = [{\n  id: \"foodName\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Alimento (100g)\"\n}, {\n  id: \"calories_kcal\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Calorías\"\n}, {\n  id: \"fat_g\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Grasa (g)\"\n}, {\n  id: \"carbs_g\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Carbohidratos (g)\"\n}, {\n  id: \"protein_g\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Proteína (g)\"\n}, {\n  id: \"select\",\n  numeric: false,\n  disablePadding: true,\n  label: \"\"\n}];\n\nvar EnhancedTableHead =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EnhancedTableHead, _React$Component);\n\n  function EnhancedTableHead() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EnhancedTableHead);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EnhancedTableHead)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.createSortHandler = function (property) {\n      return function (event) {\n        _this.props.onRequestSort(event, property);\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(EnhancedTableHead, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          order = _this$props.order,\n          orderBy = _this$props.orderBy;\n      return React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        padding: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), rows.map(function (row) {\n        return React.createElement(TableCell, {\n          key: row.id,\n          numeric: row.numeric,\n          padding: row.disablePadding ? \"none\" : \"default\",\n          sortDirection: orderBy === row.id ? order : false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(Tooltip, {\n          title: \"Ordenar\",\n          placement: row.numeric ? \"bottom-end\" : \"bottom-start\",\n          enterDelay: 300,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(TableSortLabel, {\n          active: orderBy === row.id,\n          direction: order,\n          onClick: _this2.createSortHandler(row.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, row.label)));\n      }, this)));\n    }\n  }]);\n\n  return EnhancedTableHead;\n}(React.Component);\n\nEnhancedTableHead.propTypes = {\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired\n};\n\nvar toolbarStyles = function toolbarStyles(theme) {\n  return {\n    root: {\n      paddingRight: \"0\",\n      textAlign: \"center\"\n    },\n    highlight: theme.palette.type === \"light\" ? {\n      color: theme.palette.secondary.main,\n      backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n    } : {\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.secondary.dark\n    },\n    spacer: {\n      flex: \"1 1 100%\"\n    },\n    actions: {\n      color: theme.palette.text.secondary\n    },\n    title: {\n      flex: \"0 0 auto\"\n    }\n  };\n};\n\nvar EnhancedTableToolbar = function EnhancedTableToolbar(props) {\n  var numSelected = props.numSelected,\n      classes = props.classes;\n  return React.createElement(Toolbar, {\n    className: classNames(classes.root, _defineProperty({}, classes.highlight, numSelected > 0)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  });\n};\n\nEnhancedTableToolbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired\n};\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: \"100%\",\n      marginTop: theme.spacing.unit * 3,\n      marginBottom: theme.spacing.unit * 3,\n      textAlign: \"center\"\n    },\n    tableWrapper: {\n      overflowX: \"auto\"\n    },\n    tableRow: {\n      \"&hover\": {\n        fontSize: \"0.5rem\"\n      }\n    }\n  };\n};\n\nvar EnhancedTable =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(EnhancedTable, _React$Component2);\n\n  function EnhancedTable() {\n    var _getPrototypeOf3;\n\n    var _this3;\n\n    _classCallCheck(this, EnhancedTable);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this3 = _possibleConstructorReturn(this, (_getPrototypeOf3 = _getPrototypeOf(EnhancedTable)).call.apply(_getPrototypeOf3, [this].concat(args)));\n    _this3.state = {\n      order: \"asc\",\n      orderBy: \"calories\",\n      selected: [],\n      page: 0,\n      rowsPerPage: 5\n    };\n\n    _this3.handleRequestSort = function (event, property) {\n      var orderBy = property;\n      var order = \"desc\";\n\n      if (_this3.state.orderBy === property && _this3.state.order === \"desc\") {\n        order = \"asc\";\n      }\n\n      _this3.setState({\n        order: order,\n        orderBy: orderBy\n      });\n    };\n\n    _this3.handleChangePage = function (event, page) {\n      _this3.setState({\n        page: page\n      });\n    };\n\n    _this3.handleChangeRowsPerPage = function (event) {\n      _this3.setState({\n        rowsPerPage: event.target.value\n      });\n    };\n\n    _this3.isSelected = function (id) {\n      return _this3.state.selected.indexOf(id) !== -1;\n    };\n\n    return _this3;\n  }\n\n  _createClass(EnhancedTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props2 = this.props,\n          classes = _this$props2.classes,\n          tableId = _this$props2.tableId,\n          selectedFood = _this$props2.selectedFood;\n      var _this$state = this.state,\n          order = _this$state.order,\n          orderBy = _this$state.orderBy,\n          selected = _this$state.selected,\n          rowsPerPage = _this$state.rowsPerPage,\n          page = _this$state.page;\n      var foodDatabase = this.props.foods.map(function (food) {\n        return {\n          id: food._id,\n          foodName: food.foodName,\n          calories_kcal: food.calories_kcal,\n          fat_g: food.fat_g,\n          carbs_g: food.carbs_g,\n          protein_g: food.protein_g\n        };\n      });\n      var emptyRows = rowsPerPage - Math.min(rowsPerPage, foodDatabase.length - page * rowsPerPage);\n      return React.createElement(Paper, {\n        id: tableId,\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.tableWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: classes.table,\n        \"aria-labelledby\": \"tableTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(EnhancedTableHead, {\n        numSelected: selected.length,\n        order: order,\n        orderBy: orderBy,\n        onRequestSort: this.handleRequestSort,\n        rowCount: foodDatabase.length,\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, stableSort(foodDatabase, getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (n) {\n        var isSelected = _this4.isSelected(n.id);\n\n        return React.createElement(TableRow, {\n          hover: true,\n          role: \"checkbox\",\n          \"aria-checked\": isSelected,\n          tabIndex: -1,\n          key: n.id,\n          selected: isSelected,\n          className: classes.tableRow,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          padding: \"checkbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271\n          },\n          __self: this\n        }), React.createElement(TableCell, {\n          component: \"th\",\n          scope: \"row\",\n          padding: \"none\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272\n          },\n          __self: this\n        }, n.foodName), React.createElement(TableCell, {\n          style: {\n            textAlign: \"center\"\n          },\n          numeric: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        }, Math.round(n.calories_kcal * 100) / 100), React.createElement(TableCell, {\n          style: {\n            textAlign: \"center\"\n          },\n          numeric: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        }, Math.round(n.fat_g * 100) / 100), React.createElement(TableCell, {\n          style: {\n            textAlign: \"center\"\n          },\n          numeric: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        }, Math.round(n.carbs_g * 100) / 100), React.createElement(TableCell, {\n          style: {\n            textAlign: \"center\"\n          },\n          numeric: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278\n          },\n          __self: this\n        }, Math.round(n.protein_g * 100) / 100), React.createElement(TableCell, {\n          style: {\n            textAlign: \"center\"\n          },\n          numeric: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279\n          },\n          __self: this\n        }, React.createElement(Fab, {\n          size: \"small\",\n          color: \"secondary\",\n          \"aria-label\": \"Add\",\n          onClick: function onClick(e) {\n            _this4.props.addNewRecipeButton(n, _this4.props.selectedInputIdentifier);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280\n          },\n          __self: this\n        }, React.createElement(AddIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          },\n          __self: this\n        }))));\n      }), emptyRows > 0 && React.createElement(TableRow, {\n        style: {\n          height: 55 * emptyRows\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        colSpan: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }))))), React.createElement(TablePagination, {\n        rowsPerPageOptions: [5],\n        component: \"div\",\n        count: foodDatabase.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        labelRowsPerPage: 'Alimentos por página:',\n        labelDisplayedRows: function labelDisplayedRows(_ref) {\n          var from = _ref.from,\n              to = _ref.to,\n              count = _ref.count;\n          return \"\".concat(from, \"-\").concat(to, \" de \").concat(count);\n        },\n        backIconButtonProps: {\n          'aria-label': 'Anterior'\n        },\n        nextIconButtonProps: {\n          'aria-label': 'Siguiente'\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: function onChangeRowsPerPage(e, foodDatabase) {\n          return _this4.handleChangeRowsPerPage(e, foodDatabase);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return EnhancedTable;\n}(React.Component);\n\nEnhancedTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    foods: state.foods,\n    currentUserId: state.currentUser.user.id\n  };\n}\n\n;\nexport default connect(mapStateToProps, null)(withStyles(styles)(EnhancedTable));","map":{"version":3,"sources":["/home/ubuntu/workspace/nutric-client/src/Main/components/MealPlans/TableResult.js"],"names":["React","connect","classNames","PropTypes","withStyles","Table","TableBody","TableCell","TableHead","TableRow","TableSortLabel","Toolbar","Paper","Tooltip","lighten","TablePagination","Fab","AddIcon","counter","desc","a","b","orderBy","stableSort","array","cmp","stabilizedThis","map","el","index","sort","order","getSorting","rows","id","numeric","disablePadding","label","EnhancedTableHead","createSortHandler","property","event","props","onRequestSort","row","Component","propTypes","func","isRequired","string","toolbarStyles","theme","root","paddingRight","textAlign","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","spacer","flex","actions","title","EnhancedTableToolbar","numSelected","classes","object","number","styles","width","marginTop","spacing","unit","marginBottom","tableWrapper","overflowX","tableRow","fontSize","EnhancedTable","state","selected","page","rowsPerPage","handleRequestSort","setState","handleChangePage","handleChangeRowsPerPage","target","value","isSelected","indexOf","tableId","selectedFood","foodDatabase","foods","food","_id","foodName","calories_kcal","fat_g","carbs_g","protein_g","emptyRows","Math","min","length","table","slice","n","round","e","addNewRecipeButton","selectedInputIdentifier","height","from","to","count","mapStateToProps","currentUserId","currentUser","user"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {connect} from 'react-redux';\n\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { lighten } from \"@material-ui/core/styles/colorManipulator\";\nimport TablePagination from '@material-ui/core/TablePagination';\n\n\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\n\nlet counter = 0;\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => desc(a, b, orderBy)\n    : (a, b) => -desc(a, b, orderBy);\n}\n\nconst rows = [\n  {\n    id: \"foodName\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Alimento (100g)\"\n  },\n  { \n    id: \"calories_kcal\", \n    numeric: false, \n    disablePadding: true, \n    label: \"Calorías\" \n  },\n  { \n    id: \"fat_g\", \n    numeric: false, \n    disablePadding: true, \n    label: \"Grasa (g)\" \n  },\n  {\n    id: \"carbs_g\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Carbohidratos (g)\"\n  },\n  {\n    id: \"protein_g\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Proteína (g)\"\n  },\n  { \n    id: \"select\", \n    numeric: false, \n    disablePadding: true, \n    label: \"\" \n  }\n];\n\nclass EnhancedTableHead extends React.Component {\n  createSortHandler = property => event => {\n    this.props.onRequestSort(event, property);\n  };\n\n  render() {\n    const {\n      order,\n      orderBy\n    } = this.props;\n\n    return (\n      <TableHead>\n        <TableRow>\n          <TableCell padding=\"checkbox\" />\n          {rows.map(row => {\n            return (\n              <TableCell\n                key={row.id}\n                numeric={row.numeric}\n                padding={row.disablePadding ? \"none\" : \"default\"}\n                sortDirection={orderBy === row.id ? order : false}\n              >\n                <Tooltip\n                  title=\"Ordenar\"\n                  placement={row.numeric ? \"bottom-end\" : \"bottom-start\"}\n                  enterDelay={300}\n                >\n                  <TableSortLabel\n                    active={orderBy === row.id}\n                    direction={order}\n                    onClick={this.createSortHandler(row.id)}\n                  >\n                    {row.label}\n                  </TableSortLabel>\n                </Tooltip>\n              </TableCell>\n            );\n          }, this)}\n        </TableRow>\n      </TableHead>\n    );\n  }\n}\n\nEnhancedTableHead.propTypes = {\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n};\n\nconst toolbarStyles = theme => ({\n  root: {\n    paddingRight: \"0\",\n    textAlign:\"center\"\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark\n        },\n  spacer: {\n    flex: \"1 1 100%\"\n  },\n  actions: {\n    color: theme.palette.text.secondary\n  },\n  title: {\n    flex: \"0 0 auto\"\n  }\n});\n\nlet EnhancedTableToolbar = props => {\n  const { numSelected, classes } = props;\n\n  return (\n    <Toolbar\n      className={classNames(classes.root, {\n        [classes.highlight]: numSelected > 0\n      })}\n    />\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired\n};\n\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3,\n    textAlign:\"center\"\n  },\n\n  tableWrapper: {\n    overflowX: \"auto\"\n  },\n  tableRow:{\n    \"&hover\":{\n      fontSize:\"0.5rem\"\n    }\n  }\n  \n});\n\nclass EnhancedTable extends React.Component {\n  state = {\n    order: \"asc\",\n    orderBy: \"calories\",\n    selected: [],\n    page: 0,\n    rowsPerPage: 5\n  };\n\n  handleRequestSort = (event, property) => {\n    const orderBy = property;\n    let order = \"desc\";\n  \n    if (this.state.orderBy === property && this.state.order === \"desc\") {\n      order = \"asc\";\n    }\n  \n    this.setState({ order, orderBy });\n  };\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = (event) => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\n\n  render() {\n    const { classes, tableId, selectedFood } = this.props;\n    const { order, orderBy, selected, rowsPerPage, page } = this.state;\n    const foodDatabase=this.props.foods.map(function(food){\n      return {id: food._id, foodName: food.foodName, calories_kcal: food.calories_kcal, fat_g: food.fat_g, carbs_g:food.carbs_g, protein_g: food.protein_g}\n    })\n    const emptyRows =\n      rowsPerPage - Math.min(rowsPerPage, foodDatabase.length - page * rowsPerPage);\n\n    return (\n      <Paper id={tableId} className={classes.root}>\n        <div  className={classes.tableWrapper}>\n          <Table className={classes.table} aria-labelledby=\"tableTitle\">\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={this.handleRequestSort}\n              rowCount={foodDatabase.length}\n              style={{textAlign:\"center\"}}\n            />\n            <TableBody>\n              {stableSort(foodDatabase, getSorting(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map(n => {\n                  const isSelected = this.isSelected(n.id);\n                  return (\n                    <TableRow\n                      hover\n                      role=\"checkbox\"\n                      aria-checked={isSelected}\n                      tabIndex={-1}\n                      key={n.id}\n                      selected={isSelected}\n                      className={classes.tableRow}\n                    >\n                      <TableCell padding=\"checkbox\" />\n                      <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        {n.foodName}\n                      </TableCell>\n                      <TableCell style={{textAlign:\"center\"}} numeric>{Math.round(n.calories_kcal*100)/100}</TableCell>\n                      <TableCell style={{textAlign:\"center\"}} numeric>{Math.round(n.fat_g*100)/100}</TableCell>\n                      <TableCell style={{textAlign:\"center\"}} numeric>{Math.round(n.carbs_g*100)/100}</TableCell>\n                      <TableCell style={{textAlign:\"center\"}} numeric>{Math.round(n.protein_g*100)/100}</TableCell>\n                      <TableCell style={{textAlign:\"center\"}} numeric>\n                        <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" onClick={e=>{this.props.addNewRecipeButton(n, this.props.selectedInputIdentifier)}}>\n                          <AddIcon />\n                        </Fab>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 55 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          rowsPerPageOptions={[5]}\n          component=\"div\"\n          count={foodDatabase.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          labelRowsPerPage={'Alimentos por página:'}\n          labelDisplayedRows={({ from, to, count }) => `${from}-${to} de ${count}`}\n          backIconButtonProps={{\n            'aria-label': 'Anterior',\n          }}\n          nextIconButtonProps={{\n            'aria-label': 'Siguiente',\n          }}\n          onChangePage={this.handleChangePage}\n          onChangeRowsPerPage={(e,foodDatabase)=>this.handleChangeRowsPerPage(e,foodDatabase)}\n        />\n      </Paper>\n    );\n  }\n}\n\nEnhancedTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state){\n  return{\n    foods: state.foods,\n    currentUserId: state.currentUser.user.id\n  };\n};\n\nexport default connect(mapStateToProps, null)(withStyles(styles)(EnhancedTable))"]},"metadata":{},"sourceType":"module"}